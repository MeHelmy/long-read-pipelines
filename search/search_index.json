{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Long read pipelines This repository contains pipelines for processing of long read data from PacBio and/or Oxford Nanopore platforms. The pipelines are written in WDL 1.0 intended for use with Google Cloud Platform via the scientific workflow engine, Cromwell . Processing is designed to be reasonably consistent between both long read platforms, and use platform-specific options or tasks where necessary. High level workflows can be found in the wdl/ directory.","title":"Home"},{"location":"#long-read-pipelines","text":"This repository contains pipelines for processing of long read data from PacBio and/or Oxford Nanopore platforms. The pipelines are written in WDL 1.0 intended for use with Google Cloud Platform via the scientific workflow engine, Cromwell . Processing is designed to be reasonably consistent between both long read platforms, and use platform-specific options or tasks where necessary. High level workflows can be found in the wdl/ directory.","title":"Long read pipelines"},{"location":"tasks/AlignReads/","text":"AlignReads Minimap2 Inputs Required RG (String, required ): read group information to be supplied to parameter '-R' (note that tabs should be input as ' ') map_preset (String, required ): preset to be used for minimap2 parameter '-x' reads (Array[File], required ): query sequences to be mapped and aligned ref_fasta (File, required ): reference fasta Optional library (String?) runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\"): [default-valued] prefix for output BAM tags_to_preserve (Array[String], default=[]): sam tags to carry over to aligned bam file Outputs aligned_bam (File) aligned_bai (File) SAMtoPAF Inputs Required sam_formatted_file (File, required ): SAM-formated input file to be converted to PAF (note currently we only support SAM or BAM, not CRAM) Optional index (File?): [optional] index for sam_formatted_file runtime_attr_override (RuntimeAttr?) Outputs pat_formatted_file (File)","title":"AlignReads"},{"location":"tasks/AlignReads/#alignreads","text":"","title":"AlignReads"},{"location":"tasks/AlignReads/#minimap2","text":"","title":"Minimap2"},{"location":"tasks/AlignReads/#inputs","text":"","title":"Inputs"},{"location":"tasks/AlignReads/#required","text":"RG (String, required ): read group information to be supplied to parameter '-R' (note that tabs should be input as ' ') map_preset (String, required ): preset to be used for minimap2 parameter '-x' reads (Array[File], required ): query sequences to be mapped and aligned ref_fasta (File, required ): reference fasta","title":"Required"},{"location":"tasks/AlignReads/#optional","text":"library (String?) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/AlignReads/#defaults","text":"prefix (String, default=\"out\"): [default-valued] prefix for output BAM tags_to_preserve (Array[String], default=[]): sam tags to carry over to aligned bam file","title":"Defaults"},{"location":"tasks/AlignReads/#outputs","text":"aligned_bam (File) aligned_bai (File)","title":"Outputs"},{"location":"tasks/AlignReads/#samtopaf","text":"","title":"SAMtoPAF"},{"location":"tasks/AlignReads/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/AlignReads/#required_1","text":"sam_formatted_file (File, required ): SAM-formated input file to be converted to PAF (note currently we only support SAM or BAM, not CRAM)","title":"Required"},{"location":"tasks/AlignReads/#optional_1","text":"index (File?): [optional] index for sam_formatted_file runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/AlignReads/#outputs_1","text":"pat_formatted_file (File)","title":"Outputs"},{"location":"tasks/BAMutils/","text":"BAMutils GetReadGroupInfo desciption Get some read group information Given a single-readgroup BAM. Will fail if the information isn't present. Inputs Required keys (Array[String], required ): A list of requested fields in the RG line, e.g. ID, SM, LB. uBAM (String, required ) Outputs read_group_info (Map[String,String])","title":"BAMutils"},{"location":"tasks/BAMutils/#bamutils","text":"","title":"BAMutils"},{"location":"tasks/BAMutils/#getreadgroupinfo","text":"desciption Get some read group information Given a single-readgroup BAM. Will fail if the information isn't present.","title":"GetReadGroupInfo"},{"location":"tasks/BAMutils/#inputs","text":"","title":"Inputs"},{"location":"tasks/BAMutils/#required","text":"keys (Array[String], required ): A list of requested fields in the RG line, e.g. ID, SM, LB. uBAM (String, required )","title":"Required"},{"location":"tasks/BAMutils/#outputs","text":"read_group_info (Map[String,String])","title":"Outputs"},{"location":"tasks/Clair/","text":"Clair Clair Inputs Required bai (File, required ): index accompanying the BAM bam (File, required ): input BAM from which to call variants preset (String, required ): calling preset (CCS, ONT) ref_fasta (File, required ): reference to which the BAM was aligned to ref_fasta_fai (File, required ): index accompanying the reference zones (String, required ) Optional chr (String?): chr on which to call variants runtime_attr_override (RuntimeAttr?) sites_vcf (File?): sites VCF sites_vcf_tbi (File?): sites VCF index Outputs pileup_vcf (File?) pileup_vcf_tbi (File?) full_alignment_vcf (File?) full_alignment_tbi (File?) vcf (File) vcf_tbi (File?) gvcf (File) gvcf_tbi (File?)","title":"Clair"},{"location":"tasks/Clair/#clair","text":"","title":"Clair"},{"location":"tasks/Clair/#_1","text":"","title":""},{"location":"tasks/Clair/#_2","text":"","title":""},{"location":"tasks/Clair/#clair_1","text":"","title":"Clair"},{"location":"tasks/Clair/#inputs","text":"","title":"Inputs"},{"location":"tasks/Clair/#required","text":"bai (File, required ): index accompanying the BAM bam (File, required ): input BAM from which to call variants preset (String, required ): calling preset (CCS, ONT) ref_fasta (File, required ): reference to which the BAM was aligned to ref_fasta_fai (File, required ): index accompanying the reference zones (String, required )","title":"Required"},{"location":"tasks/Clair/#optional","text":"chr (String?): chr on which to call variants runtime_attr_override (RuntimeAttr?) sites_vcf (File?): sites VCF sites_vcf_tbi (File?): sites VCF index","title":"Optional"},{"location":"tasks/Clair/#outputs","text":"pileup_vcf (File?) pileup_vcf_tbi (File?) full_alignment_vcf (File?) full_alignment_tbi (File?) vcf (File) vcf_tbi (File?) gvcf (File) gvcf_tbi (File?)","title":"Outputs"},{"location":"tasks/Finalize/","text":"Finalize FinalizeToFile Inputs Required file (File, required ); description : file to finalize; localization_optional : true outdir (String, required ): directory to which files should be uploaded Optional keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. name (String?): name to set for uploaded file runtime_attr_override (RuntimeAttr?) Outputs gcs_path (String) FinalizeToDir Inputs Required files (Array[File], required ); description : files to finalize; localization_optional : true outdir (String, required ): directory to which files should be uploaded Optional keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. runtime_attr_override (RuntimeAttr?) Outputs gcs_dir (String) FinalizeTarGzContents description Copies the contents of the given tar.gz file to the specified bucket. author Jonn Smith email jonn@broadinstitute.org Inputs Required outdir (String, required ): Google cloud path to the destination folder. tar_gz_file (File, required ): Gzipped tar file whose contents we'll copy. Optional keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. runtime_attr_override (RuntimeAttr?): [optional] Additional runtime parameters. Outputs None WriteCompletionFile description Write a file to the given directory indicating the run has completed. author Jonn Smith email jonn@broadinstitute.org Inputs Required outdir (String, required ): Google cloud path to the destination folder. Optional keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. Outputs None WriteNamedFile description Write a file to the given directory with the given name. author Jonn Smith email jonn@broadinstitute.org Inputs Required name (String, required ): Name of the file to write. outdir (String, required ): Google cloud path to the destination folder. Optional keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. Outputs None CompressAndFinalize description Gzip a file and finalize Inputs Required file (File, required ) outdir (String, required ) Optional name (String?) runtime_attr_override (RuntimeAttr?) Outputs gcs_path (String) FinalizeAndCompress description Gzip a bunch of files and finalize to the same 'folder' Inputs Required files (Array[File], required ) outdir (String, required ) prefix (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs gcs_path (String)","title":"Finalize"},{"location":"tasks/Finalize/#finalize","text":"","title":"Finalize"},{"location":"tasks/Finalize/#finalizetofile","text":"","title":"FinalizeToFile"},{"location":"tasks/Finalize/#inputs","text":"","title":"Inputs"},{"location":"tasks/Finalize/#required","text":"file (File, required ); description : file to finalize; localization_optional : true outdir (String, required ): directory to which files should be uploaded","title":"Required"},{"location":"tasks/Finalize/#optional","text":"keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. name (String?): name to set for uploaded file runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Finalize/#outputs","text":"gcs_path (String)","title":"Outputs"},{"location":"tasks/Finalize/#finalizetodir","text":"","title":"FinalizeToDir"},{"location":"tasks/Finalize/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/Finalize/#required_1","text":"files (Array[File], required ); description : files to finalize; localization_optional : true outdir (String, required ): directory to which files should be uploaded","title":"Required"},{"location":"tasks/Finalize/#optional_1","text":"keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Finalize/#outputs_1","text":"gcs_dir (String)","title":"Outputs"},{"location":"tasks/Finalize/#finalizetargzcontents","text":"description Copies the contents of the given tar.gz file to the specified bucket. author Jonn Smith email jonn@broadinstitute.org","title":"FinalizeTarGzContents"},{"location":"tasks/Finalize/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/Finalize/#required_2","text":"outdir (String, required ): Google cloud path to the destination folder. tar_gz_file (File, required ): Gzipped tar file whose contents we'll copy.","title":"Required"},{"location":"tasks/Finalize/#optional_2","text":"keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this. runtime_attr_override (RuntimeAttr?): [optional] Additional runtime parameters.","title":"Optional"},{"location":"tasks/Finalize/#outputs_2","text":"None","title":"Outputs"},{"location":"tasks/Finalize/#writecompletionfile","text":"description Write a file to the given directory indicating the run has completed. author Jonn Smith email jonn@broadinstitute.org","title":"WriteCompletionFile"},{"location":"tasks/Finalize/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/Finalize/#required_3","text":"outdir (String, required ): Google cloud path to the destination folder.","title":"Required"},{"location":"tasks/Finalize/#optional_3","text":"keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this.","title":"Optional"},{"location":"tasks/Finalize/#outputs_3","text":"None","title":"Outputs"},{"location":"tasks/Finalize/#writenamedfile","text":"description Write a file to the given directory with the given name. author Jonn Smith email jonn@broadinstitute.org","title":"WriteNamedFile"},{"location":"tasks/Finalize/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/Finalize/#required_4","text":"name (String, required ): Name of the file to write. outdir (String, required ): Google cloud path to the destination folder.","title":"Required"},{"location":"tasks/Finalize/#optional_4","text":"keyfile (File?): [optional] File used to key this finaliation. Finalization will not take place until the KeyFile exists. This can be used to force the finaliation to wait until a certain point in a workflow. NOTE: The latest WDL development spec includes the after keyword which will obviate this.","title":"Optional"},{"location":"tasks/Finalize/#outputs_4","text":"None","title":"Outputs"},{"location":"tasks/Finalize/#compressandfinalize","text":"description Gzip a file and finalize","title":"CompressAndFinalize"},{"location":"tasks/Finalize/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/Finalize/#required_5","text":"file (File, required ) outdir (String, required )","title":"Required"},{"location":"tasks/Finalize/#optional_5","text":"name (String?) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Finalize/#outputs_5","text":"gcs_path (String)","title":"Outputs"},{"location":"tasks/Finalize/#finalizeandcompress","text":"description Gzip a bunch of files and finalize to the same 'folder'","title":"FinalizeAndCompress"},{"location":"tasks/Finalize/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/Finalize/#required_6","text":"files (Array[File], required ) outdir (String, required ) prefix (String, required )","title":"Required"},{"location":"tasks/Finalize/#optional_6","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Finalize/#outputs_6","text":"gcs_path (String)","title":"Outputs"},{"location":"tasks/Fingerprinting/","text":"Fingerprinting ListGenotypedVCFs Inputs Required fingerprint_store (String, required ) Outputs vcf_gs_paths (File) PickGenotypeVCF Inputs Required fingerprinting_vcf_gs_paths (File, required ): A file holding GS paths to fingerprinting GT'ed VCFs Optional vcf_name (String?): an expression used for picking up VCFs, the filter will be applied to VCF names, a match will lead to the VCF to be included Outputs vcfs (Array[String]) FilterGenotypesVCF Inputs Required fingerprint_vcf (File, required ) Defaults filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV']): An array of chromosome names to filter out when verifying fingerprints Outputs ready_to_use_vcf (File) ExtractGenotypingSites Inputs Required fingerprint_vcf (File, required ) Outputs sites (File) MergeGenotypingSites Inputs Required all_sites (Array[File], required ) Outputs merged_sites (File) ExtractRelevantGenotypingReads description Based on genotyping (SNP) sites, extract reads that overlap those places Inputs Required aligned_bai (File, required ) aligned_bam (File, required ); localization_optional : true genotyping_sites_bed (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs relevant_reads (File) relevant_reads_bai (File) ResetCLRBaseQual Inputs Required arbitrary_bq (Int, required ) bai (File, required ) bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs barbequed_bam (File) barbequed_bai (File) CheckFingerprint description Uses Picard tool CheckFingerprint to verify if the samples in provided VCF and BAM arise from the same biological sample Inputs Required aligned_bai (File, required ) aligned_bam (File, required ); description : GCS path to aligned BAM file, supposed to be of the same sample as from the fingerprinting VCF; localization_optional : true fingerprint_vcf (File, required ): Fingerprint VCF file from local database; note that sample name must be the same as in BAM haplotype_map (File, required ): Happlotype map file for the reference build used. See https://bit.ly/3QyZbwt vcf_sample_name (String, required ): Sample name in VCF, possibly different from that in the BAM. Optional runtime_attr_override (RuntimeAttr?) Outputs summary_metrics (File) detail_metrics (File) metrics_map (Map[String,String]) CheckCLRFingerprint description Uses Picard tool CheckFingerprint to verify if the samples in provided VCF and the CLR BAM arise from the same biological sample. Inputs Required aligned_bai (File, required ) aligned_bam (File, required ) fingerprint_vcf (File, required ) haplotype_map (File, required ): Happlotype map file for the reference build used. See https://bit.ly/3QyZbwt vcf_sample_name (String, required ): Sample name in VCF, possibly different from that in the BAM. Optional runtime_attr_override (RuntimeAttr?) Defaults min_base_q (Int, default=0) Outputs summary_metrics (File) detail_metrics (File) metrics_map (Map[String,String]) ReheaderFullGRCh38VCFtoNoAlt desciption Reheader the fingperint VCF that's generated with full GRCh38 reference to the no_alt header; project specific. Inputs Required full_GRCh38_vcf (File, required ) Outputs reheadered_vcf (File)","title":"Fingerprinting"},{"location":"tasks/Fingerprinting/#fingerprinting","text":"","title":"Fingerprinting"},{"location":"tasks/Fingerprinting/#listgenotypedvcfs","text":"","title":"ListGenotypedVCFs"},{"location":"tasks/Fingerprinting/#inputs","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required","text":"fingerprint_store (String, required )","title":"Required"},{"location":"tasks/Fingerprinting/#outputs","text":"vcf_gs_paths (File)","title":"Outputs"},{"location":"tasks/Fingerprinting/#pickgenotypevcf","text":"","title":"PickGenotypeVCF"},{"location":"tasks/Fingerprinting/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_1","text":"fingerprinting_vcf_gs_paths (File, required ): A file holding GS paths to fingerprinting GT'ed VCFs","title":"Required"},{"location":"tasks/Fingerprinting/#optional","text":"vcf_name (String?): an expression used for picking up VCFs, the filter will be applied to VCF names, a match will lead to the VCF to be included","title":"Optional"},{"location":"tasks/Fingerprinting/#outputs_1","text":"vcfs (Array[String])","title":"Outputs"},{"location":"tasks/Fingerprinting/#filtergenotypesvcf","text":"","title":"FilterGenotypesVCF"},{"location":"tasks/Fingerprinting/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_2","text":"fingerprint_vcf (File, required )","title":"Required"},{"location":"tasks/Fingerprinting/#defaults","text":"filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV']): An array of chromosome names to filter out when verifying fingerprints","title":"Defaults"},{"location":"tasks/Fingerprinting/#outputs_2","text":"ready_to_use_vcf (File)","title":"Outputs"},{"location":"tasks/Fingerprinting/#extractgenotypingsites","text":"","title":"ExtractGenotypingSites"},{"location":"tasks/Fingerprinting/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_3","text":"fingerprint_vcf (File, required )","title":"Required"},{"location":"tasks/Fingerprinting/#outputs_3","text":"sites (File)","title":"Outputs"},{"location":"tasks/Fingerprinting/#mergegenotypingsites","text":"","title":"MergeGenotypingSites"},{"location":"tasks/Fingerprinting/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_4","text":"all_sites (Array[File], required )","title":"Required"},{"location":"tasks/Fingerprinting/#outputs_4","text":"merged_sites (File)","title":"Outputs"},{"location":"tasks/Fingerprinting/#extractrelevantgenotypingreads","text":"description Based on genotyping (SNP) sites, extract reads that overlap those places","title":"ExtractRelevantGenotypingReads"},{"location":"tasks/Fingerprinting/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_5","text":"aligned_bai (File, required ) aligned_bam (File, required ); localization_optional : true genotyping_sites_bed (File, required )","title":"Required"},{"location":"tasks/Fingerprinting/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Fingerprinting/#outputs_5","text":"relevant_reads (File) relevant_reads_bai (File)","title":"Outputs"},{"location":"tasks/Fingerprinting/#resetclrbasequal","text":"","title":"ResetCLRBaseQual"},{"location":"tasks/Fingerprinting/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_6","text":"arbitrary_bq (Int, required ) bai (File, required ) bam (File, required )","title":"Required"},{"location":"tasks/Fingerprinting/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Fingerprinting/#outputs_6","text":"barbequed_bam (File) barbequed_bai (File)","title":"Outputs"},{"location":"tasks/Fingerprinting/#checkfingerprint","text":"description Uses Picard tool CheckFingerprint to verify if the samples in provided VCF and BAM arise from the same biological sample","title":"CheckFingerprint"},{"location":"tasks/Fingerprinting/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_7","text":"aligned_bai (File, required ) aligned_bam (File, required ); description : GCS path to aligned BAM file, supposed to be of the same sample as from the fingerprinting VCF; localization_optional : true fingerprint_vcf (File, required ): Fingerprint VCF file from local database; note that sample name must be the same as in BAM haplotype_map (File, required ): Happlotype map file for the reference build used. See https://bit.ly/3QyZbwt vcf_sample_name (String, required ): Sample name in VCF, possibly different from that in the BAM.","title":"Required"},{"location":"tasks/Fingerprinting/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Fingerprinting/#outputs_7","text":"summary_metrics (File) detail_metrics (File) metrics_map (Map[String,String])","title":"Outputs"},{"location":"tasks/Fingerprinting/#checkclrfingerprint","text":"description Uses Picard tool CheckFingerprint to verify if the samples in provided VCF and the CLR BAM arise from the same biological sample.","title":"CheckCLRFingerprint"},{"location":"tasks/Fingerprinting/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_8","text":"aligned_bai (File, required ) aligned_bam (File, required ) fingerprint_vcf (File, required ) haplotype_map (File, required ): Happlotype map file for the reference build used. See https://bit.ly/3QyZbwt vcf_sample_name (String, required ): Sample name in VCF, possibly different from that in the BAM.","title":"Required"},{"location":"tasks/Fingerprinting/#optional_4","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Fingerprinting/#defaults_1","text":"min_base_q (Int, default=0)","title":"Defaults"},{"location":"tasks/Fingerprinting/#outputs_8","text":"summary_metrics (File) detail_metrics (File) metrics_map (Map[String,String])","title":"Outputs"},{"location":"tasks/Fingerprinting/#reheaderfullgrch38vcftonoalt","text":"desciption Reheader the fingperint VCF that's generated with full GRCh38 reference to the no_alt header; project specific.","title":"ReheaderFullGRCh38VCFtoNoAlt"},{"location":"tasks/Fingerprinting/#inputs_9","text":"","title":"Inputs"},{"location":"tasks/Fingerprinting/#required_9","text":"full_GRCh38_vcf (File, required )","title":"Required"},{"location":"tasks/Fingerprinting/#outputs_9","text":"reheadered_vcf (File)","title":"Outputs"},{"location":"tasks/GeneralUtils/","text":"GeneralUtils TarGZFiles description Zip up a list of files to a tar.gz file. Inputs Required files (Array[File], required ) name (String, required ) Outputs you_got_it (File) GetTodayDate desciption Generates a YYYY-MM-DD date of today (when this task is called). UTC. volatile true Inputs None Outputs yyyy_mm_dd (String)","title":"GeneralUtils"},{"location":"tasks/GeneralUtils/#generalutils","text":"","title":"GeneralUtils"},{"location":"tasks/GeneralUtils/#targzfiles","text":"description Zip up a list of files to a tar.gz file.","title":"TarGZFiles"},{"location":"tasks/GeneralUtils/#inputs","text":"","title":"Inputs"},{"location":"tasks/GeneralUtils/#required","text":"files (Array[File], required ) name (String, required )","title":"Required"},{"location":"tasks/GeneralUtils/#outputs","text":"you_got_it (File)","title":"Outputs"},{"location":"tasks/GeneralUtils/#gettodaydate","text":"desciption Generates a YYYY-MM-DD date of today (when this task is called). UTC. volatile true","title":"GetTodayDate"},{"location":"tasks/GeneralUtils/#inputs_1","text":"None","title":"Inputs"},{"location":"tasks/GeneralUtils/#outputs_1","text":"yyyy_mm_dd (String)","title":"Outputs"},{"location":"tasks/Hail/","text":"Hail ConvertToHailMT description Convert a .vcf.bgz file to a Hail MatrixTable and copy it to a final gs:// URL. Inputs Required gvcf (File, required ) outdir (String, required ) tbi (File, required ) Optional ref_fai (String?) ref_fasta (String?) runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") reference (String, default=\"GRCh38\") Outputs gcs_path (String)","title":"Hail"},{"location":"tasks/Hail/#hail","text":"","title":"Hail"},{"location":"tasks/Hail/#converttohailmt","text":"description Convert a .vcf.bgz file to a Hail MatrixTable and copy it to a final gs:// URL.","title":"ConvertToHailMT"},{"location":"tasks/Hail/#inputs","text":"","title":"Inputs"},{"location":"tasks/Hail/#required","text":"gvcf (File, required ) outdir (String, required ) tbi (File, required )","title":"Required"},{"location":"tasks/Hail/#optional","text":"ref_fai (String?) ref_fasta (String?) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Hail/#defaults","text":"prefix (String, default=\"out\") reference (String, default=\"GRCh38\")","title":"Defaults"},{"location":"tasks/Hail/#outputs","text":"gcs_path (String)","title":"Outputs"},{"location":"tasks/JupyterNotebooks/","text":"JupyterNotebooks MASIsoSeqReport description Create a report for a given MAS-ISO-Seq run which summarizes the results using a given Jupyter Notebook template. author Jonn Smith email jonn@broadinstitute.org Inputs Required annotated_bam_file (File, required ): Bam file containing ccs corrected reads with annotated sections in the SG tag. array_element_bam_file (File, required ): Transcriptome aligned reads file in BAM format containing aligned MASSeq array elements as individual reads. array_elements_genome_aligned (File, required ): Genome aligned reads file in BAM format containing aligned MASSeq array elements as individual reads. array_elements_stats (File, required ): Samtools raw stats file created from the aligned MASSeq array elements. ccs_reads_stats (File, required ): Samtools raw stats file created from the aligned CCS corrected reads from the PacBio instrument. ccs_reclaimable_reads (File, required ): Bam file containing ccs rejected reads that are deemed to be reclaimable. ccs_reclaimed_array_elements (File, required ): Bam file containing the unaligned array elements created from reclaimed CCS reads. ccs_reclaimed_reads (File, required ): Bam file containing ccs rejected reads that have been reclaimed. ccs_rejected_bam_file (File, required ): Bam file containing all subreads from zmws that were rejected by CCS. ccs_rejected_longbow_failed_reads (File, required ): Bam file containing ccs reclaimable reads that did not pass longbow filtering and were not reclaimed. ccs_report_file (File, required ): CCS report file from the CCS run for the data from the PacBio instrument. longbow_failed_ccs_reads (File, required ): Bam file containing ccs corrected reads that failed the longbow filter for the model used in this run (CCS Corrected reads ONLY). longbow_failed_reads_file (File, required ): Bam file containing alll reads that failed the longbow filter for the model used in this run (both ccs passed and reclaimed). longbow_passed_ccs_reads (File, required ): Bam file containing ccs corrected reads that passed the longbow filter for the model used in this run (CCS Corrected reads ONLY). longbow_passed_reads_file (File, required ): Bam file containing all reads that passed the longbow filter for the model used in this run (both ccs passed and reclaimed). mas_seq_model (String, required ): Built-in mas-seq model to use. notebook_template (File, required ): Jupyter notebook MASSeq template to run with the given data to produce a MASSeq report. raw_array_elements (File, required ): Bam file containing the raw unaligned array elements created from the longbow_passed_reads_file. raw_ccs_bam_file (File, required ): Unaligned reads file in BAM format from the CCS process (pre-array splitting). sample_name (String, required ): Name of the MAS-seq sample being analyzed in this report. subreads_stats (File, required ): Samtools stats file created from the raw subreads from the PacBio instrument. workflow_dot_file (File, required ): DOT file containing the representation of this workflow used to create and analyze the data. This is included in the QC reports (the DOT file can be generated with womtool). zmw_stats_json_gz (File, required ): ZMW stats json.gz file from the PacBio instrument. Optional approx_raw_subread_array_lengths (File?): [optional] File containing the approximate array length information from the raw (pre-ccs) subreads file (created by get_approx_raw_subread_array_lengths.py in the Cartographer docker container). polymerase_read_lengths_file (File?): [optional] File containing the lengths of each polymerase read from the sequencer (as created by collect_polymerase_read_lengths.py) runtime_attr_override (RuntimeAttr?): [optional] Runtime attributes struct with which to override the docker container runtime.. ten_x_metrics_file (File?): [optional] Stats file from the 10x tool run for the data in this MASSeq run. If not supplied stats will not be displayed in the resulting report. zmw_subread_stats_file (File?): [optional] File containing statistics about the subreads from each ZMW (created by collect_zmw_subread_stats.py in the PBUtils docker container). Defaults prefix (String, default=\"\"): [optional] Prefix to prepend to the name of the generated report. Outputs populated_notebook (File) html_report (File) figures_tar_gz (File) generated_config (File) pickles (Array[File])","title":"JupyterNotebooks"},{"location":"tasks/JupyterNotebooks/#jupyternotebooks","text":"","title":"JupyterNotebooks"},{"location":"tasks/JupyterNotebooks/#masisoseqreport","text":"description Create a report for a given MAS-ISO-Seq run which summarizes the results using a given Jupyter Notebook template. author Jonn Smith email jonn@broadinstitute.org","title":"MASIsoSeqReport"},{"location":"tasks/JupyterNotebooks/#inputs","text":"","title":"Inputs"},{"location":"tasks/JupyterNotebooks/#required","text":"annotated_bam_file (File, required ): Bam file containing ccs corrected reads with annotated sections in the SG tag. array_element_bam_file (File, required ): Transcriptome aligned reads file in BAM format containing aligned MASSeq array elements as individual reads. array_elements_genome_aligned (File, required ): Genome aligned reads file in BAM format containing aligned MASSeq array elements as individual reads. array_elements_stats (File, required ): Samtools raw stats file created from the aligned MASSeq array elements. ccs_reads_stats (File, required ): Samtools raw stats file created from the aligned CCS corrected reads from the PacBio instrument. ccs_reclaimable_reads (File, required ): Bam file containing ccs rejected reads that are deemed to be reclaimable. ccs_reclaimed_array_elements (File, required ): Bam file containing the unaligned array elements created from reclaimed CCS reads. ccs_reclaimed_reads (File, required ): Bam file containing ccs rejected reads that have been reclaimed. ccs_rejected_bam_file (File, required ): Bam file containing all subreads from zmws that were rejected by CCS. ccs_rejected_longbow_failed_reads (File, required ): Bam file containing ccs reclaimable reads that did not pass longbow filtering and were not reclaimed. ccs_report_file (File, required ): CCS report file from the CCS run for the data from the PacBio instrument. longbow_failed_ccs_reads (File, required ): Bam file containing ccs corrected reads that failed the longbow filter for the model used in this run (CCS Corrected reads ONLY). longbow_failed_reads_file (File, required ): Bam file containing alll reads that failed the longbow filter for the model used in this run (both ccs passed and reclaimed). longbow_passed_ccs_reads (File, required ): Bam file containing ccs corrected reads that passed the longbow filter for the model used in this run (CCS Corrected reads ONLY). longbow_passed_reads_file (File, required ): Bam file containing all reads that passed the longbow filter for the model used in this run (both ccs passed and reclaimed). mas_seq_model (String, required ): Built-in mas-seq model to use. notebook_template (File, required ): Jupyter notebook MASSeq template to run with the given data to produce a MASSeq report. raw_array_elements (File, required ): Bam file containing the raw unaligned array elements created from the longbow_passed_reads_file. raw_ccs_bam_file (File, required ): Unaligned reads file in BAM format from the CCS process (pre-array splitting). sample_name (String, required ): Name of the MAS-seq sample being analyzed in this report. subreads_stats (File, required ): Samtools stats file created from the raw subreads from the PacBio instrument. workflow_dot_file (File, required ): DOT file containing the representation of this workflow used to create and analyze the data. This is included in the QC reports (the DOT file can be generated with womtool). zmw_stats_json_gz (File, required ): ZMW stats json.gz file from the PacBio instrument.","title":"Required"},{"location":"tasks/JupyterNotebooks/#optional","text":"approx_raw_subread_array_lengths (File?): [optional] File containing the approximate array length information from the raw (pre-ccs) subreads file (created by get_approx_raw_subread_array_lengths.py in the Cartographer docker container). polymerase_read_lengths_file (File?): [optional] File containing the lengths of each polymerase read from the sequencer (as created by collect_polymerase_read_lengths.py) runtime_attr_override (RuntimeAttr?): [optional] Runtime attributes struct with which to override the docker container runtime.. ten_x_metrics_file (File?): [optional] Stats file from the 10x tool run for the data in this MASSeq run. If not supplied stats will not be displayed in the resulting report. zmw_subread_stats_file (File?): [optional] File containing statistics about the subreads from each ZMW (created by collect_zmw_subread_stats.py in the PBUtils docker container).","title":"Optional"},{"location":"tasks/JupyterNotebooks/#defaults","text":"prefix (String, default=\"\"): [optional] Prefix to prepend to the name of the generated report.","title":"Defaults"},{"location":"tasks/JupyterNotebooks/#outputs","text":"populated_notebook (File) html_report (File) figures_tar_gz (File) generated_config (File) pickles (Array[File])","title":"Outputs"},{"location":"tasks/MASSeq/","text":"MASSeq RemoveMasSeqTruncatedReads Inputs Required bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs non_trucated_bam (File) non_trucated_bai (File) AdjustUmiSequenceWithAdapterAlignment description Extracts a new UMI from each given read by aligning the preceding adapter sequences to the read. author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ) Optional post_umi_seq (String?) post_umi_tag (String?) pre_pre_umi_seq (String?) pre_umi_seq (String?) pre_umi_tag (String?) runtime_attr_override (RuntimeAttr?) Defaults existing_umi_tag (String, default=\"ZU\") new_umi_tag (String, default=\"JX\") prefix (String, default=\"out\") umi_length (Int, default=10) Outputs umi_adjusted_bam (File) log (File) FilterMasSeqReads Inputs Required input_bai (File, required ) input_bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults maxEndClipping (Int, default=1000) maxReadLength (Int, default=15000) prefix (String, default=\"out\") Outputs bam (File) bai (File) RenameSingleCellBamTagsForMasIsoSeqV0 description Rename the single-cell tags in MAS-ISO-seq v0 data (CB -> Jp; ZU -> Jq ...). author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"tags_renamed\") Outputs bam_out (File) bai (File) RestoreSingleCellBamTagsForMasIsoSeqV0 description Restore the single-cell tags in MAS-ISO-seq v0 data (Jp -> Cb; Jq -> ZU ...). author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"tags_restored\") Outputs bam_out (File) bai (File)","title":"MASSeq"},{"location":"tasks/MASSeq/#masseq","text":"","title":"MASSeq"},{"location":"tasks/MASSeq/#removemasseqtruncatedreads","text":"","title":"RemoveMasSeqTruncatedReads"},{"location":"tasks/MASSeq/#inputs","text":"","title":"Inputs"},{"location":"tasks/MASSeq/#required","text":"bam (File, required )","title":"Required"},{"location":"tasks/MASSeq/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/MASSeq/#defaults","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/MASSeq/#outputs","text":"non_trucated_bam (File) non_trucated_bai (File)","title":"Outputs"},{"location":"tasks/MASSeq/#adjustumisequencewithadapteralignment","text":"description Extracts a new UMI from each given read by aligning the preceding adapter sequences to the read. author Jonn Smith email jonn@broadinstitute.org","title":"AdjustUmiSequenceWithAdapterAlignment"},{"location":"tasks/MASSeq/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/MASSeq/#required_1","text":"bam (File, required )","title":"Required"},{"location":"tasks/MASSeq/#optional_1","text":"post_umi_seq (String?) post_umi_tag (String?) pre_pre_umi_seq (String?) pre_umi_seq (String?) pre_umi_tag (String?) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/MASSeq/#defaults_1","text":"existing_umi_tag (String, default=\"ZU\") new_umi_tag (String, default=\"JX\") prefix (String, default=\"out\") umi_length (Int, default=10)","title":"Defaults"},{"location":"tasks/MASSeq/#outputs_1","text":"umi_adjusted_bam (File) log (File)","title":"Outputs"},{"location":"tasks/MASSeq/#filtermasseqreads","text":"","title":"FilterMasSeqReads"},{"location":"tasks/MASSeq/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/MASSeq/#required_2","text":"input_bai (File, required ) input_bam (File, required )","title":"Required"},{"location":"tasks/MASSeq/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/MASSeq/#defaults_2","text":"maxEndClipping (Int, default=1000) maxReadLength (Int, default=15000) prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/MASSeq/#outputs_2","text":"bam (File) bai (File)","title":"Outputs"},{"location":"tasks/MASSeq/#renamesinglecellbamtagsformasisoseqv0","text":"description Rename the single-cell tags in MAS-ISO-seq v0 data (CB -> Jp; ZU -> Jq ...). author Jonn Smith email jonn@broadinstitute.org","title":"RenameSingleCellBamTagsForMasIsoSeqV0"},{"location":"tasks/MASSeq/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/MASSeq/#required_3","text":"bam (File, required )","title":"Required"},{"location":"tasks/MASSeq/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/MASSeq/#defaults_3","text":"prefix (String, default=\"tags_renamed\")","title":"Defaults"},{"location":"tasks/MASSeq/#outputs_3","text":"bam_out (File) bai (File)","title":"Outputs"},{"location":"tasks/MASSeq/#restoresinglecellbamtagsformasisoseqv0","text":"description Restore the single-cell tags in MAS-ISO-seq v0 data (Jp -> Cb; Jq -> ZU ...). author Jonn Smith email jonn@broadinstitute.org","title":"RestoreSingleCellBamTagsForMasIsoSeqV0"},{"location":"tasks/MASSeq/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/MASSeq/#required_4","text":"bam (File, required )","title":"Required"},{"location":"tasks/MASSeq/#optional_4","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/MASSeq/#defaults_4","text":"prefix (String, default=\"tags_restored\")","title":"Defaults"},{"location":"tasks/MASSeq/#outputs_4","text":"bam_out (File) bai (File)","title":"Outputs"},{"location":"tasks/Medaka/","text":"Medaka MedakaPolish Inputs Required basecalled_reads (File, required ): basecalled reads to be used with polishing draft_assembly (File, required ): draft assembly to be polished Optional runtime_attr_override (RuntimeAttr?) Defaults model (String, default=\"r941_prom_high_g360\"): run medaka tools list_models and pick string with the correct pore type, machine, and guppy version n_rounds (Int, default=3): number of polishing rounds to apply prefix (String, default=\"consensus\"): prefix for output files Outputs polished_assembly (File)","title":"Medaka"},{"location":"tasks/Medaka/#medaka","text":"","title":"Medaka"},{"location":"tasks/Medaka/#_1","text":"","title":""},{"location":"tasks/Medaka/#_2","text":"","title":""},{"location":"tasks/Medaka/#medakapolish","text":"","title":"MedakaPolish"},{"location":"tasks/Medaka/#inputs","text":"","title":"Inputs"},{"location":"tasks/Medaka/#required","text":"basecalled_reads (File, required ): basecalled reads to be used with polishing draft_assembly (File, required ): draft assembly to be polished","title":"Required"},{"location":"tasks/Medaka/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Medaka/#defaults","text":"model (String, default=\"r941_prom_high_g360\"): run medaka tools list_models and pick string with the correct pore type, machine, and guppy version n_rounds (Int, default=3): number of polishing rounds to apply prefix (String, default=\"consensus\"): prefix for output files","title":"Defaults"},{"location":"tasks/Medaka/#outputs","text":"polished_assembly (File)","title":"Outputs"},{"location":"tasks/NanoPlot/","text":"NanoPlot NanoPlotFromSummary Inputs Required summary_files (Array[File], required ) Optional runtime_attr_override (RuntimeAttr?) Outputs stats (File) stats_map (Map[String,Float]) plots (Array[File]) ActivePores_Over_Time (File) ActivityMap_ReadsPerChannel (File) CumulativeYieldPlot_Gigabases (File) CumulativeYieldPlot_NumberOfReads (File) LengthvsQualityScatterPlot_dot (File) LengthvsQualityScatterPlot_kde (File) Non_weightedHistogramReadlength (File) Non_weightedLogTransformed_HistogramReadlength (File) NumberOfReads_Over_Time (File) TimeLengthViolinPlot (File) TimeQualityViolinPlot (File) WeightedHistogramReadlength (File) WeightedLogTransformed_HistogramReadlength (File) Yield_By_Length (File) NanoPlotFromRichFastqs Inputs Required fastqs (Array[File], required ) Optional runtime_attr_override (RuntimeAttr?) Outputs stats (File) stats_map (Map[String,Float]) plots (Array[File]) ActivePores_Over_Time (File) ActivityMap_ReadsPerChannel (File) CumulativeYieldPlot_Gigabases (File) CumulativeYieldPlot_NumberOfReads (File) LengthvsQualityScatterPlot_dot (File) LengthvsQualityScatterPlot_kde (File) Non_weightedHistogramReadlength (File) Non_weightedLogTransformed_HistogramReadlength (File) NumberOfReads_Over_Time (File) TimeLengthViolinPlot (File) TimeQualityViolinPlot (File) WeightedHistogramReadlength (File) WeightedLogTransformed_HistogramReadlength (File) Yield_By_Length (File) NanoPlotFromBam Inputs Required bai (File, required ) bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs stats (File) stats_map (Map[String,Float]) plots (Array[File]) NanoPlotFromUBam Inputs Required bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs stats (File) stats_map (Map[String,Float]) plots (Array[File]) Non_weightedHistogramReadlength (File) Non_weightedLogTransformed_HistogramReadlength (File) WeightedHistogramReadlength (File) WeightedLogTransformed_HistogramReadlength (File) Yield_By_Length (File)","title":"NanoPlot"},{"location":"tasks/NanoPlot/#nanoplot","text":"","title":"NanoPlot"},{"location":"tasks/NanoPlot/#nanoplotfromsummary","text":"","title":"NanoPlotFromSummary"},{"location":"tasks/NanoPlot/#inputs","text":"","title":"Inputs"},{"location":"tasks/NanoPlot/#required","text":"summary_files (Array[File], required )","title":"Required"},{"location":"tasks/NanoPlot/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/NanoPlot/#outputs","text":"stats (File) stats_map (Map[String,Float]) plots (Array[File]) ActivePores_Over_Time (File) ActivityMap_ReadsPerChannel (File) CumulativeYieldPlot_Gigabases (File) CumulativeYieldPlot_NumberOfReads (File) LengthvsQualityScatterPlot_dot (File) LengthvsQualityScatterPlot_kde (File) Non_weightedHistogramReadlength (File) Non_weightedLogTransformed_HistogramReadlength (File) NumberOfReads_Over_Time (File) TimeLengthViolinPlot (File) TimeQualityViolinPlot (File) WeightedHistogramReadlength (File) WeightedLogTransformed_HistogramReadlength (File) Yield_By_Length (File)","title":"Outputs"},{"location":"tasks/NanoPlot/#nanoplotfromrichfastqs","text":"","title":"NanoPlotFromRichFastqs"},{"location":"tasks/NanoPlot/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/NanoPlot/#required_1","text":"fastqs (Array[File], required )","title":"Required"},{"location":"tasks/NanoPlot/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/NanoPlot/#outputs_1","text":"stats (File) stats_map (Map[String,Float]) plots (Array[File]) ActivePores_Over_Time (File) ActivityMap_ReadsPerChannel (File) CumulativeYieldPlot_Gigabases (File) CumulativeYieldPlot_NumberOfReads (File) LengthvsQualityScatterPlot_dot (File) LengthvsQualityScatterPlot_kde (File) Non_weightedHistogramReadlength (File) Non_weightedLogTransformed_HistogramReadlength (File) NumberOfReads_Over_Time (File) TimeLengthViolinPlot (File) TimeQualityViolinPlot (File) WeightedHistogramReadlength (File) WeightedLogTransformed_HistogramReadlength (File) Yield_By_Length (File)","title":"Outputs"},{"location":"tasks/NanoPlot/#nanoplotfrombam","text":"","title":"NanoPlotFromBam"},{"location":"tasks/NanoPlot/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/NanoPlot/#required_2","text":"bai (File, required ) bam (File, required )","title":"Required"},{"location":"tasks/NanoPlot/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/NanoPlot/#outputs_2","text":"stats (File) stats_map (Map[String,Float]) plots (Array[File])","title":"Outputs"},{"location":"tasks/NanoPlot/#nanoplotfromubam","text":"","title":"NanoPlotFromUBam"},{"location":"tasks/NanoPlot/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/NanoPlot/#required_3","text":"bam (File, required )","title":"Required"},{"location":"tasks/NanoPlot/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/NanoPlot/#outputs_3","text":"stats (File) stats_map (Map[String,Float]) plots (Array[File]) Non_weightedHistogramReadlength (File) Non_weightedLogTransformed_HistogramReadlength (File) WeightedHistogramReadlength (File) WeightedLogTransformed_HistogramReadlength (File) Yield_By_Length (File)","title":"Outputs"},{"location":"tasks/ONTPepper/","text":"ONTPepper Pepper description A 1-stop shop task offered by Pepper for ONT data. Inputs Required bai (File, required ) bam (File, required ) memory (Int, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) threads (Int, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults zones (String, default=\"us-central1-b us-central1-c\"): select which zone (GCP) to run this task Outputs VCF (File) VCF_tbi (File) gVCF (File) gVCF_tbi (File) phasedVCF (File) phasedtbi (File) hap_tagged_bam (File) hap_tagged_bai (File) output_dir_structure (File) phaseset_bed (File) visual_report_html (File)","title":"ONTPepper"},{"location":"tasks/ONTPepper/#ontpepper","text":"","title":"ONTPepper"},{"location":"tasks/ONTPepper/#_1","text":"","title":""},{"location":"tasks/ONTPepper/#_2","text":"","title":""},{"location":"tasks/ONTPepper/#pepper","text":"description A 1-stop shop task offered by Pepper for ONT data.","title":"Pepper"},{"location":"tasks/ONTPepper/#inputs","text":"","title":"Inputs"},{"location":"tasks/ONTPepper/#required","text":"bai (File, required ) bam (File, required ) memory (Int, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) threads (Int, required )","title":"Required"},{"location":"tasks/ONTPepper/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/ONTPepper/#defaults","text":"zones (String, default=\"us-central1-b us-central1-c\"): select which zone (GCP) to run this task","title":"Defaults"},{"location":"tasks/ONTPepper/#outputs","text":"VCF (File) VCF_tbi (File) gVCF (File) gVCF_tbi (File) phasedVCF (File) phasedtbi (File) hap_tagged_bam (File) hap_tagged_bai (File) output_dir_structure (File) phaseset_bed (File) visual_report_html (File)","title":"Outputs"},{"location":"tasks/ONTUtils/","text":"ONTUtils FindSequencingSummaryFiles Inputs Required gcs_input_dir (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs summary_files (Array[String]) GetRunInfo Inputs Required final_summary (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs run_info (Map[String,String]) ListFiles Inputs Required sequencing_summary (String, required ) suffix (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs manifest (File) count (Int) PartitionManifest Inputs Required N (Int, required ) manifest (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs manifest_chunks (Array[File])","title":"ONTUtils"},{"location":"tasks/ONTUtils/#ontutils","text":"","title":"ONTUtils"},{"location":"tasks/ONTUtils/#findsequencingsummaryfiles","text":"","title":"FindSequencingSummaryFiles"},{"location":"tasks/ONTUtils/#inputs","text":"","title":"Inputs"},{"location":"tasks/ONTUtils/#required","text":"gcs_input_dir (String, required )","title":"Required"},{"location":"tasks/ONTUtils/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/ONTUtils/#outputs","text":"summary_files (Array[String])","title":"Outputs"},{"location":"tasks/ONTUtils/#getruninfo","text":"","title":"GetRunInfo"},{"location":"tasks/ONTUtils/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/ONTUtils/#required_1","text":"final_summary (String, required )","title":"Required"},{"location":"tasks/ONTUtils/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/ONTUtils/#outputs_1","text":"run_info (Map[String,String])","title":"Outputs"},{"location":"tasks/ONTUtils/#listfiles","text":"","title":"ListFiles"},{"location":"tasks/ONTUtils/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/ONTUtils/#required_2","text":"sequencing_summary (String, required ) suffix (String, required )","title":"Required"},{"location":"tasks/ONTUtils/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/ONTUtils/#outputs_2","text":"manifest (File) count (Int)","title":"Outputs"},{"location":"tasks/ONTUtils/#partitionmanifest","text":"","title":"PartitionManifest"},{"location":"tasks/ONTUtils/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/ONTUtils/#required_3","text":"N (Int, required ) manifest (File, required )","title":"Required"},{"location":"tasks/ONTUtils/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/ONTUtils/#outputs_3","text":"manifest_chunks (Array[File])","title":"Outputs"},{"location":"tasks/PBUtils/","text":"PBUtils FindBams Inputs Required gcs_input_dir (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs subread_bams (Array[String]) GetRunInfo Inputs Required SM (String, required ) bam (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs run_info (Map[String,String]) is_corrected (Boolean) ShardLongReads Inputs Required unaligned_bam (File, required ) unaligned_pbi (File, required ) Optional num_ssds (Int?) runtime_attr_override (RuntimeAttr?) Defaults drop_per_base_N_pulse_tags (Boolean, default=false) num_shards (Int, default=300) num_threads (Int, default=8) prefix (String, default=\"shard\") zones (String, default=\"us-central1-c us-central1-b\"): select which zone (GCP) to run this task Outputs unmapped_shards (Array[File]) CCS Inputs Required subreads (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults all (Boolean, default=true) by_strand (Boolean, default=false) kinetics (Boolean, default=false) Outputs consensus (File) report (File) report_json (File) metrics_json (File) hifi_summary_json (File) ExtractHifiReads Inputs Required bam (File, required ) library (String, required ): this will override the LB: entry on the @RG line sample_name (String, required ): we always rely explicitly on input SM name Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"hifi\") Outputs hifi_bam (File) MergeCCSReports Inputs Required reports (Array[File], required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs report (File) ExtractUncorrectedReads Inputs Required consensus (File, required ) subreads (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs uncorrected (File) Demultiplex Inputs Required bam (File, required ) barcode_file (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults ccs (Boolean, default=false) dump_removed (Boolean, default=false) guess (Int, default=0) guess_min_count (Int, default=0) isoseq (Boolean, default=false) min_score (Int, default=0) peek (Int, default=0) peek_guess (Boolean, default=false) prefix (String, default=\"demux\") split_bam_named (Boolean, default=false) Outputs demux_bams (Array[File]) counts (File) report (File) summary (File) clips (File?) MakeDetailedDemultiplexingReport Inputs Required report (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults type (String, default=\"png\") Outputs report_files (Array[File]) MakeSummarizedDemultiplexingReport Inputs Required report (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs report_files (Array[File]) MakePerBarcodeDemultiplexingReports Inputs Required report (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults type (String, default=\"png\") Outputs report_files (Array[File]) RefineTranscriptReads Inputs Required bam (File, required ) barcode_file (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"flnc\") require_polya (Boolean, default=true) Outputs refined_bam (File) ClusterTranscripts Inputs Required bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"clustered\") use_qvs (Boolean, default=true) Outputs clustered_bam (File) clustered_pbi (File) hq_fasta (File) hq_bam (File) hq_pbi (File) lq_fasta (File) lq_bam (File) lq_pbi (File) cluster (File) cluster_report_csv (File) transcriptset_xml (File) PolishTranscripts Inputs Required bam (File, required ) subreads_bam (File, required ) subreads_pbi (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"polished\") Outputs polished_bam (File) polished_fastq (File) Align Inputs Required bam (File, required ) drop_per_base_N_pulse_tags (Boolean, required ) map_preset (String, required ) ref_fasta (File, required ) sample_name (String, required ): we always rely explicitly on input SM name Optional library (String?): this will override the LB: entry on the @RG line runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs aligned_bam (File) aligned_bai (File) PBIndex Inputs Required bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs pbi (File) CollapseTranscripts Inputs Required bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") use_qvs (Boolean, default=true) Outputs gff (File) SummarizeCCSReport Inputs Required report (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs zmws_input (Float) zmws_pass_filters (Float) zmws_fail_filters (Float) zmws_shortcut_filters (Float) zmws_pass_filters_pct (Float) zmws_fail_filters_pct (Float) zmws_shortcut_filters_pct (Float) SummarizeXMLMetadata Inputs Required xml (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs xml_total_length (Float) xml_num_records (Float) SummarizePBI Inputs Required pbi (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults qual_threshold (Int, default=0) Outputs results (Map[String,Float])","title":"PBUtils"},{"location":"tasks/PBUtils/#pbutils","text":"","title":"PBUtils"},{"location":"tasks/PBUtils/#findbams","text":"","title":"FindBams"},{"location":"tasks/PBUtils/#inputs","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required","text":"gcs_input_dir (String, required )","title":"Required"},{"location":"tasks/PBUtils/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#outputs","text":"subread_bams (Array[String])","title":"Outputs"},{"location":"tasks/PBUtils/#getruninfo","text":"","title":"GetRunInfo"},{"location":"tasks/PBUtils/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_1","text":"SM (String, required ) bam (String, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#outputs_1","text":"run_info (Map[String,String]) is_corrected (Boolean)","title":"Outputs"},{"location":"tasks/PBUtils/#shardlongreads","text":"","title":"ShardLongReads"},{"location":"tasks/PBUtils/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_2","text":"unaligned_bam (File, required ) unaligned_pbi (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_2","text":"num_ssds (Int?) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults","text":"drop_per_base_N_pulse_tags (Boolean, default=false) num_shards (Int, default=300) num_threads (Int, default=8) prefix (String, default=\"shard\") zones (String, default=\"us-central1-c us-central1-b\"): select which zone (GCP) to run this task","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_2","text":"unmapped_shards (Array[File])","title":"Outputs"},{"location":"tasks/PBUtils/#ccs","text":"","title":"CCS"},{"location":"tasks/PBUtils/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_3","text":"subreads (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_1","text":"all (Boolean, default=true) by_strand (Boolean, default=false) kinetics (Boolean, default=false)","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_3","text":"consensus (File) report (File) report_json (File) metrics_json (File) hifi_summary_json (File)","title":"Outputs"},{"location":"tasks/PBUtils/#extracthifireads","text":"","title":"ExtractHifiReads"},{"location":"tasks/PBUtils/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_4","text":"bam (File, required ) library (String, required ): this will override the LB: entry on the @RG line sample_name (String, required ): we always rely explicitly on input SM name","title":"Required"},{"location":"tasks/PBUtils/#optional_4","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_2","text":"prefix (String, default=\"hifi\")","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_4","text":"hifi_bam (File)","title":"Outputs"},{"location":"tasks/PBUtils/#mergeccsreports","text":"","title":"MergeCCSReports"},{"location":"tasks/PBUtils/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_5","text":"reports (Array[File], required )","title":"Required"},{"location":"tasks/PBUtils/#optional_5","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_3","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_5","text":"report (File)","title":"Outputs"},{"location":"tasks/PBUtils/#extractuncorrectedreads","text":"","title":"ExtractUncorrectedReads"},{"location":"tasks/PBUtils/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_6","text":"consensus (File, required ) subreads (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_6","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_4","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_6","text":"uncorrected (File)","title":"Outputs"},{"location":"tasks/PBUtils/#demultiplex","text":"","title":"Demultiplex"},{"location":"tasks/PBUtils/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_7","text":"bam (File, required ) barcode_file (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_7","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_5","text":"ccs (Boolean, default=false) dump_removed (Boolean, default=false) guess (Int, default=0) guess_min_count (Int, default=0) isoseq (Boolean, default=false) min_score (Int, default=0) peek (Int, default=0) peek_guess (Boolean, default=false) prefix (String, default=\"demux\") split_bam_named (Boolean, default=false)","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_7","text":"demux_bams (Array[File]) counts (File) report (File) summary (File) clips (File?)","title":"Outputs"},{"location":"tasks/PBUtils/#makedetaileddemultiplexingreport","text":"","title":"MakeDetailedDemultiplexingReport"},{"location":"tasks/PBUtils/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_8","text":"report (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_8","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_6","text":"type (String, default=\"png\")","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_8","text":"report_files (Array[File])","title":"Outputs"},{"location":"tasks/PBUtils/#makesummarizeddemultiplexingreport","text":"","title":"MakeSummarizedDemultiplexingReport"},{"location":"tasks/PBUtils/#inputs_9","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_9","text":"report (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_9","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#outputs_9","text":"report_files (Array[File])","title":"Outputs"},{"location":"tasks/PBUtils/#makeperbarcodedemultiplexingreports","text":"","title":"MakePerBarcodeDemultiplexingReports"},{"location":"tasks/PBUtils/#inputs_10","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_10","text":"report (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_10","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_7","text":"type (String, default=\"png\")","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_10","text":"report_files (Array[File])","title":"Outputs"},{"location":"tasks/PBUtils/#refinetranscriptreads","text":"","title":"RefineTranscriptReads"},{"location":"tasks/PBUtils/#inputs_11","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_11","text":"bam (File, required ) barcode_file (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_11","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_8","text":"prefix (String, default=\"flnc\") require_polya (Boolean, default=true)","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_11","text":"refined_bam (File)","title":"Outputs"},{"location":"tasks/PBUtils/#clustertranscripts","text":"","title":"ClusterTranscripts"},{"location":"tasks/PBUtils/#inputs_12","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_12","text":"bam (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_12","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_9","text":"prefix (String, default=\"clustered\") use_qvs (Boolean, default=true)","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_12","text":"clustered_bam (File) clustered_pbi (File) hq_fasta (File) hq_bam (File) hq_pbi (File) lq_fasta (File) lq_bam (File) lq_pbi (File) cluster (File) cluster_report_csv (File) transcriptset_xml (File)","title":"Outputs"},{"location":"tasks/PBUtils/#polishtranscripts","text":"","title":"PolishTranscripts"},{"location":"tasks/PBUtils/#inputs_13","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_13","text":"bam (File, required ) subreads_bam (File, required ) subreads_pbi (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_13","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_10","text":"prefix (String, default=\"polished\")","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_13","text":"polished_bam (File) polished_fastq (File)","title":"Outputs"},{"location":"tasks/PBUtils/#align","text":"","title":"Align"},{"location":"tasks/PBUtils/#inputs_14","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_14","text":"bam (File, required ) drop_per_base_N_pulse_tags (Boolean, required ) map_preset (String, required ) ref_fasta (File, required ) sample_name (String, required ): we always rely explicitly on input SM name","title":"Required"},{"location":"tasks/PBUtils/#optional_14","text":"library (String?): this will override the LB: entry on the @RG line runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_11","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_14","text":"aligned_bam (File) aligned_bai (File)","title":"Outputs"},{"location":"tasks/PBUtils/#pbindex","text":"","title":"PBIndex"},{"location":"tasks/PBUtils/#inputs_15","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_15","text":"bam (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_15","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#outputs_15","text":"pbi (File)","title":"Outputs"},{"location":"tasks/PBUtils/#collapsetranscripts","text":"","title":"CollapseTranscripts"},{"location":"tasks/PBUtils/#inputs_16","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_16","text":"bam (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_16","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_12","text":"prefix (String, default=\"out\") use_qvs (Boolean, default=true)","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_16","text":"gff (File)","title":"Outputs"},{"location":"tasks/PBUtils/#summarizeccsreport","text":"","title":"SummarizeCCSReport"},{"location":"tasks/PBUtils/#inputs_17","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_17","text":"report (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_17","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#outputs_17","text":"zmws_input (Float) zmws_pass_filters (Float) zmws_fail_filters (Float) zmws_shortcut_filters (Float) zmws_pass_filters_pct (Float) zmws_fail_filters_pct (Float) zmws_shortcut_filters_pct (Float)","title":"Outputs"},{"location":"tasks/PBUtils/#summarizexmlmetadata","text":"","title":"SummarizeXMLMetadata"},{"location":"tasks/PBUtils/#inputs_18","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_18","text":"xml (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_18","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#outputs_18","text":"xml_total_length (Float) xml_num_records (Float)","title":"Outputs"},{"location":"tasks/PBUtils/#summarizepbi","text":"","title":"SummarizePBI"},{"location":"tasks/PBUtils/#inputs_19","text":"","title":"Inputs"},{"location":"tasks/PBUtils/#required_19","text":"pbi (File, required )","title":"Required"},{"location":"tasks/PBUtils/#optional_19","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/PBUtils/#defaults_13","text":"qual_threshold (Int, default=0)","title":"Defaults"},{"location":"tasks/PBUtils/#outputs_19","text":"results (Map[String,Float])","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/","text":"Postprocessing_Tasks CreateCountMatrixFromAnnotatedBam description Creates a count matrix TSV file from the given annotated bam file. Bam file must contain tags that indicate the gene/transcript (XG), cell barcode (CB), and umi (BX) of the read. author Jonn Smith email jonn@broadinstitute.org Inputs Required annotated_transcriptome_bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) tx_equivalence_class_assignments (File?) Defaults prefix (String, default=\"umi_tools_group\") umi_tag (String, default=\"ZU\") Outputs count_matrix (File) AggregateUmiAdjustmentStats Inputs Required longbow_umi_adjustment_log_files (Array[File], required ) Optional runtime_attr_override (RuntimeAttr?) Defaults out_name (String, default=\"longbow_umi_adjustment_stats.txt\") Outputs stats (File) MergeBarcodeCounts description Merge all counts for each unique barcode in the given TSV file. Assumes file is unheadered and have two columns: BARCODE COUNT. Merging performed by adding all COUNTs for each BARCODE. author Jonn Smith email jonn@broadinstitute.org Inputs Required barcode_count_tsv (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"merged_counts\") Outputs merged_counts (File) CreateCountMatrixAnndataFromTsv description Creates a python anndata object from the given countmatrix tsv. Expects the input to have been generated by CreateCountMatrixFromAnnotatedBam. The resulting anndata object can be directly read into scanpy for single-cell analysis. author Jonn Smith email jonn@broadinstitute.org Inputs Required count_matrix_tsv (File, required ) genome_annotation_gtf_file (File, required ) Optional equivalence_class_definitions (File?) gencode_reference_gtf_file (File?) overlap_interval_label (String?) overlap_intervals (File?) runtime_attr_override (RuntimeAttr?) Defaults force_anndata_gencode_overwrite (Boolean, default=false) prefix (String, default=\"umi_tools_group\") Outputs transcript_gene_count_anndata_h5ad (File) pickles (Array[File]) CreateCountMatrixAnndataFromEquivalenceClasses description Creates a python anndata object from the given countmatrix tsv and equivalence classes. Expects the input to have been generated by CreateCountMatrixFromAnnotatedBam. The resulting anndata object can be directly read into scanpy for single-cell analysis. author Jonn Smith email jonn@broadinstitute.org Inputs Required count_matrix_tsv (File, required ) gene_equivalence_class_assignments (File, required ) gene_equivalence_class_definitions (File, required ) genome_annotation_gtf_file (File, required ) tx_equivalence_class_assignments (File, required ) tx_equivalence_class_definitions (File, required ) Optional gencode_reference_gtf_file (File?) overlap_interval_label (String?) overlap_intervals (File?) runtime_attr_override (RuntimeAttr?) Defaults force_anndata_gencode_overwrite (Boolean, default=false) prefix (String, default=\"umi_tools_group\") Outputs transcript_gene_count_anndata_h5ad (File) pickles (Array[File]) SubsetCountsMatrixByGenes description Subsets a count matrix TSV file to contain only the transcripts from the given list of genes. Assumes the count matrix was produced by comparison with Gencode (due to data formatting) and that the table is a TSV with samples as rows and transcripts as columns. author Jonn Smith email jonn@broadinstitute.org Inputs Required count_matrix_tsv (File, required ): TSV file containing the counts of each transcript expressed in a sample. (Transcripts in columns. Samples in rows. One header row.) gene_names (Array[String], required ): Array of gene names for which to keep data from the given count matrix TSV. Outputs subset_count_matrix_tsv (File) subset_count_matrix_h5ad (File) QuantifyGffComparison description Create equivalence classes and gene assignments from a set of gffcompare results. author Jonn Smith email jonn@broadinstitute.org Inputs Required gencode_read_refmap (File, required ): Refmap file (produced by gffcompare) comparing the genome reference gtf to input reads (in GFF format). gencode_read_tmap (File, required ): Tmap file (produced by gffcompare) comparing the genome reference gtf to input reads (in GFF format). gencode_st2_refmap (File, required ): Refmap file (produced by gffcompare) comparing the genome reference gtf to the stringtie2 discovered transcriptome. gencode_st2_tmap (File, required ): Tmap file (produced by gffcompare) comparing the genome reference gtf to the stringtie2 discovered transcriptome. genome_gtf (File, required ): Genome annotation GTF file (usually gencode). st2_gencode_refmap (File, required ): Refmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to the genome reference gtf. st2_gencode_tmap (File, required ): Tmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to the genome reference gtf. st2_read_refmap (File, required ): Refmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to input reads (in GFF format). st2_read_tmap (File, required ): Tmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to input reads (in GFF format). Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"reads_comparison\"): Prefix for ouput file. Outputs gene_eq_class_labels_file (File) gene_assignments_file (File) tx_equivalence_class_labels_file (File) tx_equivalence_class_file (File) graph_gpickle (File) CombineEqClassFiles description Combine equivalence classes and gene assignments from disjoint sets of reads produced by QuantifyGffComparison. author Jonn Smith email jonn@broadinstitute.org Inputs Required equivalence_class_definitions (Array[File], required ): TSV files containing transcript equivalence class definitions as produced by QuantifyGffComparison.tx_equivalence_class_labels_file. equivalence_classes (Array[File], required ): TSV files containing read -> transcript equivalence class assignments as produced by QuantifyGffComparison.tx_equivalence_class_file. gene_assignment_files (Array[File], required ): TSV files containing read -> gene equivalence class assignments as produced by QuantifyGffComparison.gene_assignments_file. gene_eq_class_definitions (Array[File], required ): TSV files containing equivalence class definitions for genes as produced by QuantifyGffComparison.gene_eq_class_labels_file. Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"combined\"): Prefix for ouput file. Outputs combined_gene_eq_class_defs (File) combined_gene_eq_class_assignments (File) combined_tx_eq_class_defs (File) combined_tx_eq_class_assignments (File) CopyEqClassInfoToTag description Copy the gene assignment for each given read into the given tag for each read. author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ) eq_class_file (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults eq_class_tag (String, default=\"eq\") gene_tag (String, default=\"XG\") prefix (String, default=\"combined\") Outputs bam_out (File) bai (File)","title":"Postprocessing_Tasks"},{"location":"tasks/Postprocessing_Tasks/#postprocessing_tasks","text":"","title":"Postprocessing_Tasks"},{"location":"tasks/Postprocessing_Tasks/#createcountmatrixfromannotatedbam","text":"description Creates a count matrix TSV file from the given annotated bam file. Bam file must contain tags that indicate the gene/transcript (XG), cell barcode (CB), and umi (BX) of the read. author Jonn Smith email jonn@broadinstitute.org","title":"CreateCountMatrixFromAnnotatedBam"},{"location":"tasks/Postprocessing_Tasks/#inputs","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required","text":"annotated_transcriptome_bam (File, required )","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional","text":"runtime_attr_override (RuntimeAttr?) tx_equivalence_class_assignments (File?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults","text":"prefix (String, default=\"umi_tools_group\") umi_tag (String, default=\"ZU\")","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs","text":"count_matrix (File)","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#aggregateumiadjustmentstats","text":"","title":"AggregateUmiAdjustmentStats"},{"location":"tasks/Postprocessing_Tasks/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_1","text":"longbow_umi_adjustment_log_files (Array[File], required )","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults_1","text":"out_name (String, default=\"longbow_umi_adjustment_stats.txt\")","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs_1","text":"stats (File)","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#mergebarcodecounts","text":"description Merge all counts for each unique barcode in the given TSV file. Assumes file is unheadered and have two columns: BARCODE COUNT. Merging performed by adding all COUNTs for each BARCODE. author Jonn Smith email jonn@broadinstitute.org","title":"MergeBarcodeCounts"},{"location":"tasks/Postprocessing_Tasks/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_2","text":"barcode_count_tsv (File, required )","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults_2","text":"prefix (String, default=\"merged_counts\")","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs_2","text":"merged_counts (File)","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#createcountmatrixanndatafromtsv","text":"description Creates a python anndata object from the given countmatrix tsv. Expects the input to have been generated by CreateCountMatrixFromAnnotatedBam. The resulting anndata object can be directly read into scanpy for single-cell analysis. author Jonn Smith email jonn@broadinstitute.org","title":"CreateCountMatrixAnndataFromTsv"},{"location":"tasks/Postprocessing_Tasks/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_3","text":"count_matrix_tsv (File, required ) genome_annotation_gtf_file (File, required )","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional_3","text":"equivalence_class_definitions (File?) gencode_reference_gtf_file (File?) overlap_interval_label (String?) overlap_intervals (File?) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults_3","text":"force_anndata_gencode_overwrite (Boolean, default=false) prefix (String, default=\"umi_tools_group\")","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs_3","text":"transcript_gene_count_anndata_h5ad (File) pickles (Array[File])","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#createcountmatrixanndatafromequivalenceclasses","text":"description Creates a python anndata object from the given countmatrix tsv and equivalence classes. Expects the input to have been generated by CreateCountMatrixFromAnnotatedBam. The resulting anndata object can be directly read into scanpy for single-cell analysis. author Jonn Smith email jonn@broadinstitute.org","title":"CreateCountMatrixAnndataFromEquivalenceClasses"},{"location":"tasks/Postprocessing_Tasks/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_4","text":"count_matrix_tsv (File, required ) gene_equivalence_class_assignments (File, required ) gene_equivalence_class_definitions (File, required ) genome_annotation_gtf_file (File, required ) tx_equivalence_class_assignments (File, required ) tx_equivalence_class_definitions (File, required )","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional_4","text":"gencode_reference_gtf_file (File?) overlap_interval_label (String?) overlap_intervals (File?) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults_4","text":"force_anndata_gencode_overwrite (Boolean, default=false) prefix (String, default=\"umi_tools_group\")","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs_4","text":"transcript_gene_count_anndata_h5ad (File) pickles (Array[File])","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#subsetcountsmatrixbygenes","text":"description Subsets a count matrix TSV file to contain only the transcripts from the given list of genes. Assumes the count matrix was produced by comparison with Gencode (due to data formatting) and that the table is a TSV with samples as rows and transcripts as columns. author Jonn Smith email jonn@broadinstitute.org","title":"SubsetCountsMatrixByGenes"},{"location":"tasks/Postprocessing_Tasks/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_5","text":"count_matrix_tsv (File, required ): TSV file containing the counts of each transcript expressed in a sample. (Transcripts in columns. Samples in rows. One header row.) gene_names (Array[String], required ): Array of gene names for which to keep data from the given count matrix TSV.","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#outputs_5","text":"subset_count_matrix_tsv (File) subset_count_matrix_h5ad (File)","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#quantifygffcomparison","text":"description Create equivalence classes and gene assignments from a set of gffcompare results. author Jonn Smith email jonn@broadinstitute.org","title":"QuantifyGffComparison"},{"location":"tasks/Postprocessing_Tasks/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_6","text":"gencode_read_refmap (File, required ): Refmap file (produced by gffcompare) comparing the genome reference gtf to input reads (in GFF format). gencode_read_tmap (File, required ): Tmap file (produced by gffcompare) comparing the genome reference gtf to input reads (in GFF format). gencode_st2_refmap (File, required ): Refmap file (produced by gffcompare) comparing the genome reference gtf to the stringtie2 discovered transcriptome. gencode_st2_tmap (File, required ): Tmap file (produced by gffcompare) comparing the genome reference gtf to the stringtie2 discovered transcriptome. genome_gtf (File, required ): Genome annotation GTF file (usually gencode). st2_gencode_refmap (File, required ): Refmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to the genome reference gtf. st2_gencode_tmap (File, required ): Tmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to the genome reference gtf. st2_read_refmap (File, required ): Refmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to input reads (in GFF format). st2_read_tmap (File, required ): Tmap file (produced by gffcompare) comparing the stringtie2 discovered transcriptome to input reads (in GFF format).","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional_5","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults_5","text":"prefix (String, default=\"reads_comparison\"): Prefix for ouput file.","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs_6","text":"gene_eq_class_labels_file (File) gene_assignments_file (File) tx_equivalence_class_labels_file (File) tx_equivalence_class_file (File) graph_gpickle (File)","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#combineeqclassfiles","text":"description Combine equivalence classes and gene assignments from disjoint sets of reads produced by QuantifyGffComparison. author Jonn Smith email jonn@broadinstitute.org","title":"CombineEqClassFiles"},{"location":"tasks/Postprocessing_Tasks/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_7","text":"equivalence_class_definitions (Array[File], required ): TSV files containing transcript equivalence class definitions as produced by QuantifyGffComparison.tx_equivalence_class_labels_file. equivalence_classes (Array[File], required ): TSV files containing read -> transcript equivalence class assignments as produced by QuantifyGffComparison.tx_equivalence_class_file. gene_assignment_files (Array[File], required ): TSV files containing read -> gene equivalence class assignments as produced by QuantifyGffComparison.gene_assignments_file. gene_eq_class_definitions (Array[File], required ): TSV files containing equivalence class definitions for genes as produced by QuantifyGffComparison.gene_eq_class_labels_file.","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional_6","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults_6","text":"prefix (String, default=\"combined\"): Prefix for ouput file.","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs_7","text":"combined_gene_eq_class_defs (File) combined_gene_eq_class_assignments (File) combined_tx_eq_class_defs (File) combined_tx_eq_class_assignments (File)","title":"Outputs"},{"location":"tasks/Postprocessing_Tasks/#copyeqclassinfototag","text":"description Copy the gene assignment for each given read into the given tag for each read. author Jonn Smith email jonn@broadinstitute.org","title":"CopyEqClassInfoToTag"},{"location":"tasks/Postprocessing_Tasks/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/Postprocessing_Tasks/#required_8","text":"bam (File, required ) eq_class_file (File, required )","title":"Required"},{"location":"tasks/Postprocessing_Tasks/#optional_7","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Postprocessing_Tasks/#defaults_7","text":"eq_class_tag (String, default=\"eq\") gene_tag (String, default=\"XG\") prefix (String, default=\"combined\")","title":"Defaults"},{"location":"tasks/Postprocessing_Tasks/#outputs_8","text":"bam_out (File) bai (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/","text":"Preprocessing_Tasks SplitBamBySampleAndCellBarcodeTask description Convert a single annotated (via the 10x tool), aligned bam file into individual FASTA files named by sample name and cell barcode. Also produces a manifest file for FLAIR to easily quantify output. author Jonn Smith email jonn@broadinstitute.org Inputs Required aligned_annotated_bam (File, required ): Bam file containing aligned reads that have been annotated with the 10x tool. Defaults output_base_name (String, default=\"reads\"): [optional] base name to give to every output file. Should correspond to some unique identifier from this dataset. Outputs flair_manifest (File) sample_cell_barcode_fasta_files (Array[File]) fasta_tar_gz_out (File) DownsampleToIsoSeqEquivalent description Downsample a given MAS-seq array element bam file into one containing only 1 read per ZMW (equivalent to IsoSeq). author Jonn Smith email jonn@broadinstitute.org Inputs Required array_element_bam (File, required ): Bam file containing aligned reads that have been annotated with the 10x tool. Defaults prefix (String, default=\"downsampled_masseq\"): [optional] base name to give to every output file. Should correspond to some unique identifier from this dataset. Outputs downsampled_bam (File) DemuxMasSeqDataByIndex description This workflow will split MAS-seq data that is indexed with a 10bp sequence at the 3' end. author Jonn Smith email jonn@broadinstitute.org Inputs Required array_bam (File, required ): Bam file containing annotated MAS-seq array reads that contain a 10bp index near the 3' end.. Outputs demux_i1 (File) demux_i2 (File) demux_i3 (File) demux_i4 (File) demux_ambiguous (File) log_file (File) MergeDemuxMasSeqByIndexLogs description This workflow will merge logs from the DemuxMasSeqDataByIndex task. author Jonn Smith email jonn@broadinstitute.org Inputs Required demux_logs (Array[File], required ): Log files from DemuxMasSeqDataByIndex task. Outputs merged_log (File) SplitBamByContig description Split a given bam file into separate files by contig. author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ): Bamfile to be split by contig. Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"reads\"): Prefix for ouput files. Outputs contig_bams (Array[File]) contig_names (Array[String]) ConvertSplicedBamToGff description Convert a given splice aligned bam file into a gff file. author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ): Bamfile to be converted to gff. Optional runtime_attr_override (RuntimeAttr?) Outputs gff (File) GffCompare description Compare two GFF files author Jonn Smith email jonn@broadinstitute.org Inputs Required gff_query (File, required ): Gff file to be used as a query (compared against the gff_ref). gff_ref (File, required ): Gff file to be used as a reference. ref_fasta (File, required ): Reference fasta file. Optional ref_fasta_index (File?): Reference fasta file index. runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs refmap (File) tmap (File) tracking (File) loci (File) annotated_gtf (File) stats (File) log (File) RestoreOriginalReadNames description Copies the contents of the XM tag to the read name and sets the XM tag to the read name. author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ): Bam file in which to restore the original read names. Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs bam_out (File) bai_out (File) CorrectUmisWithSetCover description Corrects the UMIs in the given reads using a set cover algorithm author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ): Bam file for which to correct UMIs. Optional runtime_attr_override (RuntimeAttr?) Defaults is_extracted (Boolean, default=true) prefix (String, default=\"out\"): Prefix to assign to output files. Outputs corrected_umi_reads (File) corrected_umi_reads_index (File) uncorrected_umi_reads (File)","title":"Preprocessing_Tasks"},{"location":"tasks/Preprocessing_Tasks/#preprocessing_tasks","text":"","title":"Preprocessing_Tasks"},{"location":"tasks/Preprocessing_Tasks/#splitbambysampleandcellbarcodetask","text":"description Convert a single annotated (via the 10x tool), aligned bam file into individual FASTA files named by sample name and cell barcode. Also produces a manifest file for FLAIR to easily quantify output. author Jonn Smith email jonn@broadinstitute.org","title":"SplitBamBySampleAndCellBarcodeTask"},{"location":"tasks/Preprocessing_Tasks/#inputs","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required","text":"aligned_annotated_bam (File, required ): Bam file containing aligned reads that have been annotated with the 10x tool.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#defaults","text":"output_base_name (String, default=\"reads\"): [optional] base name to give to every output file. Should correspond to some unique identifier from this dataset.","title":"Defaults"},{"location":"tasks/Preprocessing_Tasks/#outputs","text":"flair_manifest (File) sample_cell_barcode_fasta_files (Array[File]) fasta_tar_gz_out (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#downsampletoisoseqequivalent","text":"description Downsample a given MAS-seq array element bam file into one containing only 1 read per ZMW (equivalent to IsoSeq). author Jonn Smith email jonn@broadinstitute.org","title":"DownsampleToIsoSeqEquivalent"},{"location":"tasks/Preprocessing_Tasks/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_1","text":"array_element_bam (File, required ): Bam file containing aligned reads that have been annotated with the 10x tool.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#defaults_1","text":"prefix (String, default=\"downsampled_masseq\"): [optional] base name to give to every output file. Should correspond to some unique identifier from this dataset.","title":"Defaults"},{"location":"tasks/Preprocessing_Tasks/#outputs_1","text":"downsampled_bam (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#demuxmasseqdatabyindex","text":"description This workflow will split MAS-seq data that is indexed with a 10bp sequence at the 3' end. author Jonn Smith email jonn@broadinstitute.org","title":"DemuxMasSeqDataByIndex"},{"location":"tasks/Preprocessing_Tasks/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_2","text":"array_bam (File, required ): Bam file containing annotated MAS-seq array reads that contain a 10bp index near the 3' end..","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#outputs_2","text":"demux_i1 (File) demux_i2 (File) demux_i3 (File) demux_i4 (File) demux_ambiguous (File) log_file (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#mergedemuxmasseqbyindexlogs","text":"description This workflow will merge logs from the DemuxMasSeqDataByIndex task. author Jonn Smith email jonn@broadinstitute.org","title":"MergeDemuxMasSeqByIndexLogs"},{"location":"tasks/Preprocessing_Tasks/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_3","text":"demux_logs (Array[File], required ): Log files from DemuxMasSeqDataByIndex task.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#outputs_3","text":"merged_log (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#splitbambycontig","text":"description Split a given bam file into separate files by contig. author Jonn Smith email jonn@broadinstitute.org","title":"SplitBamByContig"},{"location":"tasks/Preprocessing_Tasks/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_4","text":"bam (File, required ): Bamfile to be split by contig.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Preprocessing_Tasks/#defaults_2","text":"prefix (String, default=\"reads\"): Prefix for ouput files.","title":"Defaults"},{"location":"tasks/Preprocessing_Tasks/#outputs_4","text":"contig_bams (Array[File]) contig_names (Array[String])","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#convertsplicedbamtogff","text":"description Convert a given splice aligned bam file into a gff file. author Jonn Smith email jonn@broadinstitute.org","title":"ConvertSplicedBamToGff"},{"location":"tasks/Preprocessing_Tasks/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_5","text":"bam (File, required ): Bamfile to be converted to gff.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Preprocessing_Tasks/#outputs_5","text":"gff (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#gffcompare","text":"description Compare two GFF files author Jonn Smith email jonn@broadinstitute.org","title":"GffCompare"},{"location":"tasks/Preprocessing_Tasks/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_6","text":"gff_query (File, required ): Gff file to be used as a query (compared against the gff_ref). gff_ref (File, required ): Gff file to be used as a reference. ref_fasta (File, required ): Reference fasta file.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#optional_2","text":"ref_fasta_index (File?): Reference fasta file index. runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Preprocessing_Tasks/#defaults_3","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/Preprocessing_Tasks/#outputs_6","text":"refmap (File) tmap (File) tracking (File) loci (File) annotated_gtf (File) stats (File) log (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#restoreoriginalreadnames","text":"description Copies the contents of the XM tag to the read name and sets the XM tag to the read name. author Jonn Smith email jonn@broadinstitute.org","title":"RestoreOriginalReadNames"},{"location":"tasks/Preprocessing_Tasks/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_7","text":"bam (File, required ): Bam file in which to restore the original read names.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Preprocessing_Tasks/#defaults_4","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/Preprocessing_Tasks/#outputs_7","text":"bam_out (File) bai_out (File)","title":"Outputs"},{"location":"tasks/Preprocessing_Tasks/#correctumiswithsetcover","text":"description Corrects the UMIs in the given reads using a set cover algorithm author Jonn Smith email jonn@broadinstitute.org","title":"CorrectUmisWithSetCover"},{"location":"tasks/Preprocessing_Tasks/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/Preprocessing_Tasks/#required_8","text":"bam (File, required ): Bam file for which to correct UMIs.","title":"Required"},{"location":"tasks/Preprocessing_Tasks/#optional_4","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Preprocessing_Tasks/#defaults_5","text":"is_extracted (Boolean, default=true) prefix (String, default=\"out\"): Prefix to assign to output files.","title":"Defaults"},{"location":"tasks/Preprocessing_Tasks/#outputs_8","text":"corrected_umi_reads (File) corrected_umi_reads_index (File) uncorrected_umi_reads (File)","title":"Outputs"},{"location":"tasks/Quast/","text":"Quast Quast Inputs Required assemblies (Array[File], required ): list of assemblies to evaluate Optional ref (File?): reference assembly of the species runtime_attr_override (RuntimeAttr?) Defaults is_large (Boolean, default=false) Outputs report_txt (File) report_html (File) report_in_various_formats (Array[File]) plots (Array[File]) contigs_reports (File?) SummarizeQuastReport Inputs Required quast_report_txt (File, required ) Outputs quast_metrics_together (File) quast_metrics (Array[File])","title":"Quast"},{"location":"tasks/Quast/#quast","text":"","title":"Quast"},{"location":"tasks/Quast/#_1","text":"","title":""},{"location":"tasks/Quast/#_2","text":"","title":""},{"location":"tasks/Quast/#quast_1","text":"","title":"Quast"},{"location":"tasks/Quast/#inputs","text":"","title":"Inputs"},{"location":"tasks/Quast/#required","text":"assemblies (Array[File], required ): list of assemblies to evaluate","title":"Required"},{"location":"tasks/Quast/#optional","text":"ref (File?): reference assembly of the species runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Quast/#defaults","text":"is_large (Boolean, default=false)","title":"Defaults"},{"location":"tasks/Quast/#outputs","text":"report_txt (File) report_html (File) report_in_various_formats (Array[File]) plots (Array[File]) contigs_reports (File?)","title":"Outputs"},{"location":"tasks/Quast/#summarizequastreport","text":"","title":"SummarizeQuastReport"},{"location":"tasks/Quast/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/Quast/#required_1","text":"quast_report_txt (File, required )","title":"Required"},{"location":"tasks/Quast/#outputs_1","text":"quast_metrics_together (File) quast_metrics (Array[File])","title":"Outputs"},{"location":"tasks/Racon/","text":"Racon RaconPolish Inputs Required draft_assembly (File, required ): draft to be polished n_rounds (Int, required ): Number of times to run Racon reads (File, required ): long reads to polish the draft assembly with Outputs final_polished_assembly (File) incremental_polished_assemblies (Array[File])","title":"Racon"},{"location":"tasks/Racon/#racon","text":"","title":"Racon"},{"location":"tasks/Racon/#_1","text":"","title":""},{"location":"tasks/Racon/#_2","text":"","title":""},{"location":"tasks/Racon/#raconpolish","text":"","title":"RaconPolish"},{"location":"tasks/Racon/#inputs","text":"","title":"Inputs"},{"location":"tasks/Racon/#required","text":"draft_assembly (File, required ): draft to be polished n_rounds (Int, required ): Number of times to run Racon reads (File, required ): long reads to polish the draft assembly with","title":"Required"},{"location":"tasks/Racon/#outputs","text":"final_polished_assembly (File) incremental_polished_assemblies (Array[File])","title":"Outputs"},{"location":"tasks/Sniffles/","text":"Sniffles Sniffles Inputs Required bai (File, required ): index accompanying the BAM bam (File, required ): input BAM from which to call SVs prefix (String, required ): prefix for output Optional chr (String?): chr on which to call variants runtime_attr_override (RuntimeAttr?) Defaults min_mq (Int, default=20): [default-valued] minimum mapping quality to accept min_read_length (Int, default=1000): [default-valued] filter out reads below minimum read length min_read_support (Int, default=2): [default-valued] minimum reads required to make a call Outputs vcf (File)","title":"Sniffles"},{"location":"tasks/Sniffles/#sniffles","text":"","title":"Sniffles"},{"location":"tasks/Sniffles/#sniffles_1","text":"","title":"Sniffles"},{"location":"tasks/Sniffles/#inputs","text":"","title":"Inputs"},{"location":"tasks/Sniffles/#required","text":"bai (File, required ): index accompanying the BAM bam (File, required ): input BAM from which to call SVs prefix (String, required ): prefix for output","title":"Required"},{"location":"tasks/Sniffles/#optional","text":"chr (String?): chr on which to call variants runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Sniffles/#defaults","text":"min_mq (Int, default=20): [default-valued] minimum mapping quality to accept min_read_length (Int, default=1000): [default-valued] filter out reads below minimum read length min_read_support (Int, default=2): [default-valued] minimum reads required to make a call","title":"Defaults"},{"location":"tasks/Sniffles/#outputs","text":"vcf (File)","title":"Outputs"},{"location":"tasks/SoftClipper/","text":"SoftClipper SplitSoftClippedReads Inputs Required clipping_threshold (Int, required ) reads_fastq (File, required ) reference_fasta (File, required ) rounds (Int, required ) Outputs split_reads (Array[File]) most_split_read (File) SplitSoftClippedReadsAssisted Inputs Required aid_reference_fasta (File, required ) clipping_threshold (Int, required ) reads_fastq (File, required ) ref_conflict_threshold (Int, required ) reference_fasta (File, required ) rounds (Int, required ) Outputs split_reads (Array[File]) conflicting_alignments (Array[File]) most_split_read (File)","title":"SoftClipper"},{"location":"tasks/SoftClipper/#softclipper","text":"","title":"SoftClipper"},{"location":"tasks/SoftClipper/#splitsoftclippedreads","text":"","title":"SplitSoftClippedReads"},{"location":"tasks/SoftClipper/#inputs","text":"","title":"Inputs"},{"location":"tasks/SoftClipper/#required","text":"clipping_threshold (Int, required ) reads_fastq (File, required ) reference_fasta (File, required ) rounds (Int, required )","title":"Required"},{"location":"tasks/SoftClipper/#outputs","text":"split_reads (Array[File]) most_split_read (File)","title":"Outputs"},{"location":"tasks/SoftClipper/#splitsoftclippedreadsassisted","text":"","title":"SplitSoftClippedReadsAssisted"},{"location":"tasks/SoftClipper/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/SoftClipper/#required_1","text":"aid_reference_fasta (File, required ) clipping_threshold (Int, required ) reads_fastq (File, required ) ref_conflict_threshold (Int, required ) reference_fasta (File, required ) rounds (Int, required )","title":"Required"},{"location":"tasks/SoftClipper/#outputs_1","text":"split_reads (Array[File]) conflicting_alignments (Array[File]) most_split_read (File)","title":"Outputs"},{"location":"tasks/StringTie2/","text":"StringTie2 Quantify Inputs Required aligned_bai (File, required ) aligned_bam (File, required ) gtf (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults keep_retained_introns (Boolean, default=false) prefix (String, default=\"out\") Outputs st_gtf (File) st_abund (File) ExtractTranscriptSequences Inputs Required gtf (File, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs transcripts_fa (File) transcripts_fai (File) transcripts_dict (File) CompareTranscriptomes Inputs Required guide_gtf (File, required ) new_gtf (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs annotated_gtf (File) loci (File) tracking (File) refmap (File) tmap (File) stats (File)","title":"StringTie2"},{"location":"tasks/StringTie2/#stringtie2","text":"","title":"StringTie2"},{"location":"tasks/StringTie2/#quantify","text":"","title":"Quantify"},{"location":"tasks/StringTie2/#inputs","text":"","title":"Inputs"},{"location":"tasks/StringTie2/#required","text":"aligned_bai (File, required ) aligned_bam (File, required ) gtf (File, required )","title":"Required"},{"location":"tasks/StringTie2/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/StringTie2/#defaults","text":"keep_retained_introns (Boolean, default=false) prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/StringTie2/#outputs","text":"st_gtf (File) st_abund (File)","title":"Outputs"},{"location":"tasks/StringTie2/#extracttranscriptsequences","text":"","title":"ExtractTranscriptSequences"},{"location":"tasks/StringTie2/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/StringTie2/#required_1","text":"gtf (File, required ) ref_fasta (File, required ) ref_fasta_fai (File, required )","title":"Required"},{"location":"tasks/StringTie2/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/StringTie2/#defaults_1","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/StringTie2/#outputs_1","text":"transcripts_fa (File) transcripts_fai (File) transcripts_dict (File)","title":"Outputs"},{"location":"tasks/StringTie2/#comparetranscriptomes","text":"","title":"CompareTranscriptomes"},{"location":"tasks/StringTie2/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/StringTie2/#required_2","text":"guide_gtf (File, required ) new_gtf (File, required )","title":"Required"},{"location":"tasks/StringTie2/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/StringTie2/#defaults_2","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/StringTie2/#outputs_2","text":"annotated_gtf (File) loci (File) tracking (File) refmap (File) tmap (File) stats (File)","title":"Outputs"},{"location":"tasks/UMI_Tools/","text":"UMI_Tools Run_Group description Run umi-tools group on a bam file. author Jonn Smith email jonn@broadinstitute.org Inputs Required aligned_transcriptome_reads (File, required ) aligned_transcriptome_reads_index (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults cell_barcode_tag (String, default=\"CB\") do_per_cell (Boolean, default=true) gene_tag (String, default=\"XG\") prefix (String, default=\"umi_tools_group\") umi_tag (String, default=\"ZU\") Outputs output_bam (File) output_tsv (File) memory_log (File)","title":"UMI_Tools"},{"location":"tasks/UMI_Tools/#umi_tools","text":"","title":"UMI_Tools"},{"location":"tasks/UMI_Tools/#run_group","text":"description Run umi-tools group on a bam file. author Jonn Smith email jonn@broadinstitute.org","title":"Run_Group"},{"location":"tasks/UMI_Tools/#inputs","text":"","title":"Inputs"},{"location":"tasks/UMI_Tools/#required","text":"aligned_transcriptome_reads (File, required ) aligned_transcriptome_reads_index (File, required )","title":"Required"},{"location":"tasks/UMI_Tools/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/UMI_Tools/#defaults","text":"cell_barcode_tag (String, default=\"CB\") do_per_cell (Boolean, default=true) gene_tag (String, default=\"XG\") prefix (String, default=\"umi_tools_group\") umi_tag (String, default=\"ZU\")","title":"Defaults"},{"location":"tasks/UMI_Tools/#outputs","text":"output_bam (File) output_tsv (File) memory_log (File)","title":"Outputs"},{"location":"tasks/Utils/","text":"Utils GetDefaultDir Inputs Required workflow_name (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs path (String) PrepareManifest Inputs Required files (Array[String], required ) Optional runtime_attr_override (RuntimeAttr?) Outputs manifest (File) EchoManifest Inputs Required manifest (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs out (File) ChunkManifest Inputs Required manifest (File, required ) manifest_lines_per_chunk (Int, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs manifest_chunks (Array[File]) SortBam Inputs Required input_bam (File, required ): input BAM Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"sorted\"): [default-valued] prefix for output BAM Outputs sorted_bam (File) sorted_bai (File) SortSam Inputs Required compression_level (Int, required ) input_bam (File, required ) output_bam_basename (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs output_bam (File) output_bam_index (File) output_bam_md5 (File) MakeChrIntervalList Inputs Required ref_dict (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults filter (Array[String], default=['random', 'chrUn', 'decoy', 'alt', 'HLA', 'EBV']) Outputs chrs (Array[Array[String]]) FastaToSam Inputs Required fasta (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs output_bam (File) CountFastqRecords Inputs Required fastq (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs num_records (Int) CountFastaRecords Inputs Required fasta (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs num_records (Int) CountBamRecords Inputs Required bam (File, required ); localization_optional : true Optional runtime_attr_override (RuntimeAttr?) Outputs samools_error (File?) num_records (Int) FilterListOfStrings description Filter a given list of files by a query term (essentially pipes the query into grep). author Jonn Smith email jonn@broadinstitute.org Inputs Required list_to_filter (Array[String], required ): Array of strings to filter by the query. query (String, required ): Term to use to filter the given strings. Optional runtime_attr_override (RuntimeAttr?) Outputs filtered_list (Array[String]) FilterReadsBySamFlags description Filter reads based on sam flags. Reads with ANY of the given flags will be removed from the given dataset. author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ): BAM file to be filtered. sam_flags (String, required ): Flags for which to remove reads. Reads with ANY of the given flags will be removed from the given dataset. Optional runtime_attr_override (RuntimeAttr?) Defaults extra_args (String, default=\"\") prefix (String, default=\"filtered_reads\"): [Optional] Prefix string to name the output file (Default: filtered_reads). Outputs output_bam (File) output_bam_index (File) DownsampleSam description Downsample the given bam / sam file using Picard/GATK's DownsampleSam tool. author Jonn Smith email jonn@broadinstitute.org Inputs Required bam (File, required ): BAM file to be filtered. Optional runtime_attr_override (RuntimeAttr?) Defaults extra_args (String, default=\"\"): [Optional] Extra arguments to pass into DownsampleSam. prefix (String, default=\"downsampled_reads\"): [Optional] Prefix string to name the output file (Default: downsampled_reads). probability (Float, default=0.01): [Optional] Probability that a read will be emitted (Default: 0.01). random_seed (Int, default=1) strategy (String, default=\"HighAccuracy\"): [Optional] Strategy to use to downsample the given bam file (Default: HighAccuracy). Outputs output_bam (File) output_bam_index (File) GrepCountBamRecords Inputs Required bam (File, required ) regex (String, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults invert (Boolean, default=false) prefix (String, default=\"sum\") samfilter (String, default=\"\") Outputs num_records (Int) num_records_file (File) GrepCountUniqueBamRecords Inputs Required bam (String, required ) regex (String, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults invert (Boolean, default=false) prefix (String, default=\"sum\") samfilter (String, default=\"\") Outputs num_records (Int) num_records_file (File) Sum Inputs Required ints (Array[Int], required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"sum\") Outputs sum (Int) sum_file (File) Uniq Inputs Required strings (Array[String], required ) Optional runtime_attr_override (RuntimeAttr?) Outputs unique_strings (Array[String]) Timestamp Inputs Required dummy_dependencies (Array[String], required ) Optional runtime_attr_override (RuntimeAttr?) Outputs timestamp (String) BamToTable Inputs Required bam (File, required ) prefix (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs table (File) ConvertReads Inputs Required output_format (String, required ) reads (File, required ) Outputs converted_reads (File) BamToBed Inputs Required bam (File, required ) prefix (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs bed (File) BamToFastq Inputs Required bam (File, required ) prefix (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs reads_fq (File) MergeFastqs Inputs Required fastqs (Array[File], required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"merged\") Outputs merged_fastq (File) MergeBams Inputs Required bams (Array[File], required ): input array of BAMs to be merged Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\"): [default-valued] prefix for output BAM Outputs merged_bam (File) merged_bai (File) Index Inputs Required bam (File, required ): BAM file to be indexed Optional runtime_attr_override (RuntimeAttr?) Outputs bai (File) FilterReadsWithTagValues Inputs Required bam (File, required ): Input BAM file from which to remove a tag with certain values. tag (String, required ): Name of the tag to target for potential removal. value_to_remove (String, required ): Tag value to use to remove reads. Reads will be removed if they have the given tag with this value. Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\"): [default-valued] prefix for output BAM Outputs output_bam (File) SubsetBam Inputs Required bai (File, required ): index for bam file bam (File, required ); description : bam to subset; localization_optional : true locus (String, required ): genomic locus to select Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"subset\"): prefix for output bam and bai file names Outputs subset_bam (File) subset_bai (File) ExcludeRegionsFromBam Inputs Required bai (File, required ) bam (File, required ) loci (Array[String], required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"subset\") Outputs subset_bam (File) subset_bai (File) SelectFirstNReads Inputs Required bam (File, required ); description : bam to subset; localization_optional : true n (Int, required ): number of reads to select Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"selected\"): prefix for output bam file Outputs selected_bam (File) ResilientSubsetBam description For subsetting a high-coverage BAM stored in GCS, without localizing (more resilient to auth. expiration). Inputs Required bai (File, required ) bam (File, required ); localization_optional : true interval_id (String, required ): an ID string for representing the intervals in the interval list file interval_list_file (File, required ): a Picard-style interval list file to subset reads with prefix (String, required ): prefix for output bam and bai file names Optional runtime_attr_override (RuntimeAttr?) Outputs subset_bam (File) subset_bai (File) SplitBam Inputs Required bai (File, required ): index for bam file bam (File, required ): bam to split Optional runtime_attr_override (RuntimeAttr?) Defaults filter (Array[String], default=['random', 'chrUn', 'decoy', 'alt', 'HLA']): contigs to ignore Outputs subset_bams (Array[File]) subset_bais (Array[File]) Bamtools Inputs Required args (String, required ) bamfile (File, required ) cmd (String, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") Outputs bam (File) FilterBamOnTag Inputs Required bam (File, required ): input BAM file expression (String, required ) tag (String, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\"): [default-valued] prefix for output BAM Outputs filtered_bam (File) filtered_bai (File) DeduplicateBam description Utility to drop (occationally happening) duplicate records in input BAM Inputs Required aligned_bai (File, required ) aligned_bam (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults same_name_as_input (Boolean, default=true) Outputs corrected_bam (File) corrected_bai (File) Cat Inputs Required files (Array[File], required ): text files to combine Optional runtime_attr_override (RuntimeAttr?) Defaults has_header (Boolean, default=false): files have a redundant header out (String, default=\"out.txt\"): [default-valued] output filename Outputs combined (File) ListBamContigs Inputs Required bam (String, required ): input BAM from which available contigs should be listed Optional runtime_attr_override (RuntimeAttr?) Outputs contigs (Array[String]) ComputeGenomeLength Inputs Required fasta (File, required ): FASTA file Optional runtime_attr_override (RuntimeAttr?) Outputs length (Float) ListFilesOfType Inputs Required gcs_dir (String, required ): input directory suffixes (Array[String], required ): suffix(es) for files Optional runtime_attr_override (RuntimeAttr?) Defaults recurse (Boolean, default=false): if true, recurse through subdirectories Outputs files (Array[String]) manifest (File) StopWorkflow Inputs Required reason (String, required ) Outputs None InferSampleName description Infer sample name encoded on the @RG line of the header section. Fails if multiple values found, or if SM ~= unnamedsample. Inputs Required bai (File, required ) bam (File, required ); localization_optional : true Outputs sample_name (String) CheckOnSamplenames description Makes sure the provided sample names are all same, i.e. no mixture of sample names Inputs Required sample_names (Array[String], required ) Outputs None FixSampleName desciption This fixes the sample name of a demultiplexed BAM Inputs Required bam (File, required ) sample_name (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs reheadered_bam (File) ComputeAllowedLocalSSD description Compute the number of LOCAL ssd's allowed by Google Inputs Required intended_gb (Int, required ) Outputs numb_of_local_ssd (Int) RandomZoneSpewer Inputs Required num_of_zones (Int, required ) Outputs zones (String) ShardReads Inputs Required bam (File, required ) bam_index (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults num_shards (Int, default=10) prefix (String, default=\"shard\") Outputs shards (Array[File]) GetCurrentTimestampString volatile true Inputs Defaults date_format (String, default=\"%Y%m%d_%H%M%S_%N\") Outputs timestamp_string (String) GetRawReadGroup Inputs Required gcs_bam_path (String, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs rg (String) FailWithWarning Inputs Required warning (String, required ) Outputs None SplitDelimitedString Inputs Required s (String, required ) separate (String, required ) Outputs arr (Array[String]) ConstructMap desciption Use only when the keys are guaranteed to be unique and the two arrays are of the same length. Inputs Required keys (Array[String], required ) values (Array[String], required ) Outputs converted (Map[String,String]) MapToTsv Inputs Required my_map (Map[String,Float], required ) name_of_file (String, required ) Outputs result (File)","title":"Utils"},{"location":"tasks/Utils/#utils","text":"","title":"Utils"},{"location":"tasks/Utils/#getdefaultdir","text":"","title":"GetDefaultDir"},{"location":"tasks/Utils/#inputs","text":"","title":"Inputs"},{"location":"tasks/Utils/#required","text":"workflow_name (String, required )","title":"Required"},{"location":"tasks/Utils/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs","text":"path (String)","title":"Outputs"},{"location":"tasks/Utils/#preparemanifest","text":"","title":"PrepareManifest"},{"location":"tasks/Utils/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_1","text":"files (Array[String], required )","title":"Required"},{"location":"tasks/Utils/#optional_1","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_1","text":"manifest (File)","title":"Outputs"},{"location":"tasks/Utils/#echomanifest","text":"","title":"EchoManifest"},{"location":"tasks/Utils/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_2","text":"manifest (File, required )","title":"Required"},{"location":"tasks/Utils/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_2","text":"out (File)","title":"Outputs"},{"location":"tasks/Utils/#chunkmanifest","text":"","title":"ChunkManifest"},{"location":"tasks/Utils/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_3","text":"manifest (File, required ) manifest_lines_per_chunk (Int, required )","title":"Required"},{"location":"tasks/Utils/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_3","text":"manifest_chunks (Array[File])","title":"Outputs"},{"location":"tasks/Utils/#sortbam","text":"","title":"SortBam"},{"location":"tasks/Utils/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_4","text":"input_bam (File, required ): input BAM","title":"Required"},{"location":"tasks/Utils/#optional_4","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults","text":"prefix (String, default=\"sorted\"): [default-valued] prefix for output BAM","title":"Defaults"},{"location":"tasks/Utils/#outputs_4","text":"sorted_bam (File) sorted_bai (File)","title":"Outputs"},{"location":"tasks/Utils/#sortsam","text":"","title":"SortSam"},{"location":"tasks/Utils/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_5","text":"compression_level (Int, required ) input_bam (File, required ) output_bam_basename (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_5","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_5","text":"output_bam (File) output_bam_index (File) output_bam_md5 (File)","title":"Outputs"},{"location":"tasks/Utils/#makechrintervallist","text":"","title":"MakeChrIntervalList"},{"location":"tasks/Utils/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_6","text":"ref_dict (File, required )","title":"Required"},{"location":"tasks/Utils/#optional_6","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_1","text":"filter (Array[String], default=['random', 'chrUn', 'decoy', 'alt', 'HLA', 'EBV'])","title":"Defaults"},{"location":"tasks/Utils/#outputs_6","text":"chrs (Array[Array[String]])","title":"Outputs"},{"location":"tasks/Utils/#fastatosam","text":"","title":"FastaToSam"},{"location":"tasks/Utils/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_7","text":"fasta (File, required )","title":"Required"},{"location":"tasks/Utils/#optional_7","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_7","text":"output_bam (File)","title":"Outputs"},{"location":"tasks/Utils/#countfastqrecords","text":"","title":"CountFastqRecords"},{"location":"tasks/Utils/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_8","text":"fastq (File, required )","title":"Required"},{"location":"tasks/Utils/#optional_8","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_8","text":"num_records (Int)","title":"Outputs"},{"location":"tasks/Utils/#countfastarecords","text":"","title":"CountFastaRecords"},{"location":"tasks/Utils/#inputs_9","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_9","text":"fasta (File, required )","title":"Required"},{"location":"tasks/Utils/#optional_9","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_9","text":"num_records (Int)","title":"Outputs"},{"location":"tasks/Utils/#countbamrecords","text":"","title":"CountBamRecords"},{"location":"tasks/Utils/#inputs_10","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_10","text":"bam (File, required ); localization_optional : true","title":"Required"},{"location":"tasks/Utils/#optional_10","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_10","text":"samools_error (File?) num_records (Int)","title":"Outputs"},{"location":"tasks/Utils/#filterlistofstrings","text":"description Filter a given list of files by a query term (essentially pipes the query into grep). author Jonn Smith email jonn@broadinstitute.org","title":"FilterListOfStrings"},{"location":"tasks/Utils/#inputs_11","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_11","text":"list_to_filter (Array[String], required ): Array of strings to filter by the query. query (String, required ): Term to use to filter the given strings.","title":"Required"},{"location":"tasks/Utils/#optional_11","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_11","text":"filtered_list (Array[String])","title":"Outputs"},{"location":"tasks/Utils/#filterreadsbysamflags","text":"description Filter reads based on sam flags. Reads with ANY of the given flags will be removed from the given dataset. author Jonn Smith email jonn@broadinstitute.org","title":"FilterReadsBySamFlags"},{"location":"tasks/Utils/#inputs_12","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_12","text":"bam (File, required ): BAM file to be filtered. sam_flags (String, required ): Flags for which to remove reads. Reads with ANY of the given flags will be removed from the given dataset.","title":"Required"},{"location":"tasks/Utils/#optional_12","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_2","text":"extra_args (String, default=\"\") prefix (String, default=\"filtered_reads\"): [Optional] Prefix string to name the output file (Default: filtered_reads).","title":"Defaults"},{"location":"tasks/Utils/#outputs_12","text":"output_bam (File) output_bam_index (File)","title":"Outputs"},{"location":"tasks/Utils/#downsamplesam","text":"description Downsample the given bam / sam file using Picard/GATK's DownsampleSam tool. author Jonn Smith email jonn@broadinstitute.org","title":"DownsampleSam"},{"location":"tasks/Utils/#inputs_13","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_13","text":"bam (File, required ): BAM file to be filtered.","title":"Required"},{"location":"tasks/Utils/#optional_13","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_3","text":"extra_args (String, default=\"\"): [Optional] Extra arguments to pass into DownsampleSam. prefix (String, default=\"downsampled_reads\"): [Optional] Prefix string to name the output file (Default: downsampled_reads). probability (Float, default=0.01): [Optional] Probability that a read will be emitted (Default: 0.01). random_seed (Int, default=1) strategy (String, default=\"HighAccuracy\"): [Optional] Strategy to use to downsample the given bam file (Default: HighAccuracy).","title":"Defaults"},{"location":"tasks/Utils/#outputs_13","text":"output_bam (File) output_bam_index (File)","title":"Outputs"},{"location":"tasks/Utils/#grepcountbamrecords","text":"","title":"GrepCountBamRecords"},{"location":"tasks/Utils/#inputs_14","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_14","text":"bam (File, required ) regex (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_14","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_4","text":"invert (Boolean, default=false) prefix (String, default=\"sum\") samfilter (String, default=\"\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_14","text":"num_records (Int) num_records_file (File)","title":"Outputs"},{"location":"tasks/Utils/#grepcountuniquebamrecords","text":"","title":"GrepCountUniqueBamRecords"},{"location":"tasks/Utils/#inputs_15","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_15","text":"bam (String, required ) regex (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_15","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_5","text":"invert (Boolean, default=false) prefix (String, default=\"sum\") samfilter (String, default=\"\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_15","text":"num_records (Int) num_records_file (File)","title":"Outputs"},{"location":"tasks/Utils/#sum","text":"","title":"Sum"},{"location":"tasks/Utils/#inputs_16","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_16","text":"ints (Array[Int], required )","title":"Required"},{"location":"tasks/Utils/#optional_16","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_6","text":"prefix (String, default=\"sum\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_16","text":"sum (Int) sum_file (File)","title":"Outputs"},{"location":"tasks/Utils/#uniq","text":"","title":"Uniq"},{"location":"tasks/Utils/#inputs_17","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_17","text":"strings (Array[String], required )","title":"Required"},{"location":"tasks/Utils/#optional_17","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_17","text":"unique_strings (Array[String])","title":"Outputs"},{"location":"tasks/Utils/#timestamp","text":"","title":"Timestamp"},{"location":"tasks/Utils/#inputs_18","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_18","text":"dummy_dependencies (Array[String], required )","title":"Required"},{"location":"tasks/Utils/#optional_18","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_18","text":"timestamp (String)","title":"Outputs"},{"location":"tasks/Utils/#bamtotable","text":"","title":"BamToTable"},{"location":"tasks/Utils/#inputs_19","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_19","text":"bam (File, required ) prefix (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_19","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_19","text":"table (File)","title":"Outputs"},{"location":"tasks/Utils/#convertreads","text":"","title":"ConvertReads"},{"location":"tasks/Utils/#inputs_20","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_20","text":"output_format (String, required ) reads (File, required )","title":"Required"},{"location":"tasks/Utils/#outputs_20","text":"converted_reads (File)","title":"Outputs"},{"location":"tasks/Utils/#bamtobed","text":"","title":"BamToBed"},{"location":"tasks/Utils/#inputs_21","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_21","text":"bam (File, required ) prefix (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_20","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_21","text":"bed (File)","title":"Outputs"},{"location":"tasks/Utils/#bamtofastq","text":"","title":"BamToFastq"},{"location":"tasks/Utils/#inputs_22","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_22","text":"bam (File, required ) prefix (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_21","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_22","text":"reads_fq (File)","title":"Outputs"},{"location":"tasks/Utils/#mergefastqs","text":"","title":"MergeFastqs"},{"location":"tasks/Utils/#inputs_23","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_23","text":"fastqs (Array[File], required )","title":"Required"},{"location":"tasks/Utils/#optional_22","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_7","text":"prefix (String, default=\"merged\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_23","text":"merged_fastq (File)","title":"Outputs"},{"location":"tasks/Utils/#mergebams","text":"","title":"MergeBams"},{"location":"tasks/Utils/#inputs_24","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_24","text":"bams (Array[File], required ): input array of BAMs to be merged","title":"Required"},{"location":"tasks/Utils/#optional_23","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_8","text":"prefix (String, default=\"out\"): [default-valued] prefix for output BAM","title":"Defaults"},{"location":"tasks/Utils/#outputs_24","text":"merged_bam (File) merged_bai (File)","title":"Outputs"},{"location":"tasks/Utils/#index","text":"","title":"Index"},{"location":"tasks/Utils/#inputs_25","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_25","text":"bam (File, required ): BAM file to be indexed","title":"Required"},{"location":"tasks/Utils/#optional_24","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_25","text":"bai (File)","title":"Outputs"},{"location":"tasks/Utils/#filterreadswithtagvalues","text":"","title":"FilterReadsWithTagValues"},{"location":"tasks/Utils/#inputs_26","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_26","text":"bam (File, required ): Input BAM file from which to remove a tag with certain values. tag (String, required ): Name of the tag to target for potential removal. value_to_remove (String, required ): Tag value to use to remove reads. Reads will be removed if they have the given tag with this value.","title":"Required"},{"location":"tasks/Utils/#optional_25","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_9","text":"prefix (String, default=\"out\"): [default-valued] prefix for output BAM","title":"Defaults"},{"location":"tasks/Utils/#outputs_26","text":"output_bam (File)","title":"Outputs"},{"location":"tasks/Utils/#subsetbam","text":"","title":"SubsetBam"},{"location":"tasks/Utils/#inputs_27","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_27","text":"bai (File, required ): index for bam file bam (File, required ); description : bam to subset; localization_optional : true locus (String, required ): genomic locus to select","title":"Required"},{"location":"tasks/Utils/#optional_26","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_10","text":"prefix (String, default=\"subset\"): prefix for output bam and bai file names","title":"Defaults"},{"location":"tasks/Utils/#outputs_27","text":"subset_bam (File) subset_bai (File)","title":"Outputs"},{"location":"tasks/Utils/#excluderegionsfrombam","text":"","title":"ExcludeRegionsFromBam"},{"location":"tasks/Utils/#inputs_28","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_28","text":"bai (File, required ) bam (File, required ) loci (Array[String], required )","title":"Required"},{"location":"tasks/Utils/#optional_27","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_11","text":"prefix (String, default=\"subset\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_28","text":"subset_bam (File) subset_bai (File)","title":"Outputs"},{"location":"tasks/Utils/#selectfirstnreads","text":"","title":"SelectFirstNReads"},{"location":"tasks/Utils/#inputs_29","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_29","text":"bam (File, required ); description : bam to subset; localization_optional : true n (Int, required ): number of reads to select","title":"Required"},{"location":"tasks/Utils/#optional_28","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_12","text":"prefix (String, default=\"selected\"): prefix for output bam file","title":"Defaults"},{"location":"tasks/Utils/#outputs_29","text":"selected_bam (File)","title":"Outputs"},{"location":"tasks/Utils/#resilientsubsetbam","text":"description For subsetting a high-coverage BAM stored in GCS, without localizing (more resilient to auth. expiration).","title":"ResilientSubsetBam"},{"location":"tasks/Utils/#inputs_30","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_30","text":"bai (File, required ) bam (File, required ); localization_optional : true interval_id (String, required ): an ID string for representing the intervals in the interval list file interval_list_file (File, required ): a Picard-style interval list file to subset reads with prefix (String, required ): prefix for output bam and bai file names","title":"Required"},{"location":"tasks/Utils/#optional_29","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_30","text":"subset_bam (File) subset_bai (File)","title":"Outputs"},{"location":"tasks/Utils/#splitbam","text":"","title":"SplitBam"},{"location":"tasks/Utils/#inputs_31","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_31","text":"bai (File, required ): index for bam file bam (File, required ): bam to split","title":"Required"},{"location":"tasks/Utils/#optional_30","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_13","text":"filter (Array[String], default=['random', 'chrUn', 'decoy', 'alt', 'HLA']): contigs to ignore","title":"Defaults"},{"location":"tasks/Utils/#outputs_31","text":"subset_bams (Array[File]) subset_bais (Array[File])","title":"Outputs"},{"location":"tasks/Utils/#bamtools","text":"","title":"Bamtools"},{"location":"tasks/Utils/#inputs_32","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_32","text":"args (String, required ) bamfile (File, required ) cmd (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_31","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_14","text":"prefix (String, default=\"out\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_32","text":"bam (File)","title":"Outputs"},{"location":"tasks/Utils/#filterbamontag","text":"","title":"FilterBamOnTag"},{"location":"tasks/Utils/#inputs_33","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_33","text":"bam (File, required ): input BAM file expression (String, required ) tag (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_32","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_15","text":"prefix (String, default=\"out\"): [default-valued] prefix for output BAM","title":"Defaults"},{"location":"tasks/Utils/#outputs_33","text":"filtered_bam (File) filtered_bai (File)","title":"Outputs"},{"location":"tasks/Utils/#deduplicatebam","text":"description Utility to drop (occationally happening) duplicate records in input BAM","title":"DeduplicateBam"},{"location":"tasks/Utils/#inputs_34","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_34","text":"aligned_bai (File, required ) aligned_bam (File, required )","title":"Required"},{"location":"tasks/Utils/#optional_33","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_16","text":"same_name_as_input (Boolean, default=true)","title":"Defaults"},{"location":"tasks/Utils/#outputs_34","text":"corrected_bam (File) corrected_bai (File)","title":"Outputs"},{"location":"tasks/Utils/#cat","text":"","title":"Cat"},{"location":"tasks/Utils/#inputs_35","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_35","text":"files (Array[File], required ): text files to combine","title":"Required"},{"location":"tasks/Utils/#optional_34","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_17","text":"has_header (Boolean, default=false): files have a redundant header out (String, default=\"out.txt\"): [default-valued] output filename","title":"Defaults"},{"location":"tasks/Utils/#outputs_35","text":"combined (File)","title":"Outputs"},{"location":"tasks/Utils/#listbamcontigs","text":"","title":"ListBamContigs"},{"location":"tasks/Utils/#inputs_36","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_36","text":"bam (String, required ): input BAM from which available contigs should be listed","title":"Required"},{"location":"tasks/Utils/#optional_35","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_36","text":"contigs (Array[String])","title":"Outputs"},{"location":"tasks/Utils/#computegenomelength","text":"","title":"ComputeGenomeLength"},{"location":"tasks/Utils/#inputs_37","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_37","text":"fasta (File, required ): FASTA file","title":"Required"},{"location":"tasks/Utils/#optional_36","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_37","text":"length (Float)","title":"Outputs"},{"location":"tasks/Utils/#listfilesoftype","text":"","title":"ListFilesOfType"},{"location":"tasks/Utils/#inputs_38","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_38","text":"gcs_dir (String, required ): input directory suffixes (Array[String], required ): suffix(es) for files","title":"Required"},{"location":"tasks/Utils/#optional_37","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_18","text":"recurse (Boolean, default=false): if true, recurse through subdirectories","title":"Defaults"},{"location":"tasks/Utils/#outputs_38","text":"files (Array[String]) manifest (File)","title":"Outputs"},{"location":"tasks/Utils/#stopworkflow","text":"","title":"StopWorkflow"},{"location":"tasks/Utils/#inputs_39","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_39","text":"reason (String, required )","title":"Required"},{"location":"tasks/Utils/#outputs_39","text":"None","title":"Outputs"},{"location":"tasks/Utils/#infersamplename","text":"description Infer sample name encoded on the @RG line of the header section. Fails if multiple values found, or if SM ~= unnamedsample.","title":"InferSampleName"},{"location":"tasks/Utils/#inputs_40","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_40","text":"bai (File, required ) bam (File, required ); localization_optional : true","title":"Required"},{"location":"tasks/Utils/#outputs_40","text":"sample_name (String)","title":"Outputs"},{"location":"tasks/Utils/#checkonsamplenames","text":"description Makes sure the provided sample names are all same, i.e. no mixture of sample names","title":"CheckOnSamplenames"},{"location":"tasks/Utils/#inputs_41","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_41","text":"sample_names (Array[String], required )","title":"Required"},{"location":"tasks/Utils/#outputs_41","text":"None","title":"Outputs"},{"location":"tasks/Utils/#fixsamplename","text":"desciption This fixes the sample name of a demultiplexed BAM","title":"FixSampleName"},{"location":"tasks/Utils/#inputs_42","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_42","text":"bam (File, required ) sample_name (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_38","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_42","text":"reheadered_bam (File)","title":"Outputs"},{"location":"tasks/Utils/#computeallowedlocalssd","text":"description Compute the number of LOCAL ssd's allowed by Google","title":"ComputeAllowedLocalSSD"},{"location":"tasks/Utils/#inputs_43","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_43","text":"intended_gb (Int, required )","title":"Required"},{"location":"tasks/Utils/#outputs_43","text":"numb_of_local_ssd (Int)","title":"Outputs"},{"location":"tasks/Utils/#randomzonespewer","text":"","title":"RandomZoneSpewer"},{"location":"tasks/Utils/#inputs_44","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_44","text":"num_of_zones (Int, required )","title":"Required"},{"location":"tasks/Utils/#outputs_44","text":"zones (String)","title":"Outputs"},{"location":"tasks/Utils/#shardreads","text":"","title":"ShardReads"},{"location":"tasks/Utils/#inputs_45","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_45","text":"bam (File, required ) bam_index (File, required )","title":"Required"},{"location":"tasks/Utils/#optional_39","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#defaults_19","text":"num_shards (Int, default=10) prefix (String, default=\"shard\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_45","text":"shards (Array[File])","title":"Outputs"},{"location":"tasks/Utils/#getcurrenttimestampstring","text":"volatile true","title":"GetCurrentTimestampString"},{"location":"tasks/Utils/#inputs_46","text":"","title":"Inputs"},{"location":"tasks/Utils/#defaults_20","text":"date_format (String, default=\"%Y%m%d_%H%M%S_%N\")","title":"Defaults"},{"location":"tasks/Utils/#outputs_46","text":"timestamp_string (String)","title":"Outputs"},{"location":"tasks/Utils/#getrawreadgroup","text":"","title":"GetRawReadGroup"},{"location":"tasks/Utils/#inputs_47","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_46","text":"gcs_bam_path (String, required )","title":"Required"},{"location":"tasks/Utils/#optional_40","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/Utils/#outputs_47","text":"rg (String)","title":"Outputs"},{"location":"tasks/Utils/#failwithwarning","text":"","title":"FailWithWarning"},{"location":"tasks/Utils/#inputs_48","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_47","text":"warning (String, required )","title":"Required"},{"location":"tasks/Utils/#outputs_48","text":"None","title":"Outputs"},{"location":"tasks/Utils/#splitdelimitedstring","text":"","title":"SplitDelimitedString"},{"location":"tasks/Utils/#inputs_49","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_48","text":"s (String, required ) separate (String, required )","title":"Required"},{"location":"tasks/Utils/#outputs_49","text":"arr (Array[String])","title":"Outputs"},{"location":"tasks/Utils/#constructmap","text":"desciption Use only when the keys are guaranteed to be unique and the two arrays are of the same length.","title":"ConstructMap"},{"location":"tasks/Utils/#inputs_50","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_49","text":"keys (Array[String], required ) values (Array[String], required )","title":"Required"},{"location":"tasks/Utils/#outputs_50","text":"converted (Map[String,String])","title":"Outputs"},{"location":"tasks/Utils/#maptotsv","text":"","title":"MapToTsv"},{"location":"tasks/Utils/#inputs_51","text":"","title":"Inputs"},{"location":"tasks/Utils/#required_50","text":"my_map (Map[String,Float], required ) name_of_file (String, required )","title":"Required"},{"location":"tasks/Utils/#outputs_51","text":"result (File)","title":"Outputs"},{"location":"tasks/VariantUtils/","text":"VariantUtils MergePerChrCalls Inputs Required prefix (String, required ) ref_dict (File, required ) vcfs (Array[File], required ) Optional runtime_attr_override (RuntimeAttr?) Outputs vcf (File) tbi (File) MergeAndSortVCFs description Fast merging & sorting VCFs when the default sorting is expected to be slow Inputs Required prefix (String, required ) ref_fasta_fai (File, required ) vcfs (Array[File], required ) Optional header_definitions_file (File?): a union of definition header lines for input VCFs (related to https://github.com/samtools/bcftools/issues/1629) runtime_attr_override (RuntimeAttr?) Outputs vcf (File) tbi (File) CollectDefinitions description Collect (union) various definitions in vcf files, adddressing a bcftols bug: https://github.com/samtools/bcftools/issues/1629 Inputs Required vcfs (Array[File], required ) Optional runtime_attr_override (RuntimeAttr?) Outputs union_definitions (File) GetVCFSampleName description Currently mostly used for extracting sample name in fingerprinting genotyped VCF Inputs Required fingerprint_vcf (File, required ): Assumed to be genotyped, and hold only one sample (other samples will be ignored). Optional runtime_attr_override (RuntimeAttr?) Outputs sample_name (String) SubsetVCF Inputs Required locus (String, required ) vcf_gz (File, required ) vcf_tbi (File, required ) Optional runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"subset\") Outputs subset_vcf (File) subset_tbi (File) ZipAndIndexVCF description gZip plain text VCF and index it. Inputs Required vcf (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs vcfgz (File) tbi (File) IndexVCF description Indexing vcf.gz. Note: do NOT use remote index as that's buggy. Inputs Required vcf (File, required ) Optional runtime_attr_override (RuntimeAttr?) Outputs tbi (File) FixSnifflesVCF Inputs Required sample_name (String, required ): Sniffles infers sample name from the BAM file name, so we fix it here vcf (File, required ) Optional ref_fasta_fai (File?): provide only when the contig section of the input vcf is suspected to be corrupted runtime_attr_override (RuntimeAttr?) Outputs sortedVCF (File) tbi (File)","title":"VariantUtils"},{"location":"tasks/VariantUtils/#variantutils","text":"","title":"VariantUtils"},{"location":"tasks/VariantUtils/#mergeperchrcalls","text":"","title":"MergePerChrCalls"},{"location":"tasks/VariantUtils/#inputs","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required","text":"prefix (String, required ) ref_dict (File, required ) vcfs (Array[File], required )","title":"Required"},{"location":"tasks/VariantUtils/#optional","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#outputs","text":"vcf (File) tbi (File)","title":"Outputs"},{"location":"tasks/VariantUtils/#mergeandsortvcfs","text":"description Fast merging & sorting VCFs when the default sorting is expected to be slow","title":"MergeAndSortVCFs"},{"location":"tasks/VariantUtils/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required_1","text":"prefix (String, required ) ref_fasta_fai (File, required ) vcfs (Array[File], required )","title":"Required"},{"location":"tasks/VariantUtils/#optional_1","text":"header_definitions_file (File?): a union of definition header lines for input VCFs (related to https://github.com/samtools/bcftools/issues/1629) runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#outputs_1","text":"vcf (File) tbi (File)","title":"Outputs"},{"location":"tasks/VariantUtils/#collectdefinitions","text":"description Collect (union) various definitions in vcf files, adddressing a bcftols bug: https://github.com/samtools/bcftools/issues/1629","title":"CollectDefinitions"},{"location":"tasks/VariantUtils/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required_2","text":"vcfs (Array[File], required )","title":"Required"},{"location":"tasks/VariantUtils/#optional_2","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#outputs_2","text":"union_definitions (File)","title":"Outputs"},{"location":"tasks/VariantUtils/#getvcfsamplename","text":"description Currently mostly used for extracting sample name in fingerprinting genotyped VCF","title":"GetVCFSampleName"},{"location":"tasks/VariantUtils/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required_3","text":"fingerprint_vcf (File, required ): Assumed to be genotyped, and hold only one sample (other samples will be ignored).","title":"Required"},{"location":"tasks/VariantUtils/#optional_3","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#outputs_3","text":"sample_name (String)","title":"Outputs"},{"location":"tasks/VariantUtils/#subsetvcf","text":"","title":"SubsetVCF"},{"location":"tasks/VariantUtils/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required_4","text":"locus (String, required ) vcf_gz (File, required ) vcf_tbi (File, required )","title":"Required"},{"location":"tasks/VariantUtils/#optional_4","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#defaults","text":"prefix (String, default=\"subset\")","title":"Defaults"},{"location":"tasks/VariantUtils/#outputs_4","text":"subset_vcf (File) subset_tbi (File)","title":"Outputs"},{"location":"tasks/VariantUtils/#zipandindexvcf","text":"description gZip plain text VCF and index it.","title":"ZipAndIndexVCF"},{"location":"tasks/VariantUtils/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required_5","text":"vcf (File, required )","title":"Required"},{"location":"tasks/VariantUtils/#optional_5","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#outputs_5","text":"vcfgz (File) tbi (File)","title":"Outputs"},{"location":"tasks/VariantUtils/#indexvcf","text":"description Indexing vcf.gz. Note: do NOT use remote index as that's buggy.","title":"IndexVCF"},{"location":"tasks/VariantUtils/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required_6","text":"vcf (File, required )","title":"Required"},{"location":"tasks/VariantUtils/#optional_6","text":"runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#outputs_6","text":"tbi (File)","title":"Outputs"},{"location":"tasks/VariantUtils/#fixsnifflesvcf","text":"","title":"FixSnifflesVCF"},{"location":"tasks/VariantUtils/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/VariantUtils/#required_7","text":"sample_name (String, required ): Sniffles infers sample name from the BAM file name, so we fix it here vcf (File, required )","title":"Required"},{"location":"tasks/VariantUtils/#optional_7","text":"ref_fasta_fai (File?): provide only when the contig section of the input vcf is suspected to be corrupted runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"tasks/VariantUtils/#outputs_7","text":"sortedVCF (File) tbi (File)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/","text":"cnv_common_tasks PreprocessIntervals Inputs Required gatk_docker (String, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required ) Optional bin_length (Int?) blacklist_intervals (File?) cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) intervals (File?) mem_gb (Int?) padding (Int?) preemptible_attempts (Int?) Defaults use_ssd (Boolean, default=false) Outputs preprocessed_intervals (File) AnnotateIntervals Inputs Required gatk_docker (String, required ) intervals (File, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required ) Optional cpu (Int?) disk_space_gb (Int?) feature_query_lookahead (Int?) gatk4_jar_override (File?) mappability_track_bed (File?) mappability_track_bed_idx (File?) mem_gb (Int?) preemptible_attempts (Int?) segmental_duplication_track_bed (File?) segmental_duplication_track_bed_idx (File?) Defaults use_ssd (Boolean, default=false) Outputs annotated_intervals (File) FilterIntervals Inputs Required gatk_docker (String, required ) intervals (File, required ) Optional annotated_intervals (File?) blacklist_intervals (File?) cpu (Int?) disk_space_gb (Int?) extreme_count_filter_maximum_percentile (Float?) extreme_count_filter_minimum_percentile (Float?) extreme_count_filter_percentage_of_samples (Float?) gatk4_jar_override (File?) low_count_filter_count_threshold (Int?) low_count_filter_percentage_of_samples (Float?) maximum_gc_content (Float?) maximum_mappability (Float?) maximum_segmental_duplication_content (Float?) mem_gb (Int?) minimum_gc_content (Float?) minimum_mappability (Float?) minimum_segmental_duplication_content (Float?) preemptible_attempts (Int?) read_count_files (Array[File]?) Defaults use_ssd (Boolean, default=false) Outputs filtered_intervals (File) CollectCounts Inputs Required bam (File, required ) bam_idx (File, required ) gatk_docker (String, required ) intervals (File, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required ) Optional cpu (Int?) disk_space_gb (Int?) enable_indexing (Boolean?) format (String?) gatk4_jar_override (File?) mem_gb (Int?) preemptible_attempts (Int?) Defaults use_ssd (Boolean, default=false) Outputs entity_id (String) counts (File) CollectAllelicCounts Inputs Required bam (File, required ) bam_idx (File, required ) common_sites (File, required ) gatk_docker (String, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required ) Optional cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) mem_gb (Int?) minimum_base_quality (Int?) preemptible_attempts (Int?) Defaults use_ssd (Boolean, default=false) Outputs entity_id (String) allelic_counts (File) ScatterIntervals Inputs Required gatk_docker (String, required ) interval_list (File, required ) num_intervals_per_scatter (Int, required ) Optional cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) mem_gb (Int?) output_dir (String?) preemptible_attempts (Int?) Defaults use_ssd (Boolean, default=false) Outputs scattered_interval_lists (Array[File]) PostprocessGermlineCNVCalls Inputs Required calling_configs (Array[File], required ) contig_ploidy_calls_tar (File, required ) denoising_configs (Array[File], required ) entity_id (String, required ) gatk_docker (String, required ) gcnv_calls_tars (Array[File], required ) gcnv_model_tars (Array[File], required ) gcnvkernel_version (Array[File], required ) ref_copy_number_autosomal_contigs (Int, required ) sample_index (Int, required ) sharded_interval_lists (Array[File], required ) Optional allosomal_contigs (Array[String]?) cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) mem_gb (Int?) preemptible_attempts (Int?) Defaults use_ssd (Boolean, default=false) Outputs genotyped_intervals_vcf (File) genotyped_segments_vcf (File) denoised_copy_ratios (File) CollectSampleQualityMetrics Inputs Required entity_id (String, required ) gatk_docker (String, required ) genotyped_segments_vcf (File, required ) maximum_number_events (Int, required ) Optional cpu (Int?) disk_space_gb (Int?) mem_gb (Int?) preemptible_attempts (Int?) Defaults use_ssd (Boolean, default=false) Outputs qc_status_file (File) qc_status_string (String) CollectModelQualityMetrics Inputs Required gatk_docker (String, required ) gcnv_model_tars (Array[File], required ) Optional cpu (Int?) disk_space_gb (Int?) mem_gb (Int?) preemptible_attempts (Int?) Defaults use_ssd (Boolean, default=false) Outputs qc_status_file (File) qc_status_string (String)","title":"cnv_common_tasks"},{"location":"tasks/cnv_common_tasks/#cnv_common_tasks","text":"","title":"cnv_common_tasks"},{"location":"tasks/cnv_common_tasks/#preprocessintervals","text":"","title":"PreprocessIntervals"},{"location":"tasks/cnv_common_tasks/#inputs","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required","text":"gatk_docker (String, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional","text":"bin_length (Int?) blacklist_intervals (File?) cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) intervals (File?) mem_gb (Int?) padding (Int?) preemptible_attempts (Int?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs","text":"preprocessed_intervals (File)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#annotateintervals","text":"","title":"AnnotateIntervals"},{"location":"tasks/cnv_common_tasks/#inputs_1","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_1","text":"gatk_docker (String, required ) intervals (File, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_1","text":"cpu (Int?) disk_space_gb (Int?) feature_query_lookahead (Int?) gatk4_jar_override (File?) mappability_track_bed (File?) mappability_track_bed_idx (File?) mem_gb (Int?) preemptible_attempts (Int?) segmental_duplication_track_bed (File?) segmental_duplication_track_bed_idx (File?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_1","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_1","text":"annotated_intervals (File)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#filterintervals","text":"","title":"FilterIntervals"},{"location":"tasks/cnv_common_tasks/#inputs_2","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_2","text":"gatk_docker (String, required ) intervals (File, required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_2","text":"annotated_intervals (File?) blacklist_intervals (File?) cpu (Int?) disk_space_gb (Int?) extreme_count_filter_maximum_percentile (Float?) extreme_count_filter_minimum_percentile (Float?) extreme_count_filter_percentage_of_samples (Float?) gatk4_jar_override (File?) low_count_filter_count_threshold (Int?) low_count_filter_percentage_of_samples (Float?) maximum_gc_content (Float?) maximum_mappability (Float?) maximum_segmental_duplication_content (Float?) mem_gb (Int?) minimum_gc_content (Float?) minimum_mappability (Float?) minimum_segmental_duplication_content (Float?) preemptible_attempts (Int?) read_count_files (Array[File]?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_2","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_2","text":"filtered_intervals (File)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#collectcounts","text":"","title":"CollectCounts"},{"location":"tasks/cnv_common_tasks/#inputs_3","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_3","text":"bam (File, required ) bam_idx (File, required ) gatk_docker (String, required ) intervals (File, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_3","text":"cpu (Int?) disk_space_gb (Int?) enable_indexing (Boolean?) format (String?) gatk4_jar_override (File?) mem_gb (Int?) preemptible_attempts (Int?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_3","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_3","text":"entity_id (String) counts (File)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#collectalleliccounts","text":"","title":"CollectAllelicCounts"},{"location":"tasks/cnv_common_tasks/#inputs_4","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_4","text":"bam (File, required ) bam_idx (File, required ) common_sites (File, required ) gatk_docker (String, required ) ref_fasta (File, required ) ref_fasta_dict (File, required ) ref_fasta_fai (File, required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_4","text":"cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) mem_gb (Int?) minimum_base_quality (Int?) preemptible_attempts (Int?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_4","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_4","text":"entity_id (String) allelic_counts (File)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#scatterintervals","text":"","title":"ScatterIntervals"},{"location":"tasks/cnv_common_tasks/#inputs_5","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_5","text":"gatk_docker (String, required ) interval_list (File, required ) num_intervals_per_scatter (Int, required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_5","text":"cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) mem_gb (Int?) output_dir (String?) preemptible_attempts (Int?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_5","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_5","text":"scattered_interval_lists (Array[File])","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#postprocessgermlinecnvcalls","text":"","title":"PostprocessGermlineCNVCalls"},{"location":"tasks/cnv_common_tasks/#inputs_6","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_6","text":"calling_configs (Array[File], required ) contig_ploidy_calls_tar (File, required ) denoising_configs (Array[File], required ) entity_id (String, required ) gatk_docker (String, required ) gcnv_calls_tars (Array[File], required ) gcnv_model_tars (Array[File], required ) gcnvkernel_version (Array[File], required ) ref_copy_number_autosomal_contigs (Int, required ) sample_index (Int, required ) sharded_interval_lists (Array[File], required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_6","text":"allosomal_contigs (Array[String]?) cpu (Int?) disk_space_gb (Int?) gatk4_jar_override (File?) mem_gb (Int?) preemptible_attempts (Int?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_6","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_6","text":"genotyped_intervals_vcf (File) genotyped_segments_vcf (File) denoised_copy_ratios (File)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#collectsamplequalitymetrics","text":"","title":"CollectSampleQualityMetrics"},{"location":"tasks/cnv_common_tasks/#inputs_7","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_7","text":"entity_id (String, required ) gatk_docker (String, required ) genotyped_segments_vcf (File, required ) maximum_number_events (Int, required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_7","text":"cpu (Int?) disk_space_gb (Int?) mem_gb (Int?) preemptible_attempts (Int?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_7","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_7","text":"qc_status_file (File) qc_status_string (String)","title":"Outputs"},{"location":"tasks/cnv_common_tasks/#collectmodelqualitymetrics","text":"","title":"CollectModelQualityMetrics"},{"location":"tasks/cnv_common_tasks/#inputs_8","text":"","title":"Inputs"},{"location":"tasks/cnv_common_tasks/#required_8","text":"gatk_docker (String, required ) gcnv_model_tars (Array[File], required )","title":"Required"},{"location":"tasks/cnv_common_tasks/#optional_8","text":"cpu (Int?) disk_space_gb (Int?) mem_gb (Int?) preemptible_attempts (Int?)","title":"Optional"},{"location":"tasks/cnv_common_tasks/#defaults_8","text":"use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"tasks/cnv_common_tasks/#outputs_8","text":"qc_status_file (File) qc_status_string (String)","title":"Outputs"},{"location":"workflows/AlignAndCheckFingerprintCCS/","text":"AlignAndCheckFingerprintCCS AlignAndCheckFingerprintCCS desciption Given an unaligned CCS/HiFi BAM for a sample, align and verify fingerprint. Inputs Required bam_sample_name (String, required ) fp_store (String, required ): Bucket name and prefix (gs://...) storing the fingerprinting VCFs library (String, required ) ref_map_file (File, required ) sample_id_at_store (String, required ): Name of the sample at the fingerprint store. turn_off_fingperprint_check (Boolean, required ): Please turn of fingerprint check if the reference is not GRCh38. uBAM (File, required ) uPBI (File, required ) Optional AlignReads.runtime_attr_override (RuntimeAttr?) AlignReadsTogether.runtime_attr_override (RuntimeAttr?) IndexAlignedReads.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) ShardLongReads.runtime_attr_override (RuntimeAttr?) ValidateShard.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedPBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ10PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ12PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ15PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ5PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ7PBI.runtime_attr_override (RuntimeAttr?) FPCheckAoU.CheckFingerprint.runtime_attr_override (RuntimeAttr?) FPCheckAoU.ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) FPCheckAoU.GetVCFSampleName.runtime_attr_override (RuntimeAttr?) FPCheckAoU.ResolveFPVCFPath.runtime_attr_override (RuntimeAttr?) Defaults AlignReads.prefix (String, default=\"out\") AlignReadsTogether.prefix (String, default=\"out\") FPCheckAoU.lod_fail_threshold (Float, default=-3.0) FPCheckAoU.lod_pass_threshold (Float, default=6.0) ShardLongReads.drop_per_base_N_pulse_tags (Boolean, default=false) ShardLongReads.num_threads (Int, default=8) ShardLongReads.prefix (String, default=\"shard\") CollectPacBioAlignedMetrics.SummarizeAlignedPBI.qual_threshold (Int, default=0) FPCheckAoU.FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV']) Outputs aligned_bam (File) aligned_bai (File) aligned_pbi (File) alignment_metrics_tar_gz (File) fp_lod_expected_sample (Float?) fp_status (String?) fingerprint_detail_tar_gz (File?) Dot Diagram","title":"AlignAndCheckFingerprintCCS"},{"location":"workflows/AlignAndCheckFingerprintCCS/#alignandcheckfingerprintccs","text":"","title":"AlignAndCheckFingerprintCCS"},{"location":"workflows/AlignAndCheckFingerprintCCS/#alignandcheckfingerprintccs_1","text":"desciption Given an unaligned CCS/HiFi BAM for a sample, align and verify fingerprint.","title":"AlignAndCheckFingerprintCCS"},{"location":"workflows/AlignAndCheckFingerprintCCS/#inputs","text":"","title":"Inputs"},{"location":"workflows/AlignAndCheckFingerprintCCS/#required","text":"bam_sample_name (String, required ) fp_store (String, required ): Bucket name and prefix (gs://...) storing the fingerprinting VCFs library (String, required ) ref_map_file (File, required ) sample_id_at_store (String, required ): Name of the sample at the fingerprint store. turn_off_fingperprint_check (Boolean, required ): Please turn of fingerprint check if the reference is not GRCh38. uBAM (File, required ) uPBI (File, required )","title":"Required"},{"location":"workflows/AlignAndCheckFingerprintCCS/#optional","text":"AlignReads.runtime_attr_override (RuntimeAttr?) AlignReadsTogether.runtime_attr_override (RuntimeAttr?) IndexAlignedReads.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) ShardLongReads.runtime_attr_override (RuntimeAttr?) ValidateShard.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedPBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ10PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ12PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ15PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ5PBI.runtime_attr_override (RuntimeAttr?) CollectPacBioAlignedMetrics.SummarizeAlignedQ7PBI.runtime_attr_override (RuntimeAttr?) FPCheckAoU.CheckFingerprint.runtime_attr_override (RuntimeAttr?) FPCheckAoU.ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) FPCheckAoU.GetVCFSampleName.runtime_attr_override (RuntimeAttr?) FPCheckAoU.ResolveFPVCFPath.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/AlignAndCheckFingerprintCCS/#defaults","text":"AlignReads.prefix (String, default=\"out\") AlignReadsTogether.prefix (String, default=\"out\") FPCheckAoU.lod_fail_threshold (Float, default=-3.0) FPCheckAoU.lod_pass_threshold (Float, default=6.0) ShardLongReads.drop_per_base_N_pulse_tags (Boolean, default=false) ShardLongReads.num_threads (Int, default=8) ShardLongReads.prefix (String, default=\"shard\") CollectPacBioAlignedMetrics.SummarizeAlignedPBI.qual_threshold (Int, default=0) FPCheckAoU.FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV'])","title":"Defaults"},{"location":"workflows/AlignAndCheckFingerprintCCS/#outputs","text":"aligned_bam (File) aligned_bai (File) aligned_pbi (File) alignment_metrics_tar_gz (File) fp_lod_expected_sample (Float?) fp_status (String?) fingerprint_detail_tar_gz (File?)","title":"Outputs"},{"location":"workflows/AlignAndCheckFingerprintCCS/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/AlignedMetrics/","text":"AlignedMetrics AlignedMetrics Inputs Required aligned_bai (File, required ) aligned_bam (File, required ) ref_dict (File, required ) ref_fasta (File, required ) Optional gcs_output_dir (String?) AlignedFlagStats.runtime_attr_override (RuntimeAttr?) AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) FFCoverageFullDist.keyfile (File?) FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) FFCoverageGlobalDist.keyfile (File?) FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) FFCoverageQuantized.keyfile (File?) FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) FFCoverageQuantizedCsi.keyfile (File?) FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) FFCoverageQuantizedDist.keyfile (File?) FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) FFCoverageRegionDist.keyfile (File?) FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) FFCoverageRegions.keyfile (File?) FFCoverageRegions.runtime_attr_override (RuntimeAttr?) FFCoverageRegionsCsi.keyfile (File?) FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) FFDepthSummaries.keyfile (File?) FFDepthSummaries.runtime_attr_override (RuntimeAttr?) FFYieldAligned.keyfile (File?) FFYieldAligned.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MosDepth.runtime_attr_override (RuntimeAttr?) MosDepth.window_size (Int?) SummarizeDepth.runtime_attr_override (RuntimeAttr?) Outputs aligned_flag_stats (File) coverage_full_dist (Array[File]) coverage_global_dist (Array[File]) coverage_region_dist (Array[File]) coverage_regions (Array[File]) coverage_regions_csi (Array[File]) coverage_quantized_dist (Array[File]) coverage_quantized (Array[File]) coverage_quantized_csi (Array[File]) aligned_np_hist (File) aligned_range_gap_hist (File) aligned_zmw_hist (File) aligned_prl_counts (File) aligned_prl_hist (File) aligned_prl_nx (File) aligned_prl_yield_hist (File) aligned_rl_counts (File) aligned_rl_hist (File) aligned_rl_nx (File) aligned_rl_yield_hist (File) raw_chr_intervals (File) Dot Diagram","title":"AlignedMetrics"},{"location":"workflows/AlignedMetrics/#alignedmetrics","text":"","title":"AlignedMetrics"},{"location":"workflows/AlignedMetrics/#alignedmetrics_1","text":"","title":"AlignedMetrics"},{"location":"workflows/AlignedMetrics/#inputs","text":"","title":"Inputs"},{"location":"workflows/AlignedMetrics/#required","text":"aligned_bai (File, required ) aligned_bam (File, required ) ref_dict (File, required ) ref_fasta (File, required )","title":"Required"},{"location":"workflows/AlignedMetrics/#optional","text":"gcs_output_dir (String?) AlignedFlagStats.runtime_attr_override (RuntimeAttr?) AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) FFCoverageFullDist.keyfile (File?) FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) FFCoverageGlobalDist.keyfile (File?) FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) FFCoverageQuantized.keyfile (File?) FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) FFCoverageQuantizedCsi.keyfile (File?) FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) FFCoverageQuantizedDist.keyfile (File?) FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) FFCoverageRegionDist.keyfile (File?) FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) FFCoverageRegions.keyfile (File?) FFCoverageRegions.runtime_attr_override (RuntimeAttr?) FFCoverageRegionsCsi.keyfile (File?) FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) FFDepthSummaries.keyfile (File?) FFDepthSummaries.runtime_attr_override (RuntimeAttr?) FFYieldAligned.keyfile (File?) FFYieldAligned.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MosDepth.runtime_attr_override (RuntimeAttr?) MosDepth.window_size (Int?) SummarizeDepth.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/AlignedMetrics/#outputs","text":"aligned_flag_stats (File) coverage_full_dist (Array[File]) coverage_global_dist (Array[File]) coverage_region_dist (Array[File]) coverage_regions (Array[File]) coverage_regions_csi (Array[File]) coverage_quantized_dist (Array[File]) coverage_quantized (Array[File]) coverage_quantized_csi (Array[File]) aligned_np_hist (File) aligned_range_gap_hist (File) aligned_zmw_hist (File) aligned_prl_counts (File) aligned_prl_hist (File) aligned_prl_nx (File) aligned_prl_yield_hist (File) aligned_rl_counts (File) aligned_rl_hist (File) aligned_rl_nx (File) aligned_rl_yield_hist (File) raw_chr_intervals (File)","title":"Outputs"},{"location":"workflows/AlignedMetrics/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/AnnotateTranscriptomeWithGuide/","text":"AnnotateTranscriptomeWithGuide AnnotateTranscriptomeWithGuide description Annotate a transcriptome with a guide GTF Inputs Required aligned_bai (File, required ): GCS path to aligned BAM file index aligned_bam (File, required ): GCS path to aligned BAM file gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files gtf (File, required ): guide GTF (e.g. Gencode38) participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional CompareTranscriptomes.runtime_attr_override (RuntimeAttr?) ExtractTranscriptSequences.runtime_attr_override (RuntimeAttr?) FinalizeAnnotatedGTF.keyfile (File?) FinalizeAnnotatedGTF.name (String?) FinalizeAnnotatedGTF.runtime_attr_override (RuntimeAttr?) FinalizeDict.keyfile (File?) FinalizeDict.name (String?) FinalizeDict.runtime_attr_override (RuntimeAttr?) FinalizeFa.keyfile (File?) FinalizeFa.name (String?) FinalizeFa.runtime_attr_override (RuntimeAttr?) FinalizeFai.keyfile (File?) FinalizeFai.name (String?) FinalizeFai.runtime_attr_override (RuntimeAttr?) FinalizeGTF.keyfile (File?) FinalizeGTF.name (String?) FinalizeGTF.runtime_attr_override (RuntimeAttr?) FinalizeLoci.keyfile (File?) FinalizeLoci.name (String?) FinalizeLoci.runtime_attr_override (RuntimeAttr?) FinalizeRefMap.keyfile (File?) FinalizeRefMap.name (String?) FinalizeRefMap.runtime_attr_override (RuntimeAttr?) FinalizeStats.keyfile (File?) FinalizeStats.runtime_attr_override (RuntimeAttr?) FinalizeTMap.keyfile (File?) FinalizeTMap.name (String?) FinalizeTMap.runtime_attr_override (RuntimeAttr?) FinalizeTracking.keyfile (File?) FinalizeTracking.name (String?) FinalizeTracking.runtime_attr_override (RuntimeAttr?) Quantify.runtime_attr_override (RuntimeAttr?) Defaults keep_retained_introns (Boolean, default=false): keep apparently retained introns in new transcriptome annotation Outputs transcriptome_gtf (File) transcriptome_fa (File) transcriptome_fai (File) transcriptome_dict (File) comp_annotated_gtf (File) comp_loci (File) comp_stats (File) comp_tracking (File) comp_refmap (File) comp_tmap (File) Dot Diagram","title":"AnnotateTranscriptomeWithGuide"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#annotatetranscriptomewithguide","text":"","title":"AnnotateTranscriptomeWithGuide"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#annotatetranscriptomewithguide_1","text":"description Annotate a transcriptome with a guide GTF","title":"AnnotateTranscriptomeWithGuide"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#inputs","text":"","title":"Inputs"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#required","text":"aligned_bai (File, required ): GCS path to aligned BAM file index aligned_bam (File, required ): GCS path to aligned BAM file gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files gtf (File, required ): guide GTF (e.g. Gencode38) participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#optional","text":"CompareTranscriptomes.runtime_attr_override (RuntimeAttr?) ExtractTranscriptSequences.runtime_attr_override (RuntimeAttr?) FinalizeAnnotatedGTF.keyfile (File?) FinalizeAnnotatedGTF.name (String?) FinalizeAnnotatedGTF.runtime_attr_override (RuntimeAttr?) FinalizeDict.keyfile (File?) FinalizeDict.name (String?) FinalizeDict.runtime_attr_override (RuntimeAttr?) FinalizeFa.keyfile (File?) FinalizeFa.name (String?) FinalizeFa.runtime_attr_override (RuntimeAttr?) FinalizeFai.keyfile (File?) FinalizeFai.name (String?) FinalizeFai.runtime_attr_override (RuntimeAttr?) FinalizeGTF.keyfile (File?) FinalizeGTF.name (String?) FinalizeGTF.runtime_attr_override (RuntimeAttr?) FinalizeLoci.keyfile (File?) FinalizeLoci.name (String?) FinalizeLoci.runtime_attr_override (RuntimeAttr?) FinalizeRefMap.keyfile (File?) FinalizeRefMap.name (String?) FinalizeRefMap.runtime_attr_override (RuntimeAttr?) FinalizeStats.keyfile (File?) FinalizeStats.runtime_attr_override (RuntimeAttr?) FinalizeTMap.keyfile (File?) FinalizeTMap.name (String?) FinalizeTMap.runtime_attr_override (RuntimeAttr?) FinalizeTracking.keyfile (File?) FinalizeTracking.name (String?) FinalizeTracking.runtime_attr_override (RuntimeAttr?) Quantify.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#defaults","text":"keep_retained_introns (Boolean, default=false): keep apparently retained introns in new transcriptome annotation","title":"Defaults"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#outputs","text":"transcriptome_gtf (File) transcriptome_fa (File) transcriptome_fai (File) transcriptome_dict (File) comp_annotated_gtf (File) comp_loci (File) comp_stats (File) comp_tracking (File) comp_refmap (File) comp_tmap (File)","title":"Outputs"},{"location":"workflows/AnnotateTranscriptomeWithGuide/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/AssignChildLongReads/","text":"AssignChildLongReads A workflow that performs trio-binning of child long reads given parental (short) reads. Based on the trio-canu publication De novo assembly of haplotype-resolved genomes with trio binning https://www.nature.com/articles/nbt.4277 This holds the sub-workflow for part two: given the k-mer stats database from part one, classify child long reads AssignChildLongReadsGivenParentalKmerStats Inputs Required child_long_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of child long reads long_read_platform (String, required ): platform of long read sequencing; currently only one of [pacbio-raw, nanopore-raw] is supported meryl_db_files_father (Array[File], required ): Meryl databases files on paternal (short) reads meryl_db_files_mother (Array[File], required ): Meryl databases files on maternal (short) reads meryl_stats_father (File, required ): Meryl statistics single file on paternal (short) reads meryl_stats_mother (File, required ): Meryl statistics single file on maternal (short) reads vm_local_monitoring_script (File, required ): GCS file holding a resouce monitoring script that runs locally and collects info for a very specific purpose workdir_name (String, required ): name of working directory Optional run_with_debug (Boolean?): [optional] whether to run in debug mode (takes significantly more disk space and more logs); defaults to false AssignChildLongReads.runtime_attr_override (RuntimeAttr?) Defaults child_read_assign_memoryG_est (Int, default=32): [default-valued] estimate on how many GB memory to allocate to the child longread classification step child_read_assign_threads_est (Int, default=36): [default-valued] estimate on how many threads to allocate to the child longread classification step Outputs reads_assigned_to_father (File) reads_assigned_to_mother (File) unassigned_reads (File) Dot Diagram","title":"AssignChildLongReads"},{"location":"workflows/AssignChildLongReads/#assignchildlongreads","text":"","title":"AssignChildLongReads"},{"location":"workflows/AssignChildLongReads/#_1","text":"A workflow that performs trio-binning of child long reads given parental (short) reads. Based on the trio-canu publication De novo assembly of haplotype-resolved genomes with trio binning https://www.nature.com/articles/nbt.4277 This holds the sub-workflow for part two: given the k-mer stats database from part one, classify child long reads","title":""},{"location":"workflows/AssignChildLongReads/#_2","text":"","title":""},{"location":"workflows/AssignChildLongReads/#_3","text":"","title":""},{"location":"workflows/AssignChildLongReads/#assignchildlongreadsgivenparentalkmerstats","text":"","title":"AssignChildLongReadsGivenParentalKmerStats"},{"location":"workflows/AssignChildLongReads/#inputs","text":"","title":"Inputs"},{"location":"workflows/AssignChildLongReads/#required","text":"child_long_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of child long reads long_read_platform (String, required ): platform of long read sequencing; currently only one of [pacbio-raw, nanopore-raw] is supported meryl_db_files_father (Array[File], required ): Meryl databases files on paternal (short) reads meryl_db_files_mother (Array[File], required ): Meryl databases files on maternal (short) reads meryl_stats_father (File, required ): Meryl statistics single file on paternal (short) reads meryl_stats_mother (File, required ): Meryl statistics single file on maternal (short) reads vm_local_monitoring_script (File, required ): GCS file holding a resouce monitoring script that runs locally and collects info for a very specific purpose workdir_name (String, required ): name of working directory","title":"Required"},{"location":"workflows/AssignChildLongReads/#optional","text":"run_with_debug (Boolean?): [optional] whether to run in debug mode (takes significantly more disk space and more logs); defaults to false AssignChildLongReads.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/AssignChildLongReads/#defaults","text":"child_read_assign_memoryG_est (Int, default=32): [default-valued] estimate on how many GB memory to allocate to the child longread classification step child_read_assign_threads_est (Int, default=36): [default-valued] estimate on how many threads to allocate to the child longread classification step","title":"Defaults"},{"location":"workflows/AssignChildLongReads/#outputs","text":"reads_assigned_to_father (File) reads_assigned_to_mother (File) unassigned_reads (File)","title":"Outputs"},{"location":"workflows/AssignChildLongReads/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CCSPepper/","text":"CCSPepper CCSPepper description Workflow for getting haplotagged BAM, VCF and gVCF from DV-pepper. Note VCF is un-phased. Inputs Required bai (File, required ) bam (File, required ) dv_memory (Int, required ) dv_threads (Int, required ) pepper_memory (Int, required ) pepper_threads (Int, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) Optional deep_variant.runtime_attr_override (RuntimeAttr?) get_hap_tagged_bam.runtime_attr_override (RuntimeAttr?) Defaults zones (String, default=\"us-central1-b us-central1-c\"): select which zone (GCP) to run this task Outputs VCF (File) VCF_tbi (File) gVCF (File) gVCF_tbi (File) hap_tagged_bam (File) hap_tagged_bai (File) Dot Diagram","title":"CCSPepper"},{"location":"workflows/CCSPepper/#ccspepper","text":"","title":"CCSPepper"},{"location":"workflows/CCSPepper/#_1","text":"","title":""},{"location":"workflows/CCSPepper/#_2","text":"","title":""},{"location":"workflows/CCSPepper/#ccspepper_1","text":"description Workflow for getting haplotagged BAM, VCF and gVCF from DV-pepper. Note VCF is un-phased.","title":"CCSPepper"},{"location":"workflows/CCSPepper/#inputs","text":"","title":"Inputs"},{"location":"workflows/CCSPepper/#required","text":"bai (File, required ) bam (File, required ) dv_memory (Int, required ) dv_threads (Int, required ) pepper_memory (Int, required ) pepper_threads (Int, required ) ref_fasta (File, required ) ref_fasta_fai (File, required )","title":"Required"},{"location":"workflows/CCSPepper/#optional","text":"deep_variant.runtime_attr_override (RuntimeAttr?) get_hap_tagged_bam.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/CCSPepper/#defaults","text":"zones (String, default=\"us-central1-b us-central1-c\"): select which zone (GCP) to run this task","title":"Defaults"},{"location":"workflows/CCSPepper/#outputs","text":"VCF (File) VCF_tbi (File) gVCF (File) gVCF_tbi (File) hap_tagged_bam (File) hap_tagged_bai (File)","title":"Outputs"},{"location":"workflows/CCSPepper/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CallAssemblyVariants/","text":"CallAssemblyVariants CallAssemblyVariants Inputs Required asm_fasta (File, required ): haploid assembly participant_name (String, required ): participant name prefix (String, required ): prefix for output files ref_fasta (File, required ): reference to which assembly should be aligned Optional AlignAsPAF.runtime_attr_override (RuntimeAttr?) Paftools.runtime_attr_override (RuntimeAttr?) Outputs paf (File) paftools_vcf (File) Dot Diagram","title":"CallAssemblyVariants"},{"location":"workflows/CallAssemblyVariants/#callassemblyvariants","text":"","title":"CallAssemblyVariants"},{"location":"workflows/CallAssemblyVariants/#callassemblyvariants_1","text":"","title":"CallAssemblyVariants"},{"location":"workflows/CallAssemblyVariants/#inputs","text":"","title":"Inputs"},{"location":"workflows/CallAssemblyVariants/#required","text":"asm_fasta (File, required ): haploid assembly participant_name (String, required ): participant name prefix (String, required ): prefix for output files ref_fasta (File, required ): reference to which assembly should be aligned","title":"Required"},{"location":"workflows/CallAssemblyVariants/#optional","text":"AlignAsPAF.runtime_attr_override (RuntimeAttr?) Paftools.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/CallAssemblyVariants/#outputs","text":"paf (File) paftools_vcf (File)","title":"Outputs"},{"location":"workflows/CallAssemblyVariants/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CallVariantsONT/","text":"CallVariantsONT CallVariants descrition A workflow for calling small and/or structural variants from an aligned ONT BAM file. Inputs Required bai (File, required ) bam (File, required ) call_small_variants (Boolean, required ) call_small_vars_on_mitochondria (Boolean, required ): if false, will not attempt to call variants on mitochondria call_svs (Boolean, required ) fast_less_sensitive_sv (Boolean, required ): to trade less sensitive SV calling for faster speed prefix (String, required ) ref_dict (File, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) run_dv_pepper_analysis (Boolean, required ): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sample_id (String, required ) Optional dvp_memory (Int?) dvp_threads (Int?) ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair tandem_repeat_bed (File?): BED file containing TRF finder for better PBSV calls (e.g. http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.trf.bed.gz) Clair.chr (String?) Clair.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MergeAndSortClairVCFs.header_definitions_file (File?) MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) MergeAndSortClair_gVCFs.header_definitions_file (File?) MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) MergeBams.runtime_attr_override (RuntimeAttr?) MergeDeepVariantGVCFs.header_definitions_file (File?) MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) MergeDeepVariantPhasedVCFs.header_definitions_file (File?) MergeDeepVariantPhasedVCFs.runtime_attr_override (RuntimeAttr?) MergeDeepVariantVCFs.header_definitions_file (File?) MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) Pepper.runtime_attr_override (RuntimeAttr?) SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) Sniffles2SV.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) size_balanced_scatter.runtime_attr_override (RuntimeAttr?) PBSVslow.Call.runtime_attr_override (RuntimeAttr?) PBSVslow.Discover.chr (String?) PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) RunPBSV.Call.runtime_attr_override (RuntimeAttr?) RunPBSV.Discover.chr (String?) RunPBSV.Discover.runtime_attr_override (RuntimeAttr?) Defaults minsvlen (Int, default=50): Minimum SV length in bp (default: 50) SmallVariantsScatter.prefix (String, default=\"subset\") SubsetBam.prefix (String, default=\"subset\") Outputs sniffles_vcf (File?) sniffles_tbi (File?) pbsv_vcf (File?) pbsv_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_vcf (File?) dvp_tbi (File?) Dot Diagram","title":"CallVariantsONT"},{"location":"workflows/CallVariantsONT/#callvariantsont","text":"","title":"CallVariantsONT"},{"location":"workflows/CallVariantsONT/#callvariants","text":"descrition A workflow for calling small and/or structural variants from an aligned ONT BAM file.","title":"CallVariants"},{"location":"workflows/CallVariantsONT/#inputs","text":"","title":"Inputs"},{"location":"workflows/CallVariantsONT/#required","text":"bai (File, required ) bam (File, required ) call_small_variants (Boolean, required ) call_small_vars_on_mitochondria (Boolean, required ): if false, will not attempt to call variants on mitochondria call_svs (Boolean, required ) fast_less_sensitive_sv (Boolean, required ): to trade less sensitive SV calling for faster speed prefix (String, required ) ref_dict (File, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) run_dv_pepper_analysis (Boolean, required ): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sample_id (String, required )","title":"Required"},{"location":"workflows/CallVariantsONT/#optional","text":"dvp_memory (Int?) dvp_threads (Int?) ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair tandem_repeat_bed (File?): BED file containing TRF finder for better PBSV calls (e.g. http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.trf.bed.gz) Clair.chr (String?) Clair.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MergeAndSortClairVCFs.header_definitions_file (File?) MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) MergeAndSortClair_gVCFs.header_definitions_file (File?) MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) MergeBams.runtime_attr_override (RuntimeAttr?) MergeDeepVariantGVCFs.header_definitions_file (File?) MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) MergeDeepVariantPhasedVCFs.header_definitions_file (File?) MergeDeepVariantPhasedVCFs.runtime_attr_override (RuntimeAttr?) MergeDeepVariantVCFs.header_definitions_file (File?) MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) Pepper.runtime_attr_override (RuntimeAttr?) SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) Sniffles2SV.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) size_balanced_scatter.runtime_attr_override (RuntimeAttr?) PBSVslow.Call.runtime_attr_override (RuntimeAttr?) PBSVslow.Discover.chr (String?) PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) RunPBSV.Call.runtime_attr_override (RuntimeAttr?) RunPBSV.Discover.chr (String?) RunPBSV.Discover.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/CallVariantsONT/#defaults","text":"minsvlen (Int, default=50): Minimum SV length in bp (default: 50) SmallVariantsScatter.prefix (String, default=\"subset\") SubsetBam.prefix (String, default=\"subset\")","title":"Defaults"},{"location":"workflows/CallVariantsONT/#outputs","text":"sniffles_vcf (File?) sniffles_tbi (File?) pbsv_vcf (File?) pbsv_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_vcf (File?) dvp_tbi (File?)","title":"Outputs"},{"location":"workflows/CallVariantsONT/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CallVariantsPBCCS/","text":"CallVariantsPBCCS CallVariants description A workflow for calling small and/or structural variants from an aligned CCS BAM file. Inputs Required bai (File, required ) bam (File, required ) call_small_variants (Boolean, required ) call_small_vars_on_mitochondria (Boolean, required ): if false, will not attempt to call variants on mitochondria call_svs (Boolean, required ) fast_less_sensitive_sv (Boolean, required ): to trade less sensitive SV calling for faster speed prefix (String, required ) ref_dict (File, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) run_dv_pepper_analysis (Boolean, required ): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sample_id (String, required ) Optional dvp_memory (Int?) dvp_threads (Int?) ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair tandem_repeat_bed (File?): BED file containing TRF finder for better PBSV calls (e.g. http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.trf.bed.gz) Clair.chr (String?) Clair.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MarginPhase.runtime_attr_override (RuntimeAttr?) MergeAndSortClairVCFs.header_definitions_file (File?) MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) MergeAndSortClair_gVCFs.header_definitions_file (File?) MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) MergeBams.runtime_attr_override (RuntimeAttr?) MergeDeepVariantGVCFs.header_definitions_file (File?) MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) MergeDeepVariantVCFs.header_definitions_file (File?) MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) Sniffles2SV.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) size_balanced_scatter.runtime_attr_override (RuntimeAttr?) CCSPepper.deep_variant.runtime_attr_override (RuntimeAttr?) CCSPepper.get_hap_tagged_bam.runtime_attr_override (RuntimeAttr?) PBSVslow.Call.runtime_attr_override (RuntimeAttr?) PBSVslow.Discover.chr (String?) PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) RunPBSV.Call.runtime_attr_override (RuntimeAttr?) RunPBSV.Discover.chr (String?) RunPBSV.Discover.runtime_attr_override (RuntimeAttr?) Defaults minsvlen (Int, default=50): Minimum SV length in bp (default: 50) SmallVariantsScatter.prefix (String, default=\"subset\") SubsetBam.prefix (String, default=\"subset\") Outputs sniffles_vcf (File?) sniffles_tbi (File?) sniffles_snf (File?) pbsv_vcf (File?) pbsv_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_vcf (File?) dvp_tbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?) Dot Diagram","title":"CallVariantsPBCCS"},{"location":"workflows/CallVariantsPBCCS/#callvariantspbccs","text":"","title":"CallVariantsPBCCS"},{"location":"workflows/CallVariantsPBCCS/#callvariants","text":"description A workflow for calling small and/or structural variants from an aligned CCS BAM file.","title":"CallVariants"},{"location":"workflows/CallVariantsPBCCS/#inputs","text":"","title":"Inputs"},{"location":"workflows/CallVariantsPBCCS/#required","text":"bai (File, required ) bam (File, required ) call_small_variants (Boolean, required ) call_small_vars_on_mitochondria (Boolean, required ): if false, will not attempt to call variants on mitochondria call_svs (Boolean, required ) fast_less_sensitive_sv (Boolean, required ): to trade less sensitive SV calling for faster speed prefix (String, required ) ref_dict (File, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) run_dv_pepper_analysis (Boolean, required ): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sample_id (String, required )","title":"Required"},{"location":"workflows/CallVariantsPBCCS/#optional","text":"dvp_memory (Int?) dvp_threads (Int?) ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair tandem_repeat_bed (File?): BED file containing TRF finder for better PBSV calls (e.g. http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.trf.bed.gz) Clair.chr (String?) Clair.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MarginPhase.runtime_attr_override (RuntimeAttr?) MergeAndSortClairVCFs.header_definitions_file (File?) MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) MergeAndSortClair_gVCFs.header_definitions_file (File?) MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) MergeBams.runtime_attr_override (RuntimeAttr?) MergeDeepVariantGVCFs.header_definitions_file (File?) MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) MergeDeepVariantVCFs.header_definitions_file (File?) MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) Sniffles2SV.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) size_balanced_scatter.runtime_attr_override (RuntimeAttr?) CCSPepper.deep_variant.runtime_attr_override (RuntimeAttr?) CCSPepper.get_hap_tagged_bam.runtime_attr_override (RuntimeAttr?) PBSVslow.Call.runtime_attr_override (RuntimeAttr?) PBSVslow.Discover.chr (String?) PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) RunPBSV.Call.runtime_attr_override (RuntimeAttr?) RunPBSV.Discover.chr (String?) RunPBSV.Discover.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/CallVariantsPBCCS/#defaults","text":"minsvlen (Int, default=50): Minimum SV length in bp (default: 50) SmallVariantsScatter.prefix (String, default=\"subset\") SubsetBam.prefix (String, default=\"subset\")","title":"Defaults"},{"location":"workflows/CallVariantsPBCCS/#outputs","text":"sniffles_vcf (File?) sniffles_tbi (File?) sniffles_snf (File?) pbsv_vcf (File?) pbsv_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_vcf (File?) dvp_tbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?)","title":"Outputs"},{"location":"workflows/CallVariantsPBCCS/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CallVariantsPBCLR/","text":"CallVariantsPBCLR CallVariants descrition A workflow for calling small and/or structural variants from an aligned CLR BAM file. Inputs Required bai (File, required ): index accompanying the BAM bam (File, required ): input BAM from which to call SVs call_small_vars_on_mitochondria (Boolean, required ): if false, will not attempt to call variants on mitochondria call_svs (Boolean, required ) fast_less_sensitive_sv (Boolean, required ) prefix (String, required ): prefix for output files ref_dict (File, required ): sequence dictionary accompanying the reference ref_fasta (File, required ): reference to which the BAM was aligned to ref_fasta_fai (File, required ): index accompanying the reference Optional tandem_repeat_bed (File?): BED file containing TRF finder (e.g. http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.trf.bed.gz) FixSnifflesVCF.ref_fasta_fai (File?): index accompanying the reference FixSnifflesVCF.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) MergeSnifflesVCFs.runtime_attr_override (RuntimeAttr?) Sniffles.runtime_attr_override (RuntimeAttr?) SnifflesSlow.chr (String?) SnifflesSlow.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) UnionHeadersSnifflesVCFs.runtime_attr_override (RuntimeAttr?) ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) ZipAndIndexSniffles.ref_fasta_fai (File?): index accompanying the reference ZipAndIndexSniffles.runtime_attr_override (RuntimeAttr?) PBSVslow.Call.runtime_attr_override (RuntimeAttr?) PBSVslow.Discover.chr (String?) PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) RunPBSV.Call.runtime_attr_override (RuntimeAttr?) RunPBSV.Discover.chr (String?) RunPBSV.Discover.runtime_attr_override (RuntimeAttr?) Defaults call_small_variants (Boolean, default=false) Sniffles.min_mq (Int, default=20) Sniffles.min_read_length (Int, default=1000) Sniffles.min_read_support (Int, default=2) SnifflesSlow.min_mq (Int, default=20) SnifflesSlow.min_read_length (Int, default=1000) SnifflesSlow.min_read_support (Int, default=2) SubsetBam.prefix (String, default=\"subset\"): prefix for output files Outputs sniffles_vcf (File?) sniffles_tbi (File?) pbsv_vcf (File?) pbsv_tbi (File?) Dot Diagram","title":"CallVariantsPBCLR"},{"location":"workflows/CallVariantsPBCLR/#callvariantspbclr","text":"","title":"CallVariantsPBCLR"},{"location":"workflows/CallVariantsPBCLR/#_1","text":"","title":""},{"location":"workflows/CallVariantsPBCLR/#_2","text":"","title":""},{"location":"workflows/CallVariantsPBCLR/#callvariants","text":"descrition A workflow for calling small and/or structural variants from an aligned CLR BAM file.","title":"CallVariants"},{"location":"workflows/CallVariantsPBCLR/#inputs","text":"","title":"Inputs"},{"location":"workflows/CallVariantsPBCLR/#required","text":"bai (File, required ): index accompanying the BAM bam (File, required ): input BAM from which to call SVs call_small_vars_on_mitochondria (Boolean, required ): if false, will not attempt to call variants on mitochondria call_svs (Boolean, required ) fast_less_sensitive_sv (Boolean, required ) prefix (String, required ): prefix for output files ref_dict (File, required ): sequence dictionary accompanying the reference ref_fasta (File, required ): reference to which the BAM was aligned to ref_fasta_fai (File, required ): index accompanying the reference","title":"Required"},{"location":"workflows/CallVariantsPBCLR/#optional","text":"tandem_repeat_bed (File?): BED file containing TRF finder (e.g. http://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.trf.bed.gz) FixSnifflesVCF.ref_fasta_fai (File?): index accompanying the reference FixSnifflesVCF.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) MergeSnifflesVCFs.runtime_attr_override (RuntimeAttr?) Sniffles.runtime_attr_override (RuntimeAttr?) SnifflesSlow.chr (String?) SnifflesSlow.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) UnionHeadersSnifflesVCFs.runtime_attr_override (RuntimeAttr?) ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) ZipAndIndexSniffles.ref_fasta_fai (File?): index accompanying the reference ZipAndIndexSniffles.runtime_attr_override (RuntimeAttr?) PBSVslow.Call.runtime_attr_override (RuntimeAttr?) PBSVslow.Discover.chr (String?) PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) RunPBSV.Call.runtime_attr_override (RuntimeAttr?) RunPBSV.Discover.chr (String?) RunPBSV.Discover.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/CallVariantsPBCLR/#defaults","text":"call_small_variants (Boolean, default=false) Sniffles.min_mq (Int, default=20) Sniffles.min_read_length (Int, default=1000) Sniffles.min_read_support (Int, default=2) SnifflesSlow.min_mq (Int, default=20) SnifflesSlow.min_read_length (Int, default=1000) SnifflesSlow.min_read_support (Int, default=2) SubsetBam.prefix (String, default=\"subset\"): prefix for output files","title":"Defaults"},{"location":"workflows/CallVariantsPBCLR/#outputs","text":"sniffles_vcf (File?) sniffles_tbi (File?) pbsv_vcf (File?) pbsv_tbi (File?)","title":"Outputs"},{"location":"workflows/CallVariantsPBCLR/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/Canu/","text":"Canu Canu Inputs Required assemble_error_rate (Float, required ) correct_error_rate (Float, required ) genome_size (Int, required ) prefix (String, required ) reads (File, required ) trim_error_rate (Float, required ) Optional Assemble.runtime_attr_override (RuntimeAttr?) Correct.runtime_attr_override (RuntimeAttr?) Trim.runtime_attr_override (RuntimeAttr?) Outputs fa (File) Dot Diagram","title":"Canu"},{"location":"workflows/Canu/#canu","text":"","title":"Canu"},{"location":"workflows/Canu/#_1","text":"","title":""},{"location":"workflows/Canu/#_2","text":"","title":""},{"location":"workflows/Canu/#canu_1","text":"","title":"Canu"},{"location":"workflows/Canu/#inputs","text":"","title":"Inputs"},{"location":"workflows/Canu/#required","text":"assemble_error_rate (Float, required ) correct_error_rate (Float, required ) genome_size (Int, required ) prefix (String, required ) reads (File, required ) trim_error_rate (Float, required )","title":"Required"},{"location":"workflows/Canu/#optional","text":"Assemble.runtime_attr_override (RuntimeAttr?) Correct.runtime_attr_override (RuntimeAttr?) Trim.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/Canu/#outputs","text":"fa (File)","title":"Outputs"},{"location":"workflows/Canu/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CleanupIntermediate/","text":"CleanupIntermediate CleanupIntermediate description A workflow to clean up intermediate files from running workflows on Terra. Use at your own risk. Inputs Required submissionIDs (Array[String], required ): List of submissions whose intermediate files are to be deleted workspace_bucket (String, required ) Outputs None Dot Diagram","title":"CleanupIntermediate"},{"location":"workflows/CleanupIntermediate/#cleanupintermediate","text":"","title":"CleanupIntermediate"},{"location":"workflows/CleanupIntermediate/#cleanupintermediate_1","text":"description A workflow to clean up intermediate files from running workflows on Terra. Use at your own risk.","title":"CleanupIntermediate"},{"location":"workflows/CleanupIntermediate/#inputs","text":"","title":"Inputs"},{"location":"workflows/CleanupIntermediate/#required","text":"submissionIDs (Array[String], required ): List of submissions whose intermediate files are to be deleted workspace_bucket (String, required )","title":"Required"},{"location":"workflows/CleanupIntermediate/#outputs","text":"None","title":"Outputs"},{"location":"workflows/CleanupIntermediate/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CollectPacBioAlignedMetrics/","text":"CollectPacBioAlignedMetrics CollectPacBioAlignedMetrics desciption Collect a few custom metrics on the alignments. Inputs Required aligned_bai (File, required ) aligned_bam (File, required ) aligned_pbi (File, required ) Optional NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) SummarizeAlignedPBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ10PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ12PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ15PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ5PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ7PBI.runtime_attr_override (RuntimeAttr?) Defaults SummarizeAlignedPBI.qual_threshold (Int, default=0) Outputs custom_aln_metrics_summary (File) nanoplot_stats (File) nanoplot_pngs (Array[File]) Dot Diagram","title":"CollectPacBioAlignedMetrics"},{"location":"workflows/CollectPacBioAlignedMetrics/#collectpacbioalignedmetrics","text":"","title":"CollectPacBioAlignedMetrics"},{"location":"workflows/CollectPacBioAlignedMetrics/#collectpacbioalignedmetrics_1","text":"desciption Collect a few custom metrics on the alignments.","title":"CollectPacBioAlignedMetrics"},{"location":"workflows/CollectPacBioAlignedMetrics/#inputs","text":"","title":"Inputs"},{"location":"workflows/CollectPacBioAlignedMetrics/#required","text":"aligned_bai (File, required ) aligned_bam (File, required ) aligned_pbi (File, required )","title":"Required"},{"location":"workflows/CollectPacBioAlignedMetrics/#optional","text":"NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) SummarizeAlignedPBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ10PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ12PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ15PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ5PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ7PBI.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/CollectPacBioAlignedMetrics/#defaults","text":"SummarizeAlignedPBI.qual_threshold (Int, default=0)","title":"Defaults"},{"location":"workflows/CollectPacBioAlignedMetrics/#outputs","text":"custom_aln_metrics_summary (File) nanoplot_stats (File) nanoplot_pngs (Array[File])","title":"Outputs"},{"location":"workflows/CollectPacBioAlignedMetrics/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CollectParentsKmerStats/","text":"CollectParentsKmerStats A workflow that performs trio-binning of child long reads given parental (short) reads. Based on the trio-canu publication De novo assembly of haplotype-resolved genomes with trio binning https://www.nature.com/articles/nbt.4277 This holds the sub-workflow for part one: collect k-mer stats given parental (short) reads CollectParentsKmerStats Inputs Required father_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of paternal origin genome_size (String, required ): an esimate on genome size of the specicies (affects k-value picking) mother_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of maternal origin workdir_name (String, required ): name of working directory Optional kmerSize (Int?): [optional] force specifying k-value in collecting k-mer stats on parents run_with_debug (Boolean?): [optional] whether to run in debug mode (takes significantly more disk space and more logs); defaults to false MerylCount.runtime_attr_override (RuntimeAttr?) MerylMergeAndSubtract.runtime_attr_override (RuntimeAttr?) ParentalReadsRepartitionAndMerylConfigure.runtime_attr_override (RuntimeAttr?) Defaults meryl_operations_threads_est (Int, default=8): [default-valued] estimate on how many threads to allocate to k-mer stats collection step Outputs Father_haplotype_merylDB (Array[File]) Mother_haplotype_merylDB (Array[File]) Father_reads_statistics (File) Mother_reads_statistics (File) Dot Diagram","title":"CollectParentsKmerStats"},{"location":"workflows/CollectParentsKmerStats/#collectparentskmerstats","text":"","title":"CollectParentsKmerStats"},{"location":"workflows/CollectParentsKmerStats/#_1","text":"A workflow that performs trio-binning of child long reads given parental (short) reads. Based on the trio-canu publication De novo assembly of haplotype-resolved genomes with trio binning https://www.nature.com/articles/nbt.4277 This holds the sub-workflow for part one: collect k-mer stats given parental (short) reads","title":""},{"location":"workflows/CollectParentsKmerStats/#_2","text":"","title":""},{"location":"workflows/CollectParentsKmerStats/#_3","text":"","title":""},{"location":"workflows/CollectParentsKmerStats/#collectparentskmerstats_1","text":"","title":"CollectParentsKmerStats"},{"location":"workflows/CollectParentsKmerStats/#inputs","text":"","title":"Inputs"},{"location":"workflows/CollectParentsKmerStats/#required","text":"father_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of paternal origin genome_size (String, required ): an esimate on genome size of the specicies (affects k-value picking) mother_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of maternal origin workdir_name (String, required ): name of working directory","title":"Required"},{"location":"workflows/CollectParentsKmerStats/#optional","text":"kmerSize (Int?): [optional] force specifying k-value in collecting k-mer stats on parents run_with_debug (Boolean?): [optional] whether to run in debug mode (takes significantly more disk space and more logs); defaults to false MerylCount.runtime_attr_override (RuntimeAttr?) MerylMergeAndSubtract.runtime_attr_override (RuntimeAttr?) ParentalReadsRepartitionAndMerylConfigure.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/CollectParentsKmerStats/#defaults","text":"meryl_operations_threads_est (Int, default=8): [default-valued] estimate on how many threads to allocate to k-mer stats collection step","title":"Defaults"},{"location":"workflows/CollectParentsKmerStats/#outputs","text":"Father_haplotype_merylDB (Array[File]) Mother_haplotype_merylDB (Array[File]) Father_reads_statistics (File) Mother_reads_statistics (File)","title":"Outputs"},{"location":"workflows/CollectParentsKmerStats/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/","text":"CollectSMRTCellUnalignedMetrics CollectSMRTCellUnalignedMetrics Inputs Required smrtcell_pbi (File, required ) Defaults SummarizePBI.qual_threshold (Int, default=0) Outputs pbi_summary (File) polymerase_read_length_mean (Float) polymerase_read_length_N50 (Float) subread_read_length_mean (Float) subread_read_length_N50 (Float) num_reads (Float) num_bases (Float) read_length_mean (Float) read_length_median (Float) read_length_stdev (Float) read_length_N50 (Float) read_qual_mean (Float) read_qual_median (Float) Dot Diagram","title":"CollectSMRTCellUnalignedMetrics"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/#collectsmrtcellunalignedmetrics","text":"","title":"CollectSMRTCellUnalignedMetrics"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/#collectsmrtcellunalignedmetrics_1","text":"","title":"CollectSMRTCellUnalignedMetrics"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/#inputs","text":"","title":"Inputs"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/#required","text":"smrtcell_pbi (File, required )","title":"Required"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/#defaults","text":"SummarizePBI.qual_threshold (Int, default=0)","title":"Defaults"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/#outputs","text":"pbi_summary (File) polymerase_read_length_mean (Float) polymerase_read_length_N50 (Float) subread_read_length_mean (Float) subread_read_length_N50 (Float) num_reads (Float) num_bases (Float) read_length_mean (Float) read_length_median (Float) read_length_stdev (Float) read_length_N50 (Float) read_qual_mean (Float) read_qual_median (Float)","title":"Outputs"},{"location":"workflows/CollectSMRTCellUnalignedMetrics/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ConvertToHailMT/","text":"ConvertToHailMT ConvertToHailMT description Convert a gVCF to a Hail MatrixTable Inputs Required gcs_out_root_dir (String, required ): GCS bucket in which to store the Hail MatrixTable joint_gvcf (File, required ): joint-called gVCF file joint_gvcf_tbi (File, required ): .tbi index for joint-called gVCF file prefix (String, required ): prefix for output Hail MatrixTable Optional RunConvertToHailMT.ref_fai (String?) RunConvertToHailMT.ref_fasta (String?) RunConvertToHailMT.runtime_attr_override (RuntimeAttr?) Defaults RunConvertToHailMT.reference (String, default=\"GRCh38\") Outputs joint_mt (String) Dot Diagram","title":"ConvertToHailMT"},{"location":"workflows/ConvertToHailMT/#converttohailmt","text":"","title":"ConvertToHailMT"},{"location":"workflows/ConvertToHailMT/#converttohailmt_1","text":"description Convert a gVCF to a Hail MatrixTable","title":"ConvertToHailMT"},{"location":"workflows/ConvertToHailMT/#inputs","text":"","title":"Inputs"},{"location":"workflows/ConvertToHailMT/#required","text":"gcs_out_root_dir (String, required ): GCS bucket in which to store the Hail MatrixTable joint_gvcf (File, required ): joint-called gVCF file joint_gvcf_tbi (File, required ): .tbi index for joint-called gVCF file prefix (String, required ): prefix for output Hail MatrixTable","title":"Required"},{"location":"workflows/ConvertToHailMT/#optional","text":"RunConvertToHailMT.ref_fai (String?) RunConvertToHailMT.ref_fasta (String?) RunConvertToHailMT.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ConvertToHailMT/#defaults","text":"RunConvertToHailMT.reference (String, default=\"GRCh38\")","title":"Defaults"},{"location":"workflows/ConvertToHailMT/#outputs","text":"joint_mt (String)","title":"Outputs"},{"location":"workflows/ConvertToHailMT/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/DownloadFromFTP/","text":"DownloadFromFTP DownloadFromFTP description Download files from FTP in parallel and store the results in the specified GCS dir. This pipeline is essentially a Cromwell/GCP reimagining of the Nextflow/AWS downloading pipeline from @alaincoletta (see: http://broad.io/aws_dl). Inputs Required ftp_dirs (Array[String], required ): The FTP directories to download gcs_out_root_dir (String, required ) Optional ComputeDiskSize.runtime_attr_override (RuntimeAttr?) DownloadFTPFile.runtime_attr_override (RuntimeAttr?) GetFileManifest.runtime_attr_override (RuntimeAttr?) Defaults exclude (Array[String], default=[]): [default-valued] Simple substring patterns to exclude from the download. num_simultaneous_downloads (Int, default=10): [default-valued] The number of files to fetch simultaneously. prepend_dir_name (Boolean, default=true): If true, place the files in a subdirectory based on the basename of the FTP dir. Outputs GetFileManifest.manifest (File) DownloadFTPFile.out (Array[String?]) ComputeDiskSize.max_size_bytes (Array[Float]) Dot Diagram","title":"DownloadFromFTP"},{"location":"workflows/DownloadFromFTP/#downloadfromftp","text":"","title":"DownloadFromFTP"},{"location":"workflows/DownloadFromFTP/#downloadfromftp_1","text":"description Download files from FTP in parallel and store the results in the specified GCS dir. This pipeline is essentially a Cromwell/GCP reimagining of the Nextflow/AWS downloading pipeline from @alaincoletta (see: http://broad.io/aws_dl).","title":"DownloadFromFTP"},{"location":"workflows/DownloadFromFTP/#inputs","text":"","title":"Inputs"},{"location":"workflows/DownloadFromFTP/#required","text":"ftp_dirs (Array[String], required ): The FTP directories to download gcs_out_root_dir (String, required )","title":"Required"},{"location":"workflows/DownloadFromFTP/#optional","text":"ComputeDiskSize.runtime_attr_override (RuntimeAttr?) DownloadFTPFile.runtime_attr_override (RuntimeAttr?) GetFileManifest.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/DownloadFromFTP/#defaults","text":"exclude (Array[String], default=[]): [default-valued] Simple substring patterns to exclude from the download. num_simultaneous_downloads (Int, default=10): [default-valued] The number of files to fetch simultaneously. prepend_dir_name (Boolean, default=true): If true, place the files in a subdirectory based on the basename of the FTP dir.","title":"Defaults"},{"location":"workflows/DownloadFromFTP/#outputs","text":"GetFileManifest.manifest (File) DownloadFTPFile.out (Array[String?]) ComputeDiskSize.max_size_bytes (Array[Float])","title":"Outputs"},{"location":"workflows/DownloadFromFTP/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/DownloadFromSRA/","text":"DownloadFromSRA DownloadFromSRA description This WDL pipeline downloads data from SRA in parallel and stores the results in the specified GCS dir. This pipeline is essentially a Cromwell/GCP reimagining of the Nextflow/AWS downloading pipeline from @alaincoletta (see: http://broad.io/aws_dl). Inputs Required gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files manifest (File, required ): A file with a list of SRA ID(s) to download on each line Optional DownloadFiles.runtime_attr_override (RuntimeAttr?) Defaults num_simultaneous_downloads (Int, default=10): [default-valued] The number of files to fetch simultaneously. prepend_dir_name (Boolean, default=true): If true, place the files in a subdirectory based on the basename of the FTP dir. DownloadFiles.disk_size_gb (Int, default=50) DownloadFiles.num_cpus (Int, default=4) Outputs DownloadFiles.out (Array[String]) Dot Diagram","title":"DownloadFromSRA"},{"location":"workflows/DownloadFromSRA/#downloadfromsra","text":"","title":"DownloadFromSRA"},{"location":"workflows/DownloadFromSRA/#downloadfromsra_1","text":"description This WDL pipeline downloads data from SRA in parallel and stores the results in the specified GCS dir. This pipeline is essentially a Cromwell/GCP reimagining of the Nextflow/AWS downloading pipeline from @alaincoletta (see: http://broad.io/aws_dl).","title":"DownloadFromSRA"},{"location":"workflows/DownloadFromSRA/#inputs","text":"","title":"Inputs"},{"location":"workflows/DownloadFromSRA/#required","text":"gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files manifest (File, required ): A file with a list of SRA ID(s) to download on each line","title":"Required"},{"location":"workflows/DownloadFromSRA/#optional","text":"DownloadFiles.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/DownloadFromSRA/#defaults","text":"num_simultaneous_downloads (Int, default=10): [default-valued] The number of files to fetch simultaneously. prepend_dir_name (Boolean, default=true): If true, place the files in a subdirectory based on the basename of the FTP dir. DownloadFiles.disk_size_gb (Int, default=50) DownloadFiles.num_cpus (Int, default=4)","title":"Defaults"},{"location":"workflows/DownloadFromSRA/#outputs","text":"DownloadFiles.out (Array[String])","title":"Outputs"},{"location":"workflows/DownloadFromSRA/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/DownloadFromWeb/","text":"DownloadFromWeb DownloadFromWeb Inputs Required gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files manifest (File, required ): A file with a list of SRA ID(s) to download on each line Optional DownloadFiles.runtime_attr_override (RuntimeAttr?) Defaults num_simultaneous_downloads (Int, default=10): [default-valued] The number of files to fetch simultaneously. prepend_dir_name (Boolean, default=true): If true, place the files in a subdirectory based on the basename of the FTP dir. DownloadFiles.disk_size_gb (Int, default=100) DownloadFiles.num_cpus (Int, default=4) Outputs DownloadFiles.out (Array[String]) Dot Diagram","title":"DownloadFromWeb"},{"location":"workflows/DownloadFromWeb/#downloadfromweb","text":"","title":"DownloadFromWeb"},{"location":"workflows/DownloadFromWeb/#_1","text":"","title":""},{"location":"workflows/DownloadFromWeb/#_2","text":"","title":""},{"location":"workflows/DownloadFromWeb/#downloadfromweb_1","text":"","title":"DownloadFromWeb"},{"location":"workflows/DownloadFromWeb/#inputs","text":"","title":"Inputs"},{"location":"workflows/DownloadFromWeb/#required","text":"gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files manifest (File, required ): A file with a list of SRA ID(s) to download on each line","title":"Required"},{"location":"workflows/DownloadFromWeb/#optional","text":"DownloadFiles.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/DownloadFromWeb/#defaults","text":"num_simultaneous_downloads (Int, default=10): [default-valued] The number of files to fetch simultaneously. prepend_dir_name (Boolean, default=true): If true, place the files in a subdirectory based on the basename of the FTP dir. DownloadFiles.disk_size_gb (Int, default=100) DownloadFiles.num_cpus (Int, default=4)","title":"Defaults"},{"location":"workflows/DownloadFromWeb/#outputs","text":"DownloadFiles.out (Array[String])","title":"Outputs"},{"location":"workflows/DownloadFromWeb/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/FPCheckAoU/","text":"FPCheckAoU FPCheckAoU description Check correctness of metadata on a (demultiplexed) alignmed BAM, by genotyping it's BAM generated with its metadata, against a fingerprint VCF. Practically assumes human GRCh38 reference. Inputs Required aligned_bai (File, required ) aligned_bam (File, required ): GCS path to aligned BAM file, supposed to be of the same sample as from the fingerprinting (FP) VCF fp_store (String, required ): Name of the bucket and prefix holding the fingerprint VCFs. ref_specific_haplotype_map (File, required ): Happlotype map file for the reference build used. See https://bit.ly/3QyZbwt sample_id_at_store (String, required ): UUID of the sample at the fingerprint store, used to fetch the fingerprinting VCF Optional CheckFingerprint.runtime_attr_override (RuntimeAttr?) ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) GetVCFSampleName.runtime_attr_override (RuntimeAttr?) ResolveFPVCFPath.runtime_attr_override (RuntimeAttr?) Defaults lod_fail_threshold (Float, default=-3.0): A numeric threshold for LOD below which the sample will be considered failing the FP check. lod_pass_threshold (Float, default=6.0): A numeric threshold for LOD above which the sample will be considered passing the FP check. FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV']) Outputs lod_expected_sample (Float) FP_status (String) fingerprint_summary (File) fingerprint_details (File) Dot Diagram","title":"FPCheckAoU"},{"location":"workflows/FPCheckAoU/#fpcheckaou","text":"","title":"FPCheckAoU"},{"location":"workflows/FPCheckAoU/#fpcheckaou_1","text":"description Check correctness of metadata on a (demultiplexed) alignmed BAM, by genotyping it's BAM generated with its metadata, against a fingerprint VCF. Practically assumes human GRCh38 reference.","title":"FPCheckAoU"},{"location":"workflows/FPCheckAoU/#inputs","text":"","title":"Inputs"},{"location":"workflows/FPCheckAoU/#required","text":"aligned_bai (File, required ) aligned_bam (File, required ): GCS path to aligned BAM file, supposed to be of the same sample as from the fingerprinting (FP) VCF fp_store (String, required ): Name of the bucket and prefix holding the fingerprint VCFs. ref_specific_haplotype_map (File, required ): Happlotype map file for the reference build used. See https://bit.ly/3QyZbwt sample_id_at_store (String, required ): UUID of the sample at the fingerprint store, used to fetch the fingerprinting VCF","title":"Required"},{"location":"workflows/FPCheckAoU/#optional","text":"CheckFingerprint.runtime_attr_override (RuntimeAttr?) ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) GetVCFSampleName.runtime_attr_override (RuntimeAttr?) ResolveFPVCFPath.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/FPCheckAoU/#defaults","text":"lod_fail_threshold (Float, default=-3.0): A numeric threshold for LOD below which the sample will be considered failing the FP check. lod_pass_threshold (Float, default=6.0): A numeric threshold for LOD above which the sample will be considered passing the FP check. FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV'])","title":"Defaults"},{"location":"workflows/FPCheckAoU/#outputs","text":"lod_expected_sample (Float) FP_status (String) fingerprint_summary (File) fingerprint_details (File)","title":"Outputs"},{"location":"workflows/FPCheckAoU/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/FindBamIdentity/","text":"FindBamIdentity FindBamIdentity description A workflow to identify a flowcell's the true identity, by genotyping it's BAM, against an array of 'truth' genotyped VCF. Inputs Required aligned_bai (File, required ) aligned_bam (File, required ): GCS path to aligned BAM file of the flowcell expt_type (String, required ): There will be special treatment for 'CLR' data (minimum base quality for bases used when computing a fingerprint) fingerprint_store (String, required ): GS path to where all known fingerprinting GT'ed VCFS are stored ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional vcf_filter_expression (String?): an expression used for picking up VCFs, the filter will be applied to VCF names, any match will lead to the VCF to be included CheckCLRFingerprint.runtime_attr_override (RuntimeAttr?) CheckFingerprint.runtime_attr_override (RuntimeAttr?) ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) GetVCFSampleName.runtime_attr_override (RuntimeAttr?) ResetCLRBaseQual.runtime_attr_override (RuntimeAttr?) Defaults artificial_baseQ_for_CLR (Int, default=10): An artificial value for CLR reads used for fingerprint verification (CLR reads come with all 0 base qual) FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV']) Outputs lod (Float) true_smid (String) true_collab_sample_id (String) true_collab_partic_id (String) Dot Diagram","title":"FindBamIdentity"},{"location":"workflows/FindBamIdentity/#findbamidentity","text":"","title":"FindBamIdentity"},{"location":"workflows/FindBamIdentity/#findbamidentity_1","text":"description A workflow to identify a flowcell's the true identity, by genotyping it's BAM, against an array of 'truth' genotyped VCF.","title":"FindBamIdentity"},{"location":"workflows/FindBamIdentity/#inputs","text":"","title":"Inputs"},{"location":"workflows/FindBamIdentity/#required","text":"aligned_bai (File, required ) aligned_bam (File, required ): GCS path to aligned BAM file of the flowcell expt_type (String, required ): There will be special treatment for 'CLR' data (minimum base quality for bases used when computing a fingerprint) fingerprint_store (String, required ): GS path to where all known fingerprinting GT'ed VCFS are stored ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/FindBamIdentity/#optional","text":"vcf_filter_expression (String?): an expression used for picking up VCFs, the filter will be applied to VCF names, any match will lead to the VCF to be included CheckCLRFingerprint.runtime_attr_override (RuntimeAttr?) CheckFingerprint.runtime_attr_override (RuntimeAttr?) ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) GetVCFSampleName.runtime_attr_override (RuntimeAttr?) ResetCLRBaseQual.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/FindBamIdentity/#defaults","text":"artificial_baseQ_for_CLR (Int, default=10): An artificial value for CLR reads used for fingerprint verification (CLR reads come with all 0 base qual) FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV'])","title":"Defaults"},{"location":"workflows/FindBamIdentity/#outputs","text":"lod (Float) true_smid (String) true_collab_sample_id (String) true_collab_partic_id (String)","title":"Outputs"},{"location":"workflows/FindBamIdentity/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/Flye/","text":"Flye Flye Inputs Required genome_size (Float, required ) prefix (String, required ) reads (File, required ) Outputs gfa (File) fa (File) Dot Diagram","title":"Flye"},{"location":"workflows/Flye/#flye","text":"","title":"Flye"},{"location":"workflows/Flye/#flye_1","text":"","title":"Flye"},{"location":"workflows/Flye/#inputs","text":"","title":"Inputs"},{"location":"workflows/Flye/#required","text":"genome_size (Float, required ) prefix (String, required ) reads (File, required )","title":"Required"},{"location":"workflows/Flye/#outputs","text":"gfa (File) fa (File)","title":"Outputs"},{"location":"workflows/Flye/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/GLNexus/","text":"GLNexus JointCall Inputs Required dict (File, required ): reference sequence dictionary gvcfs (Array[File], required ): gVCF files to perform joint calling upon tbis (Array[File], required ): gVCF index files Optional bed (File?): intervals to which joint calling should be restricted num_cpus (Int?): number of CPUs to use runtime_attr_override (RuntimeAttr?) Call.runtime_attr_override (RuntimeAttr?) ConcatBCFs.runtime_attr_override (RuntimeAttr?) GetRanges.runtime_attr_override (RuntimeAttr?) ShardVCFByRanges.runtime_attr_override (RuntimeAttr?) Defaults config (String, default=\"DeepVariantWGS\"): configuration preset name or .yml filename max_cpus (Int, default=64): maximum number of CPUs to allow more_PL (Boolean, default=false): include PL from reference bands and other cases omitted by default prefix (String, default=\"out\"): output prefix for joined-called BCF and GVCF files squeeze (Boolean, default=false): reduce pVCF size by suppressing detail in cells derived from reference bands trim_uncalled_alleles (Boolean, default=false): remove alleles with no output GT calls in postprocessing ConcatBCFs.num_cpus (Int, default=4): number of CPUs to use Outputs joint_gvcf (File) joint_gvcf_tbi (File) Dot Diagram","title":"GLNexus"},{"location":"workflows/GLNexus/#glnexus","text":"","title":"GLNexus"},{"location":"workflows/GLNexus/#_1","text":"","title":""},{"location":"workflows/GLNexus/#_2","text":"","title":""},{"location":"workflows/GLNexus/#jointcall","text":"","title":"JointCall"},{"location":"workflows/GLNexus/#inputs","text":"","title":"Inputs"},{"location":"workflows/GLNexus/#required","text":"dict (File, required ): reference sequence dictionary gvcfs (Array[File], required ): gVCF files to perform joint calling upon tbis (Array[File], required ): gVCF index files","title":"Required"},{"location":"workflows/GLNexus/#optional","text":"bed (File?): intervals to which joint calling should be restricted num_cpus (Int?): number of CPUs to use runtime_attr_override (RuntimeAttr?) Call.runtime_attr_override (RuntimeAttr?) ConcatBCFs.runtime_attr_override (RuntimeAttr?) GetRanges.runtime_attr_override (RuntimeAttr?) ShardVCFByRanges.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/GLNexus/#defaults","text":"config (String, default=\"DeepVariantWGS\"): configuration preset name or .yml filename max_cpus (Int, default=64): maximum number of CPUs to allow more_PL (Boolean, default=false): include PL from reference bands and other cases omitted by default prefix (String, default=\"out\"): output prefix for joined-called BCF and GVCF files squeeze (Boolean, default=false): reduce pVCF size by suppressing detail in cells derived from reference bands trim_uncalled_alleles (Boolean, default=false): remove alleles with no output GT calls in postprocessing ConcatBCFs.num_cpus (Int, default=4): number of CPUs to use","title":"Defaults"},{"location":"workflows/GLNexus/#outputs","text":"joint_gvcf (File) joint_gvcf_tbi (File)","title":"Outputs"},{"location":"workflows/GLNexus/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/Guppy/","text":"Guppy Guppy Inputs Required config (String, required ) gcs_fast5_dir (String, required ) gcs_out_root_dir (String, required ) Optional barcode_kit (String?) num_shards (Int?) protocol_run_id (String?) sample_name (String?) Basecall.runtime_attr_override (RuntimeAttr?) FinalizeBasecalls.runtime_attr_override (RuntimeAttr?) ListFast5s.runtime_attr_override (RuntimeAttr?) MakeFinalSummary.runtime_attr_override (RuntimeAttr?) MakeSequencingSummary.runtime_attr_override (RuntimeAttr?) PartitionFast5Manifest.runtime_attr_override (RuntimeAttr?) SumFailingFastqs.runtime_attr_override (RuntimeAttr?) SumPassingFastqs.runtime_attr_override (RuntimeAttr?) TimestampStopped.runtime_attr_override (RuntimeAttr?) UniqueBarcodes.runtime_attr_override (RuntimeAttr?) Defaults flow_cell_id (String, default=\"unknown\") instrument (String, default=\"unknown\") SumFailingFastqs.prefix (String, default=\"sum\") SumPassingFastqs.prefix (String, default=\"sum\") Outputs gcs_dir (String) barcodes (Array[String]) num_fast5s (Int) num_pass_fastqs (Int) num_fail_fastqs (Int) Dot Diagram","title":"Guppy"},{"location":"workflows/Guppy/#guppy","text":"","title":"Guppy"},{"location":"workflows/Guppy/#_1","text":"","title":""},{"location":"workflows/Guppy/#_2","text":"","title":""},{"location":"workflows/Guppy/#guppy_1","text":"","title":"Guppy"},{"location":"workflows/Guppy/#inputs","text":"","title":"Inputs"},{"location":"workflows/Guppy/#required","text":"config (String, required ) gcs_fast5_dir (String, required ) gcs_out_root_dir (String, required )","title":"Required"},{"location":"workflows/Guppy/#optional","text":"barcode_kit (String?) num_shards (Int?) protocol_run_id (String?) sample_name (String?) Basecall.runtime_attr_override (RuntimeAttr?) FinalizeBasecalls.runtime_attr_override (RuntimeAttr?) ListFast5s.runtime_attr_override (RuntimeAttr?) MakeFinalSummary.runtime_attr_override (RuntimeAttr?) MakeSequencingSummary.runtime_attr_override (RuntimeAttr?) PartitionFast5Manifest.runtime_attr_override (RuntimeAttr?) SumFailingFastqs.runtime_attr_override (RuntimeAttr?) SumPassingFastqs.runtime_attr_override (RuntimeAttr?) TimestampStopped.runtime_attr_override (RuntimeAttr?) UniqueBarcodes.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/Guppy/#defaults","text":"flow_cell_id (String, default=\"unknown\") instrument (String, default=\"unknown\") SumFailingFastqs.prefix (String, default=\"sum\") SumPassingFastqs.prefix (String, default=\"sum\")","title":"Defaults"},{"location":"workflows/Guppy/#outputs","text":"gcs_dir (String) barcodes (Array[String]) num_fast5s (Int) num_pass_fastqs (Int) num_fail_fastqs (Int)","title":"Outputs"},{"location":"workflows/Guppy/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/Hifiasm/","text":"Hifiasm Hifiasm description We run two HiFiasm jobs, one for getting alternative contigs and one for getting the haplotigs. And we take the primary assembly from the first job. Inputs Required prefix (String, required ): prefix to apply to assembly output filenames reads (File, required ): reads (in fasta or fastq format, compressed or uncompressed) Optional AssembleForAltContigs.runtime_attr_override (RuntimeAttr?) AssembleForHaplotigs.runtime_attr_override (RuntimeAttr?) Defaults zones (String, default=\"us-central1-a us-central1-b us-central1-c\") Outputs primary_gfa (File) primary_tigs (File) alternate_gfa (File) alternate_tigs (File) log_in_pVSa_mode (File) phased_gfas (Array[File]) phased_tigs (Array[File]) log_in_hap_mode (File) primary_gfa_in_hap_mode (File) primary_tigs_in_hap_mode (File) Dot Diagram","title":"Hifiasm"},{"location":"workflows/Hifiasm/#hifiasm","text":"","title":"Hifiasm"},{"location":"workflows/Hifiasm/#hifiasm_1","text":"description We run two HiFiasm jobs, one for getting alternative contigs and one for getting the haplotigs. And we take the primary assembly from the first job.","title":"Hifiasm"},{"location":"workflows/Hifiasm/#inputs","text":"","title":"Inputs"},{"location":"workflows/Hifiasm/#required","text":"prefix (String, required ): prefix to apply to assembly output filenames reads (File, required ): reads (in fasta or fastq format, compressed or uncompressed)","title":"Required"},{"location":"workflows/Hifiasm/#optional","text":"AssembleForAltContigs.runtime_attr_override (RuntimeAttr?) AssembleForHaplotigs.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/Hifiasm/#defaults","text":"zones (String, default=\"us-central1-a us-central1-b us-central1-c\")","title":"Defaults"},{"location":"workflows/Hifiasm/#outputs","text":"primary_gfa (File) primary_tigs (File) alternate_gfa (File) alternate_tigs (File) log_in_pVSa_mode (File) phased_gfas (Array[File]) phased_tigs (Array[File]) log_in_hap_mode (File) primary_gfa_in_hap_mode (File) primary_tigs_in_hap_mode (File)","title":"Outputs"},{"location":"workflows/Hifiasm/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/LRCNVs/","text":"LRCNVs LRCNVs description Workflow for creating a GATK GermlineCNVCaller denoising model and generating calls given a list of normal samples. Supports both WGS and WES. notes - The intervals argument is required for both WGS and WES workflows and accepts formats compatible with the GATK -L argument (see https://gatkforums.broadinstitute.org/gatk/discussion/11009/intervals-and-interval-lists). These intervals will be padded on both sides by the amount specified by padding (default 250) and split into bins of length specified by bin_length (default 1000; specify 0 to skip binning, e.g., for WES). For WGS, the intervals should simply cover the chromosomes of interest. - Intervals can be blacklisted from coverage collection and all downstream steps by using the blacklist_intervals argument, which accepts formats compatible with the GATK -XL argument (see https://gatkforums.broadinstitute.org/gatk/discussion/11009/intervals-and-interval-lists). This may be useful for excluding centromeric regions, etc. from analysis. Alternatively, these regions may be manually filtered from the final callset. Inputs Required cohort_entity_id (String, required ): Required. String identifier for the cohort used for denoising model generation. contig_ploidy_priors (File, required ): Required. File containing contig ploidy priors. intervals (File, required ): Required. Intervals file (in .bed format) containing the regions to be analyzed. For WGS, this should simply cover the chromosomes of interest. For WES, this should cover the target regions to be analyzed. normal_bais (Array[String]+, required ): Required. Array of BAI index files for the normal samples to be used for denoising model generation. normal_bams (Array[String]+, required ): Required. Array of BAM files for the normal samples to be used for denoising model generation. ref_map_file (File, required ): Required. File containing the reference copy-number map. Optional allosomal_contigs (Array[String]?) bin_length (Int?) blacklist_intervals (File?): Optional. Intervals file (in .bed format) containing the regions to be excluded from analysis. For WGS, this may be useful for excluding centromeric regions, etc. from analysis. For WES, this may be useful for excluding regions that are not covered by the target capture kit. blacklist_intervals_for_filter_intervals (File?) collect_counts_enable_indexing (Boolean?) collect_counts_format (String?) cpu_for_determine_germline_contig_ploidy (Int?) cpu_for_germline_cnv_caller (Int?) do_explicit_gc_correction (Boolean?) extreme_count_filter_maximum_percentile (Float?) extreme_count_filter_minimum_percentile (Float?) extreme_count_filter_percentage_of_samples (Float?) feature_query_lookahead (Int?) gatk4_jar_override (File?) gcnv_active_class_padding_hybrid_mode (Int?) gcnv_adamax_beta_1 (Float?) gcnv_adamax_beta_2 (Float?) gcnv_caller_external_admixing_rate (Float?) gcnv_caller_internal_admixing_rate (Float?) gcnv_caller_update_convergence_threshold (Float?) gcnv_class_coherence_length (Float?) gcnv_cnv_coherence_length (Float?) gcnv_convergence_snr_averaging_window (Int?) gcnv_convergence_snr_countdown_window (Int?) gcnv_convergence_snr_trigger_threshold (Float?) gcnv_copy_number_posterior_expectation_mode (String?) gcnv_depth_correction_tau (Float?) gcnv_disable_annealing (Boolean?) gcnv_enable_bias_factors (Boolean?) gcnv_gc_curve_standard_deviation (Float?) gcnv_init_ard_rel_unexplained_variance (Float?) gcnv_initial_temperature (Float?) gcnv_interval_psi_scale (Float?) gcnv_learning_rate (Float?) gcnv_log_emission_samples_per_round (Int?) gcnv_log_emission_sampling_median_rel_error (Float?) gcnv_log_emission_sampling_rounds (Int?) gcnv_log_mean_bias_standard_deviation (Float?) gcnv_mapping_error_rate (Float?) gcnv_max_advi_iter_first_epoch (Int?) gcnv_max_advi_iter_subsequent_epochs (Int?) gcnv_max_bias_factors (Int?) gcnv_max_calling_iters (Int?) gcnv_max_copy_number (Int?) gcnv_max_training_epochs (Int?) gcnv_min_training_epochs (Int?) gcnv_num_gc_bins (Int?) gcnv_num_thermal_advi_iters (Int?) gcnv_p_active (Float?) gcnv_p_alt (Float?) gcnv_sample_psi_scale (Float?) low_count_filter_count_threshold (Int?) low_count_filter_percentage_of_samples (Float?) mappability_track_bed (File?) mappability_track_bed_idx (File?) maximum_gc_content (Float?) maximum_mappability (Float?) maximum_segmental_duplication_content (Float?) mem_gb_for_annotate_intervals (Int?) mem_gb_for_collect_counts (Int?) mem_gb_for_determine_germline_contig_ploidy (Int?) mem_gb_for_filter_intervals (Int?) mem_gb_for_germline_cnv_caller (Int?) minimum_gc_content (Float?) minimum_mappability (Float?) minimum_segmental_duplication_content (Float?) padding (Int?) ploidy_global_psi_scale (Float?) ploidy_mapping_error_rate (Float?) ploidy_mean_bias_standard_deviation (Float?) ploidy_sample_psi_scale (Float?) preemptible_attempts (Int?) segmental_duplication_track_bed (File?) segmental_duplication_track_bed_idx (File?) AnnotateIntervals.cpu (Int?) AnnotateIntervals.disk_space_gb (Int?) CollectCounts.cpu (Int?) CollectCounts.disk_space_gb (Int?) CollectModelQualityMetrics.cpu (Int?) CollectModelQualityMetrics.disk_space_gb (Int?) CollectModelQualityMetrics.mem_gb (Int?) CollectSampleQualityMetrics.cpu (Int?) CollectSampleQualityMetrics.disk_space_gb (Int?) CollectSampleQualityMetrics.mem_gb (Int?) DetermineGermlineContigPloidyCohortMode.disk_space_gb (Int?) DetermineGermlineContigPloidyCohortMode.output_dir (String?) FilterIntervals.cpu (Int?) FilterIntervals.disk_space_gb (Int?) GermlineCNVCallerCohortMode.disk_space_gb (Int?) GermlineCNVCallerCohortMode.output_dir (String?) PostprocessGermlineCNVCalls.cpu (Int?) PostprocessGermlineCNVCalls.disk_space_gb (Int?) PostprocessGermlineCNVCalls.mem_gb (Int?) PreprocessIntervals.cpu (Int?) PreprocessIntervals.disk_space_gb (Int?) PreprocessIntervals.mem_gb (Int?) ScatterIntervals.cpu (Int?) ScatterIntervals.disk_space_gb (Int?) ScatterIntervals.gatk4_jar_override (File?) ScatterIntervals.mem_gb (Int?) ScatterIntervals.output_dir (String?) Defaults gatk_docker (String, default=\"broadinstitute/gatk:4.1.7.0\"): Optional. Docker image for the GATK tool. Default is broadinstitute/gatk:broadinstitute/gatk:4.1.7.0. maximum_number_events_per_sample (Int, default=1000) num_intervals_per_scatter (Int, default=10000): Optional. Number of intervals to process in each scatter. Default is 10000. ref_copy_number_autosomal_contigs (Int, default=2) AnnotateIntervals.use_ssd (Boolean, default=false) CollectCounts.use_ssd (Boolean, default=false) CollectModelQualityMetrics.use_ssd (Boolean, default=false) CollectSampleQualityMetrics.use_ssd (Boolean, default=false) DetermineGermlineContigPloidyCohortMode.use_ssd (Boolean, default=false) FilterIntervals.use_ssd (Boolean, default=false) GermlineCNVCallerCohortMode.use_ssd (Boolean, default=false) PostprocessGermlineCNVCalls.use_ssd (Boolean, default=false) PreprocessIntervals.use_ssd (Boolean, default=false) ScatterIntervals.use_ssd (Boolean, default=false) Outputs preprocessed_intervals (File) read_counts_entity_ids (Array[File]) read_counts (Array[File]) annotated_intervals (File?) filtered_intervals (File) contig_ploidy_model_tar (File) contig_ploidy_calls_tar (File) gcnv_model_tars (Array[File]) gcnv_calls_tars (Array[Array[File]]) gcnv_tracking_tars (Array[File]) genotyped_intervals_vcfs (Array[File]) genotyped_segments_vcfs (Array[File]) sample_qc_status_files (Array[File]) sample_qc_status_strings (Array[String]) model_qc_status_file (File) model_qc_string (String) denoised_copy_ratios (Array[File]) Dot Diagram","title":"LRCNVs"},{"location":"workflows/LRCNVs/#lrcnvs","text":"","title":"LRCNVs"},{"location":"workflows/LRCNVs/#_1","text":"","title":""},{"location":"workflows/LRCNVs/#lrcnvs_1","text":"description Workflow for creating a GATK GermlineCNVCaller denoising model and generating calls given a list of normal samples. Supports both WGS and WES. notes - The intervals argument is required for both WGS and WES workflows and accepts formats compatible with the GATK -L argument (see https://gatkforums.broadinstitute.org/gatk/discussion/11009/intervals-and-interval-lists). These intervals will be padded on both sides by the amount specified by padding (default 250) and split into bins of length specified by bin_length (default 1000; specify 0 to skip binning, e.g., for WES). For WGS, the intervals should simply cover the chromosomes of interest. - Intervals can be blacklisted from coverage collection and all downstream steps by using the blacklist_intervals argument, which accepts formats compatible with the GATK -XL argument (see https://gatkforums.broadinstitute.org/gatk/discussion/11009/intervals-and-interval-lists). This may be useful for excluding centromeric regions, etc. from analysis. Alternatively, these regions may be manually filtered from the final callset.","title":"LRCNVs"},{"location":"workflows/LRCNVs/#inputs","text":"","title":"Inputs"},{"location":"workflows/LRCNVs/#required","text":"cohort_entity_id (String, required ): Required. String identifier for the cohort used for denoising model generation. contig_ploidy_priors (File, required ): Required. File containing contig ploidy priors. intervals (File, required ): Required. Intervals file (in .bed format) containing the regions to be analyzed. For WGS, this should simply cover the chromosomes of interest. For WES, this should cover the target regions to be analyzed. normal_bais (Array[String]+, required ): Required. Array of BAI index files for the normal samples to be used for denoising model generation. normal_bams (Array[String]+, required ): Required. Array of BAM files for the normal samples to be used for denoising model generation. ref_map_file (File, required ): Required. File containing the reference copy-number map.","title":"Required"},{"location":"workflows/LRCNVs/#optional","text":"allosomal_contigs (Array[String]?) bin_length (Int?) blacklist_intervals (File?): Optional. Intervals file (in .bed format) containing the regions to be excluded from analysis. For WGS, this may be useful for excluding centromeric regions, etc. from analysis. For WES, this may be useful for excluding regions that are not covered by the target capture kit. blacklist_intervals_for_filter_intervals (File?) collect_counts_enable_indexing (Boolean?) collect_counts_format (String?) cpu_for_determine_germline_contig_ploidy (Int?) cpu_for_germline_cnv_caller (Int?) do_explicit_gc_correction (Boolean?) extreme_count_filter_maximum_percentile (Float?) extreme_count_filter_minimum_percentile (Float?) extreme_count_filter_percentage_of_samples (Float?) feature_query_lookahead (Int?) gatk4_jar_override (File?) gcnv_active_class_padding_hybrid_mode (Int?) gcnv_adamax_beta_1 (Float?) gcnv_adamax_beta_2 (Float?) gcnv_caller_external_admixing_rate (Float?) gcnv_caller_internal_admixing_rate (Float?) gcnv_caller_update_convergence_threshold (Float?) gcnv_class_coherence_length (Float?) gcnv_cnv_coherence_length (Float?) gcnv_convergence_snr_averaging_window (Int?) gcnv_convergence_snr_countdown_window (Int?) gcnv_convergence_snr_trigger_threshold (Float?) gcnv_copy_number_posterior_expectation_mode (String?) gcnv_depth_correction_tau (Float?) gcnv_disable_annealing (Boolean?) gcnv_enable_bias_factors (Boolean?) gcnv_gc_curve_standard_deviation (Float?) gcnv_init_ard_rel_unexplained_variance (Float?) gcnv_initial_temperature (Float?) gcnv_interval_psi_scale (Float?) gcnv_learning_rate (Float?) gcnv_log_emission_samples_per_round (Int?) gcnv_log_emission_sampling_median_rel_error (Float?) gcnv_log_emission_sampling_rounds (Int?) gcnv_log_mean_bias_standard_deviation (Float?) gcnv_mapping_error_rate (Float?) gcnv_max_advi_iter_first_epoch (Int?) gcnv_max_advi_iter_subsequent_epochs (Int?) gcnv_max_bias_factors (Int?) gcnv_max_calling_iters (Int?) gcnv_max_copy_number (Int?) gcnv_max_training_epochs (Int?) gcnv_min_training_epochs (Int?) gcnv_num_gc_bins (Int?) gcnv_num_thermal_advi_iters (Int?) gcnv_p_active (Float?) gcnv_p_alt (Float?) gcnv_sample_psi_scale (Float?) low_count_filter_count_threshold (Int?) low_count_filter_percentage_of_samples (Float?) mappability_track_bed (File?) mappability_track_bed_idx (File?) maximum_gc_content (Float?) maximum_mappability (Float?) maximum_segmental_duplication_content (Float?) mem_gb_for_annotate_intervals (Int?) mem_gb_for_collect_counts (Int?) mem_gb_for_determine_germline_contig_ploidy (Int?) mem_gb_for_filter_intervals (Int?) mem_gb_for_germline_cnv_caller (Int?) minimum_gc_content (Float?) minimum_mappability (Float?) minimum_segmental_duplication_content (Float?) padding (Int?) ploidy_global_psi_scale (Float?) ploidy_mapping_error_rate (Float?) ploidy_mean_bias_standard_deviation (Float?) ploidy_sample_psi_scale (Float?) preemptible_attempts (Int?) segmental_duplication_track_bed (File?) segmental_duplication_track_bed_idx (File?) AnnotateIntervals.cpu (Int?) AnnotateIntervals.disk_space_gb (Int?) CollectCounts.cpu (Int?) CollectCounts.disk_space_gb (Int?) CollectModelQualityMetrics.cpu (Int?) CollectModelQualityMetrics.disk_space_gb (Int?) CollectModelQualityMetrics.mem_gb (Int?) CollectSampleQualityMetrics.cpu (Int?) CollectSampleQualityMetrics.disk_space_gb (Int?) CollectSampleQualityMetrics.mem_gb (Int?) DetermineGermlineContigPloidyCohortMode.disk_space_gb (Int?) DetermineGermlineContigPloidyCohortMode.output_dir (String?) FilterIntervals.cpu (Int?) FilterIntervals.disk_space_gb (Int?) GermlineCNVCallerCohortMode.disk_space_gb (Int?) GermlineCNVCallerCohortMode.output_dir (String?) PostprocessGermlineCNVCalls.cpu (Int?) PostprocessGermlineCNVCalls.disk_space_gb (Int?) PostprocessGermlineCNVCalls.mem_gb (Int?) PreprocessIntervals.cpu (Int?) PreprocessIntervals.disk_space_gb (Int?) PreprocessIntervals.mem_gb (Int?) ScatterIntervals.cpu (Int?) ScatterIntervals.disk_space_gb (Int?) ScatterIntervals.gatk4_jar_override (File?) ScatterIntervals.mem_gb (Int?) ScatterIntervals.output_dir (String?)","title":"Optional"},{"location":"workflows/LRCNVs/#defaults","text":"gatk_docker (String, default=\"broadinstitute/gatk:4.1.7.0\"): Optional. Docker image for the GATK tool. Default is broadinstitute/gatk:broadinstitute/gatk:4.1.7.0. maximum_number_events_per_sample (Int, default=1000) num_intervals_per_scatter (Int, default=10000): Optional. Number of intervals to process in each scatter. Default is 10000. ref_copy_number_autosomal_contigs (Int, default=2) AnnotateIntervals.use_ssd (Boolean, default=false) CollectCounts.use_ssd (Boolean, default=false) CollectModelQualityMetrics.use_ssd (Boolean, default=false) CollectSampleQualityMetrics.use_ssd (Boolean, default=false) DetermineGermlineContigPloidyCohortMode.use_ssd (Boolean, default=false) FilterIntervals.use_ssd (Boolean, default=false) GermlineCNVCallerCohortMode.use_ssd (Boolean, default=false) PostprocessGermlineCNVCalls.use_ssd (Boolean, default=false) PreprocessIntervals.use_ssd (Boolean, default=false) ScatterIntervals.use_ssd (Boolean, default=false)","title":"Defaults"},{"location":"workflows/LRCNVs/#outputs","text":"preprocessed_intervals (File) read_counts_entity_ids (Array[File]) read_counts (Array[File]) annotated_intervals (File?) filtered_intervals (File) contig_ploidy_model_tar (File) contig_ploidy_calls_tar (File) gcnv_model_tars (Array[File]) gcnv_calls_tars (Array[Array[File]]) gcnv_tracking_tars (Array[File]) genotyped_intervals_vcfs (Array[File]) genotyped_segments_vcfs (Array[File]) sample_qc_status_files (Array[File]) sample_qc_status_strings (Array[String]) model_qc_status_file (File) model_qc_string (String) denoised_copy_ratios (Array[File])","title":"Outputs"},{"location":"workflows/LRCNVs/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/LRConvertBCF/","text":"LRConvertBCF LRConvertBCF description Convert a BCF file into a .vcf.gz file. Meant to temporarily handle some transient issues stemming from the LRJointCallGVCFs workflow. Should be removed eventually. Inputs Required gcs_out_root_dir (String, required ): The root directory in GCS to store the output files joint_bcf (File, required ): The BCF file to convert prefix (String, required ): The prefix to use for the output files Optional ConcatBCFs.runtime_attr_override (RuntimeAttr?) ConvertToHailMT.ref_fai (String?) ConvertToHailMT.ref_fasta (String?) ConvertToHailMT.runtime_attr_override (RuntimeAttr?) FinalizeGVCF.keyfile (File?) FinalizeGVCF.name (String?) FinalizeGVCF.runtime_attr_override (RuntimeAttr?) FinalizeTBI.keyfile (File?) FinalizeTBI.name (String?) FinalizeTBI.runtime_attr_override (RuntimeAttr?) Defaults ConcatBCFs.num_cpus (Int, default=4) ConvertToHailMT.reference (String, default=\"GRCh38\") Outputs joint_gvcf (File) joint_gvcf_tbi (File) joint_mt (String) Dot Diagram","title":"LRConvertBCF"},{"location":"workflows/LRConvertBCF/#lrconvertbcf","text":"","title":"LRConvertBCF"},{"location":"workflows/LRConvertBCF/#lrconvertbcf_1","text":"description Convert a BCF file into a .vcf.gz file. Meant to temporarily handle some transient issues stemming from the LRJointCallGVCFs workflow. Should be removed eventually.","title":"LRConvertBCF"},{"location":"workflows/LRConvertBCF/#inputs","text":"","title":"Inputs"},{"location":"workflows/LRConvertBCF/#required","text":"gcs_out_root_dir (String, required ): The root directory in GCS to store the output files joint_bcf (File, required ): The BCF file to convert prefix (String, required ): The prefix to use for the output files","title":"Required"},{"location":"workflows/LRConvertBCF/#optional","text":"ConcatBCFs.runtime_attr_override (RuntimeAttr?) ConvertToHailMT.ref_fai (String?) ConvertToHailMT.ref_fasta (String?) ConvertToHailMT.runtime_attr_override (RuntimeAttr?) FinalizeGVCF.keyfile (File?) FinalizeGVCF.name (String?) FinalizeGVCF.runtime_attr_override (RuntimeAttr?) FinalizeTBI.keyfile (File?) FinalizeTBI.name (String?) FinalizeTBI.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/LRConvertBCF/#defaults","text":"ConcatBCFs.num_cpus (Int, default=4) ConvertToHailMT.reference (String, default=\"GRCh38\")","title":"Defaults"},{"location":"workflows/LRConvertBCF/#outputs","text":"joint_gvcf (File) joint_gvcf_tbi (File) joint_mt (String)","title":"Outputs"},{"location":"workflows/LRConvertBCF/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/LRJointCallGVCFs/","text":"LRJointCallGVCFs LRJointCallGVCFs description A workflow that performs joint calling on gVCFs (usually from DeepVariant) using GLNexus. Inputs Required gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files gvcfs (Array[File], required ): GCS paths to gVCF files prefix (String, required ): prefix for output joint-called gVCF and tabix index ref_map_file (File, required ): table indicating reference sequence and auxillary file locations tbis (Array[File], required ): GCS paths to gVCF tbi files Optional ConvertToHailMT.ref_fai (String?) ConvertToHailMT.ref_fasta (String?) ConvertToHailMT.runtime_attr_override (RuntimeAttr?) FinalizeGVCF.keyfile (File?) FinalizeGVCF.name (String?) FinalizeGVCF.runtime_attr_override (RuntimeAttr?) FinalizeTBI.keyfile (File?) FinalizeTBI.name (String?) FinalizeTBI.runtime_attr_override (RuntimeAttr?) JointCall.bed (File?) JointCall.num_cpus (Int?) JointCall.runtime_attr_override (RuntimeAttr?) JointCall.Call.runtime_attr_override (RuntimeAttr?) JointCall.ConcatBCFs.runtime_attr_override (RuntimeAttr?) JointCall.GetRanges.runtime_attr_override (RuntimeAttr?) JointCall.ShardVCFByRanges.runtime_attr_override (RuntimeAttr?) Defaults ConvertToHailMT.reference (String, default=\"GRCh38\") JointCall.config (String, default=\"DeepVariantWGS\") JointCall.max_cpus (Int, default=64) JointCall.more_PL (Boolean, default=false) JointCall.squeeze (Boolean, default=false) JointCall.trim_uncalled_alleles (Boolean, default=false) JointCall.ConcatBCFs.num_cpus (Int, default=4) Outputs joint_gvcf (File) joint_gvcf_tbi (File) joint_mt (String) Dot Diagram","title":"LRJointCallGVCFs"},{"location":"workflows/LRJointCallGVCFs/#lrjointcallgvcfs","text":"","title":"LRJointCallGVCFs"},{"location":"workflows/LRJointCallGVCFs/#lrjointcallgvcfs_1","text":"description A workflow that performs joint calling on gVCFs (usually from DeepVariant) using GLNexus.","title":"LRJointCallGVCFs"},{"location":"workflows/LRJointCallGVCFs/#inputs","text":"","title":"Inputs"},{"location":"workflows/LRJointCallGVCFs/#required","text":"gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files gvcfs (Array[File], required ): GCS paths to gVCF files prefix (String, required ): prefix for output joint-called gVCF and tabix index ref_map_file (File, required ): table indicating reference sequence and auxillary file locations tbis (Array[File], required ): GCS paths to gVCF tbi files","title":"Required"},{"location":"workflows/LRJointCallGVCFs/#optional","text":"ConvertToHailMT.ref_fai (String?) ConvertToHailMT.ref_fasta (String?) ConvertToHailMT.runtime_attr_override (RuntimeAttr?) FinalizeGVCF.keyfile (File?) FinalizeGVCF.name (String?) FinalizeGVCF.runtime_attr_override (RuntimeAttr?) FinalizeTBI.keyfile (File?) FinalizeTBI.name (String?) FinalizeTBI.runtime_attr_override (RuntimeAttr?) JointCall.bed (File?) JointCall.num_cpus (Int?) JointCall.runtime_attr_override (RuntimeAttr?) JointCall.Call.runtime_attr_override (RuntimeAttr?) JointCall.ConcatBCFs.runtime_attr_override (RuntimeAttr?) JointCall.GetRanges.runtime_attr_override (RuntimeAttr?) JointCall.ShardVCFByRanges.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/LRJointCallGVCFs/#defaults","text":"ConvertToHailMT.reference (String, default=\"GRCh38\") JointCall.config (String, default=\"DeepVariantWGS\") JointCall.max_cpus (Int, default=64) JointCall.more_PL (Boolean, default=false) JointCall.squeeze (Boolean, default=false) JointCall.trim_uncalled_alleles (Boolean, default=false) JointCall.ConcatBCFs.num_cpus (Int, default=4)","title":"Defaults"},{"location":"workflows/LRJointCallGVCFs/#outputs","text":"joint_gvcf (File) joint_gvcf_tbi (File) joint_mt (String)","title":"Outputs"},{"location":"workflows/LRJointCallGVCFs/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/Longbow/","text":"Longbow Process Inputs Required bam (File, required ) Optional barcode_allow_list (File?) barcode_tag (String?) corrected_tag (String?) model (String?) AggregateCorrectLogStats.runtime_attr_override (RuntimeAttr?) Extract.bam_pbi (File?) Extract.leading_adapter (String?) Extract.runtime_attr_override (RuntimeAttr?) Extract.start_offset (Int?) Extract.trailing_adapter (String?) t_01_Peek.runtime_attr_override (RuntimeAttr?) t_02_Annotate.runtime_attr_override (RuntimeAttr?) t_03_Filter.bam_pbi (File?) t_03_Filter.model (String?) t_03_Filter.runtime_attr_override (RuntimeAttr?) t_04_Segment.model (String?) t_04_Segment.runtime_attr_override (RuntimeAttr?) t_05_RemoveMasSeqTruncatedReads.runtime_attr_override (RuntimeAttr?) t_07_PadUMI.runtime_attr_override (RuntimeAttr?) t_08_PadCBC.runtime_attr_override (RuntimeAttr?) t_09_Correct.barcode_freq_list (File?) t_09_Correct.runtime_attr_override (RuntimeAttr?) t_10_AdjustUmiSequenceWithAdapterAlignment.runtime_attr_override (RuntimeAttr?) Defaults prefix (String, default=\"out\") same_barcode_per_read (Boolean, default=false) shard_width (Int, default=25) Extract.base_padding (Int, default=2) Extract.num_cpus (Int, default=2) t_01_Peek.n (Int, default=100) t_02_Annotate.num_cpus (Int, default=8) t_03_Filter.num_cpus (Int, default=2) t_04_Segment.num_cpus (Int, default=2) t_07_PadUMI.padding (Int, default=2) t_08_PadCBC.padding (Int, default=2) t_09_Correct.ccs_lev_dist_threshold (Int, default=2) t_09_Correct.clr_lev_dist_threshold (Int, default=2) t_10_AdjustUmiSequenceWithAdapterAlignment.existing_umi_tag (String, default=\"ZU\") t_10_AdjustUmiSequenceWithAdapterAlignment.new_umi_tag (String, default=\"JX\") Outputs annotated_bam (File) segmented_bam (File) filtered_bam (File) filter_failed_bam (File) corrected_bam (File?) uncorrectable_bam (File?) extracted_bam (File) correct_stats (File?) correct_log (File?) umi_adjustment_log (File) Dot Diagram","title":"Longbow"},{"location":"workflows/Longbow/#longbow","text":"","title":"Longbow"},{"location":"workflows/Longbow/#process","text":"","title":"Process"},{"location":"workflows/Longbow/#inputs","text":"","title":"Inputs"},{"location":"workflows/Longbow/#required","text":"bam (File, required )","title":"Required"},{"location":"workflows/Longbow/#optional","text":"barcode_allow_list (File?) barcode_tag (String?) corrected_tag (String?) model (String?) AggregateCorrectLogStats.runtime_attr_override (RuntimeAttr?) Extract.bam_pbi (File?) Extract.leading_adapter (String?) Extract.runtime_attr_override (RuntimeAttr?) Extract.start_offset (Int?) Extract.trailing_adapter (String?) t_01_Peek.runtime_attr_override (RuntimeAttr?) t_02_Annotate.runtime_attr_override (RuntimeAttr?) t_03_Filter.bam_pbi (File?) t_03_Filter.model (String?) t_03_Filter.runtime_attr_override (RuntimeAttr?) t_04_Segment.model (String?) t_04_Segment.runtime_attr_override (RuntimeAttr?) t_05_RemoveMasSeqTruncatedReads.runtime_attr_override (RuntimeAttr?) t_07_PadUMI.runtime_attr_override (RuntimeAttr?) t_08_PadCBC.runtime_attr_override (RuntimeAttr?) t_09_Correct.barcode_freq_list (File?) t_09_Correct.runtime_attr_override (RuntimeAttr?) t_10_AdjustUmiSequenceWithAdapterAlignment.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/Longbow/#defaults","text":"prefix (String, default=\"out\") same_barcode_per_read (Boolean, default=false) shard_width (Int, default=25) Extract.base_padding (Int, default=2) Extract.num_cpus (Int, default=2) t_01_Peek.n (Int, default=100) t_02_Annotate.num_cpus (Int, default=8) t_03_Filter.num_cpus (Int, default=2) t_04_Segment.num_cpus (Int, default=2) t_07_PadUMI.padding (Int, default=2) t_08_PadCBC.padding (Int, default=2) t_09_Correct.ccs_lev_dist_threshold (Int, default=2) t_09_Correct.clr_lev_dist_threshold (Int, default=2) t_10_AdjustUmiSequenceWithAdapterAlignment.existing_umi_tag (String, default=\"ZU\") t_10_AdjustUmiSequenceWithAdapterAlignment.new_umi_tag (String, default=\"JX\")","title":"Defaults"},{"location":"workflows/Longbow/#outputs","text":"annotated_bam (File) segmented_bam (File) filtered_bam (File) filter_failed_bam (File) corrected_bam (File?) uncorrectable_bam (File?) extracted_bam (File) correct_stats (File?) correct_log (File?) umi_adjustment_log (File)","title":"Outputs"},{"location":"workflows/Longbow/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTAssembleWithCanu/","text":"ONTAssembleWithCanu ONTAssembleWithCanu description A workflow that performs single sample genome assembly on ONT reads from one or more flow cells. The workflow merges multiple samples into a single BAM prior to genome assembly and variant calling. Inputs Required gcs_fastq_dir (String, required ): GCS path to unaligned CCS BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained prefix (String, required ): prefix for output files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAsmPolished.keyfile (File?) FinalizeAsmPolished.name (String?) FinalizeAsmPolished.runtime_attr_override (RuntimeAttr?) FinalizeAsmUnpolished.keyfile (File?) FinalizeAsmUnpolished.name (String?) FinalizeAsmUnpolished.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportHtml.keyfile (File?) FinalizeQuastReportHtml.name (String?) FinalizeQuastReportHtml.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportTxt.keyfile (File?) FinalizeQuastReportTxt.name (String?) FinalizeQuastReportTxt.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MedakaPolish.runtime_attr_override (RuntimeAttr?) MergeFastqs.runtime_attr_override (RuntimeAttr?) Quast.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.AlignAsPAF.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.Paftools.runtime_attr_override (RuntimeAttr?) Canu.Assemble.runtime_attr_override (RuntimeAttr?) Canu.Correct.runtime_attr_override (RuntimeAttr?) Canu.Trim.runtime_attr_override (RuntimeAttr?) Defaults assemble_error_rate (Float, default=0.15): stringency for overlaps in Canu's assemble step correct_error_rate (Float, default=0.15): stringency for overlaps in Canu's correction step medaka_model (String, default=\"r941_prom_high_g360\"): Medaka polishing model name trim_error_rate (Float, default=0.15): stringency for overlaps in Canu's trim step ListFilesOfType.recurse (Boolean, default=false) MergeFastqs.prefix (String, default=\"merged\"): prefix for output files Quast.is_large (Boolean, default=false) Outputs asm_unpolished (File) asm_polished (File) paf (File) paftools_vcf (File) quast_report_html (File) quast_report_txt (File) quast_summary (Map[String,String]) Dot Diagram","title":"ONTAssembleWithCanu"},{"location":"workflows/ONTAssembleWithCanu/#ontassemblewithcanu","text":"","title":"ONTAssembleWithCanu"},{"location":"workflows/ONTAssembleWithCanu/#ontassemblewithcanu_1","text":"description A workflow that performs single sample genome assembly on ONT reads from one or more flow cells. The workflow merges multiple samples into a single BAM prior to genome assembly and variant calling.","title":"ONTAssembleWithCanu"},{"location":"workflows/ONTAssembleWithCanu/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTAssembleWithCanu/#required","text":"gcs_fastq_dir (String, required ): GCS path to unaligned CCS BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained prefix (String, required ): prefix for output files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/ONTAssembleWithCanu/#optional","text":"ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAsmPolished.keyfile (File?) FinalizeAsmPolished.name (String?) FinalizeAsmPolished.runtime_attr_override (RuntimeAttr?) FinalizeAsmUnpolished.keyfile (File?) FinalizeAsmUnpolished.name (String?) FinalizeAsmUnpolished.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportHtml.keyfile (File?) FinalizeQuastReportHtml.name (String?) FinalizeQuastReportHtml.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportTxt.keyfile (File?) FinalizeQuastReportTxt.name (String?) FinalizeQuastReportTxt.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MedakaPolish.runtime_attr_override (RuntimeAttr?) MergeFastqs.runtime_attr_override (RuntimeAttr?) Quast.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.AlignAsPAF.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.Paftools.runtime_attr_override (RuntimeAttr?) Canu.Assemble.runtime_attr_override (RuntimeAttr?) Canu.Correct.runtime_attr_override (RuntimeAttr?) Canu.Trim.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTAssembleWithCanu/#defaults","text":"assemble_error_rate (Float, default=0.15): stringency for overlaps in Canu's assemble step correct_error_rate (Float, default=0.15): stringency for overlaps in Canu's correction step medaka_model (String, default=\"r941_prom_high_g360\"): Medaka polishing model name trim_error_rate (Float, default=0.15): stringency for overlaps in Canu's trim step ListFilesOfType.recurse (Boolean, default=false) MergeFastqs.prefix (String, default=\"merged\"): prefix for output files Quast.is_large (Boolean, default=false)","title":"Defaults"},{"location":"workflows/ONTAssembleWithCanu/#outputs","text":"asm_unpolished (File) asm_polished (File) paf (File) paftools_vcf (File) quast_report_html (File) quast_report_txt (File) quast_summary (Map[String,String])","title":"Outputs"},{"location":"workflows/ONTAssembleWithCanu/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTAssembleWithFlye/","text":"ONTAssembleWithFlye ONTAssembleWithFlye description Perform single sample genome assembly on ONT reads from one or more flow cells. The workflow merges multiple samples into a single BAM prior to genome assembly and variant calling. Inputs Required gcs_fastq_dir (String, required ): GCS path to unaligned CCS BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained prefix (String, required ): prefix for output files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAsmPolished.keyfile (File?) FinalizeAsmPolished.name (String?) FinalizeAsmPolished.runtime_attr_override (RuntimeAttr?) FinalizeAsmUnpolished.keyfile (File?) FinalizeAsmUnpolished.name (String?) FinalizeAsmUnpolished.runtime_attr_override (RuntimeAttr?) FinalizePaf.keyfile (File?) FinalizePaf.name (String?) FinalizePaf.runtime_attr_override (RuntimeAttr?) FinalizePafToolsVcf.keyfile (File?) FinalizePafToolsVcf.name (String?) FinalizePafToolsVcf.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportHtml.keyfile (File?) FinalizeQuastReportHtml.name (String?) FinalizeQuastReportHtml.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportTxt.keyfile (File?) FinalizeQuastReportTxt.name (String?) FinalizeQuastReportTxt.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MedakaPolish.runtime_attr_override (RuntimeAttr?) MergeFastqs.runtime_attr_override (RuntimeAttr?) Quast.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.AlignAsPAF.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.Paftools.runtime_attr_override (RuntimeAttr?) Defaults medaka_model (String, default=\"r941_prom_high_g360\"): Medaka polishing model name ListFilesOfType.recurse (Boolean, default=false) MergeFastqs.prefix (String, default=\"merged\"): prefix for output files Quast.is_large (Boolean, default=false) Outputs asm_unpolished (File) asm_polished (File) paf (File) paftools_vcf (File) quast_report_html (File) quast_report_txt (File) quast_summary (Map[String,String]) Dot Diagram","title":"ONTAssembleWithFlye"},{"location":"workflows/ONTAssembleWithFlye/#ontassemblewithflye","text":"","title":"ONTAssembleWithFlye"},{"location":"workflows/ONTAssembleWithFlye/#ontassemblewithflye_1","text":"description Perform single sample genome assembly on ONT reads from one or more flow cells. The workflow merges multiple samples into a single BAM prior to genome assembly and variant calling.","title":"ONTAssembleWithFlye"},{"location":"workflows/ONTAssembleWithFlye/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTAssembleWithFlye/#required","text":"gcs_fastq_dir (String, required ): GCS path to unaligned CCS BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained prefix (String, required ): prefix for output files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/ONTAssembleWithFlye/#optional","text":"ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAsmPolished.keyfile (File?) FinalizeAsmPolished.name (String?) FinalizeAsmPolished.runtime_attr_override (RuntimeAttr?) FinalizeAsmUnpolished.keyfile (File?) FinalizeAsmUnpolished.name (String?) FinalizeAsmUnpolished.runtime_attr_override (RuntimeAttr?) FinalizePaf.keyfile (File?) FinalizePaf.name (String?) FinalizePaf.runtime_attr_override (RuntimeAttr?) FinalizePafToolsVcf.keyfile (File?) FinalizePafToolsVcf.name (String?) FinalizePafToolsVcf.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportHtml.keyfile (File?) FinalizeQuastReportHtml.name (String?) FinalizeQuastReportHtml.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportTxt.keyfile (File?) FinalizeQuastReportTxt.name (String?) FinalizeQuastReportTxt.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MedakaPolish.runtime_attr_override (RuntimeAttr?) MergeFastqs.runtime_attr_override (RuntimeAttr?) Quast.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.AlignAsPAF.runtime_attr_override (RuntimeAttr?) CallAssemblyVariants.Paftools.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTAssembleWithFlye/#defaults","text":"medaka_model (String, default=\"r941_prom_high_g360\"): Medaka polishing model name ListFilesOfType.recurse (Boolean, default=false) MergeFastqs.prefix (String, default=\"merged\"): prefix for output files Quast.is_large (Boolean, default=false)","title":"Defaults"},{"location":"workflows/ONTAssembleWithFlye/#outputs","text":"asm_unpolished (File) asm_polished (File) paf (File) paftools_vcf (File) quast_report_html (File) quast_report_txt (File) quast_summary (Map[String,String])","title":"Outputs"},{"location":"workflows/ONTAssembleWithFlye/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTBasecall/","text":"ONTBasecall ONTBasecall description Basecall ONT reads Inputs Required gcs_fast5_dir (String, required ): GCS path to the directory containing fast5 files gcs_out_root_dir (String, required ): GCS path to the root directory for output prefix (String, required ): Prefix for output directory Optional barcode_kit (String?): Guppy barcode kit Guppy.num_shards (Int?) Guppy.protocol_run_id (String?) Guppy.sample_name (String?) Guppy.Basecall.runtime_attr_override (RuntimeAttr?) Guppy.FinalizeBasecalls.runtime_attr_override (RuntimeAttr?) Guppy.ListFast5s.runtime_attr_override (RuntimeAttr?) Guppy.MakeFinalSummary.runtime_attr_override (RuntimeAttr?) Guppy.MakeSequencingSummary.runtime_attr_override (RuntimeAttr?) Guppy.PartitionFast5Manifest.runtime_attr_override (RuntimeAttr?) Guppy.SumFailingFastqs.runtime_attr_override (RuntimeAttr?) Guppy.SumPassingFastqs.runtime_attr_override (RuntimeAttr?) Guppy.TimestampStopped.runtime_attr_override (RuntimeAttr?) Guppy.UniqueBarcodes.runtime_attr_override (RuntimeAttr?) Defaults config (String, default=\"dna_r10.4.1_e8.2_400bps_sup.cfg\"): Guppy config file Guppy.flow_cell_id (String, default=\"unknown\") Guppy.instrument (String, default=\"unknown\") Guppy.SumFailingFastqs.prefix (String, default=\"sum\"): Prefix for output directory Guppy.SumPassingFastqs.prefix (String, default=\"sum\"): Prefix for output directory Outputs gcs_basecall_dir (String) Dot Diagram","title":"ONTBasecall"},{"location":"workflows/ONTBasecall/#ontbasecall","text":"","title":"ONTBasecall"},{"location":"workflows/ONTBasecall/#ontbasecall_1","text":"description Basecall ONT reads","title":"ONTBasecall"},{"location":"workflows/ONTBasecall/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTBasecall/#required","text":"gcs_fast5_dir (String, required ): GCS path to the directory containing fast5 files gcs_out_root_dir (String, required ): GCS path to the root directory for output prefix (String, required ): Prefix for output directory","title":"Required"},{"location":"workflows/ONTBasecall/#optional","text":"barcode_kit (String?): Guppy barcode kit Guppy.num_shards (Int?) Guppy.protocol_run_id (String?) Guppy.sample_name (String?) Guppy.Basecall.runtime_attr_override (RuntimeAttr?) Guppy.FinalizeBasecalls.runtime_attr_override (RuntimeAttr?) Guppy.ListFast5s.runtime_attr_override (RuntimeAttr?) Guppy.MakeFinalSummary.runtime_attr_override (RuntimeAttr?) Guppy.MakeSequencingSummary.runtime_attr_override (RuntimeAttr?) Guppy.PartitionFast5Manifest.runtime_attr_override (RuntimeAttr?) Guppy.SumFailingFastqs.runtime_attr_override (RuntimeAttr?) Guppy.SumPassingFastqs.runtime_attr_override (RuntimeAttr?) Guppy.TimestampStopped.runtime_attr_override (RuntimeAttr?) Guppy.UniqueBarcodes.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTBasecall/#defaults","text":"config (String, default=\"dna_r10.4.1_e8.2_400bps_sup.cfg\"): Guppy config file Guppy.flow_cell_id (String, default=\"unknown\") Guppy.instrument (String, default=\"unknown\") Guppy.SumFailingFastqs.prefix (String, default=\"sum\"): Prefix for output directory Guppy.SumPassingFastqs.prefix (String, default=\"sum\"): Prefix for output directory","title":"Defaults"},{"location":"workflows/ONTBasecall/#outputs","text":"gcs_basecall_dir (String)","title":"Outputs"},{"location":"workflows/ONTBasecall/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTFlowcell/","text":"ONTFlowcell ONTFlowcell description Align ONT reads to a reference genome Inputs Required ID (String, required ): the value to place in the BAM read group's ID field SM (String, required ): the value to place in the BAM read group's SM field dir_prefix (String, required ): directory prefix for output files experiment_type (String, required ): [default-valued] type of experiment run (DNA, RNA, R2C2) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional fastq_dir (String?): GCS path to fastq directory final_summary (File?): GCS path to ' final_summary .txt*' file for basecalled fastq files sequencing_summary (File?): GCS path to ' sequencing_summary .txt*' file for basecalled fastq files AlignReads.library (String?) AlignReads.runtime_attr_override (RuntimeAttr?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) GetRunInfo.runtime_attr_override (RuntimeAttr?) ListFastqs.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) NanoPlotFromRichFastqs.runtime_attr_override (RuntimeAttr?) NanoPlotFromSummary.runtime_attr_override (RuntimeAttr?) PartitionFastqManifest.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedFlagStats.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageFullDist.keyfile (File?) PerFlowcellMetrics.FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageGlobalDist.keyfile (File?) PerFlowcellMetrics.FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantized.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedDist.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionDist.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegions.keyfile (File?) PerFlowcellMetrics.FFCoverageRegions.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionsCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFDepthSummaries.keyfile (File?) PerFlowcellMetrics.FFDepthSummaries.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFYieldAligned.keyfile (File?) PerFlowcellMetrics.FFYieldAligned.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.window_size (Int?) PerFlowcellMetrics.SummarizeDepth.runtime_attr_override (RuntimeAttr?) Defaults num_shards (Int, default=300): [default-valued] number of shards into which fastq files should be batched AlignReads.prefix (String, default=\"out\") AlignReads.tags_to_preserve (Array[String], default=[]) Outputs active_channels (Float) aligned_bam (File) aligned_bai (File) num_reads (Float) num_bases (Float) raw_est_fold_cov (Float) read_length_mean (Float) read_length_median (Float) read_length_stdev (Float) read_length_N50 (Float) read_qual_mean (Float) read_qual_median (Float) num_reads_Q5 (Float) num_reads_Q7 (Float) num_reads_Q10 (Float) num_reads_Q12 (Float) num_reads_Q15 (Float) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) Dot Diagram","title":"ONTFlowcell"},{"location":"workflows/ONTFlowcell/#ontflowcell","text":"","title":"ONTFlowcell"},{"location":"workflows/ONTFlowcell/#ontflowcell_1","text":"description Align ONT reads to a reference genome","title":"ONTFlowcell"},{"location":"workflows/ONTFlowcell/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTFlowcell/#required","text":"ID (String, required ): the value to place in the BAM read group's ID field SM (String, required ): the value to place in the BAM read group's SM field dir_prefix (String, required ): directory prefix for output files experiment_type (String, required ): [default-valued] type of experiment run (DNA, RNA, R2C2) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/ONTFlowcell/#optional","text":"fastq_dir (String?): GCS path to fastq directory final_summary (File?): GCS path to ' final_summary .txt*' file for basecalled fastq files sequencing_summary (File?): GCS path to ' sequencing_summary .txt*' file for basecalled fastq files AlignReads.library (String?) AlignReads.runtime_attr_override (RuntimeAttr?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) GetRunInfo.runtime_attr_override (RuntimeAttr?) ListFastqs.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) NanoPlotFromRichFastqs.runtime_attr_override (RuntimeAttr?) NanoPlotFromSummary.runtime_attr_override (RuntimeAttr?) PartitionFastqManifest.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedFlagStats.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageFullDist.keyfile (File?) PerFlowcellMetrics.FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageGlobalDist.keyfile (File?) PerFlowcellMetrics.FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantized.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedDist.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionDist.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegions.keyfile (File?) PerFlowcellMetrics.FFCoverageRegions.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionsCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFDepthSummaries.keyfile (File?) PerFlowcellMetrics.FFDepthSummaries.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFYieldAligned.keyfile (File?) PerFlowcellMetrics.FFYieldAligned.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.window_size (Int?) PerFlowcellMetrics.SummarizeDepth.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTFlowcell/#defaults","text":"num_shards (Int, default=300): [default-valued] number of shards into which fastq files should be batched AlignReads.prefix (String, default=\"out\") AlignReads.tags_to_preserve (Array[String], default=[])","title":"Defaults"},{"location":"workflows/ONTFlowcell/#outputs","text":"active_channels (Float) aligned_bam (File) aligned_bai (File) num_reads (Float) num_bases (Float) raw_est_fold_cov (Float) read_length_mean (Float) read_length_median (Float) read_length_stdev (Float) read_length_N50 (Float) read_qual_mean (Float) read_qual_median (Float) num_reads_Q5 (Float) num_reads_Q7 (Float) num_reads_Q10 (Float) num_reads_Q12 (Float) num_reads_Q15 (Float) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float)","title":"Outputs"},{"location":"workflows/ONTFlowcell/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/","text":"ONTFlowcellFromMultipleBasecalls ONTFlowcellFromMultipleBasecalls Inputs Required aligned_bais (Array[File], required ) aligned_bams (Array[File], required ) flowcell (String, required ) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional bed_to_compute_coverage (File?): A BED listing regions where each will get a coverage summary FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) RemoveDuplicates.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?) Defaults bams_suspected_to_contain_dup_record (Boolean, default=true): if the multiple basecalls are suspected to have duplicates amongst them Outputs last_process_date (String) aligned_bam (File) aligned_bai (File) bed_cov_summary (File?) aligned_reads_stats (Map[String,Float]) Dot Diagram","title":"ONTFlowcellFromMultipleBasecalls"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#ontflowcellfrommultiplebasecalls","text":"","title":"ONTFlowcellFromMultipleBasecalls"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#ontflowcellfrommultiplebasecalls_1","text":"","title":"ONTFlowcellFromMultipleBasecalls"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#required","text":"aligned_bais (Array[File], required ) aligned_bams (Array[File], required ) flowcell (String, required ) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#optional","text":"bed_to_compute_coverage (File?): A BED listing regions where each will get a coverage summary FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) RemoveDuplicates.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#defaults","text":"bams_suspected_to_contain_dup_record (Boolean, default=true): if the multiple basecalls are suspected to have duplicates amongst them","title":"Defaults"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#outputs","text":"last_process_date (String) aligned_bam (File) aligned_bai (File) bed_cov_summary (File?) aligned_reads_stats (Map[String,Float])","title":"Outputs"},{"location":"workflows/ONTFlowcellFromMultipleBasecalls/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTMethylation/","text":"ONTMethylation ONTMethylation description ONT Methylation pipeline Inputs Required gcs_fast5_dir (String, required ): GCS directory containing fast5 files gcs_out_root_dir (String, required ): GCS directory to write output files participant_name (String, required ): Participant name prefix (String, required ): Prefix for output files ref_map_file (File, required ): Reference map file variants (File, required ): VCF file containing variants variants_tbi (File, required ): Tabix index for VCF file Optional CallHaplotype1Variants.runtime_attr_override (RuntimeAttr?) CallHaplotype2Variants.runtime_attr_override (RuntimeAttr?) CatMappingSummaries.runtime_attr_override (RuntimeAttr?) CatModifiedBases5mC.runtime_attr_override (RuntimeAttr?) CatSequencingSummaries.runtime_attr_override (RuntimeAttr?) ChunkManifest.runtime_attr_override (RuntimeAttr?) ExtractHaplotypeReads.runtime_attr_override (RuntimeAttr?) FinalizeHaplotaggedBai.keyfile (File?) FinalizeHaplotaggedBai.runtime_attr_override (RuntimeAttr?) FinalizeHaplotaggedBam.keyfile (File?) FinalizeHaplotaggedBam.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype1Tbi.keyfile (File?) FinalizeHaplotype1Tbi.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype1Vcf.keyfile (File?) FinalizeHaplotype1Vcf.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype2Tbi.keyfile (File?) FinalizeHaplotype2Tbi.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype2Vcf.keyfile (File?) FinalizeHaplotype2Vcf.runtime_attr_override (RuntimeAttr?) FinalizeModMappedBai.keyfile (File?) FinalizeModMappedBai.runtime_attr_override (RuntimeAttr?) FinalizeModMappedBam.keyfile (File?) FinalizeModMappedBam.runtime_attr_override (RuntimeAttr?) FinalizePhasedTbi.keyfile (File?) FinalizePhasedTbi.runtime_attr_override (RuntimeAttr?) FinalizePhasedVcf.keyfile (File?) FinalizePhasedVcf.runtime_attr_override (RuntimeAttr?) Haplotag.runtime_attr_override (RuntimeAttr?) IndexVariants.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) Megalodon.runtime_attr_override (RuntimeAttr?) MergeFastqs.runtime_attr_override (RuntimeAttr?) MergeHaplotagBams.runtime_attr_override (RuntimeAttr?) MergeMappings.runtime_attr_override (RuntimeAttr?) MergeModMappings.runtime_attr_override (RuntimeAttr?) MergeModifiedBaseCallDBs.runtime_attr_override (RuntimeAttr?) MergePerChrCalls.runtime_attr_override (RuntimeAttr?) MergeVarMappings.runtime_attr_override (RuntimeAttr?) MergeVariantDBs.runtime_attr_override (RuntimeAttr?) PhaseVariants.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) SubsetVCF.runtime_attr_override (RuntimeAttr?) WhatsHapFilter.runtime_attr_override (RuntimeAttr?) Defaults ListFilesOfType.recurse (Boolean, default=false) MergeHaplotagBams.prefix (String, default=\"out\"): Prefix for output files MergeMappings.prefix (String, default=\"out\"): Prefix for output files MergeModMappings.prefix (String, default=\"out\"): Prefix for output files MergeVarMappings.prefix (String, default=\"out\"): Prefix for output files Outputs phased_vcf (File) phased_tbi (File) mod_mapped_bam (File) mod_mapped_bai (File) haplotagged_bam (File) haplotagged_bai (File) haplotype1_vcf (File) haplotype1_tbi (File) haplotype2_vcf (File) haplotype2_tbi (File) Dot Diagram","title":"ONTMethylation"},{"location":"workflows/ONTMethylation/#ontmethylation","text":"","title":"ONTMethylation"},{"location":"workflows/ONTMethylation/#ontmethylation_1","text":"description ONT Methylation pipeline","title":"ONTMethylation"},{"location":"workflows/ONTMethylation/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTMethylation/#required","text":"gcs_fast5_dir (String, required ): GCS directory containing fast5 files gcs_out_root_dir (String, required ): GCS directory to write output files participant_name (String, required ): Participant name prefix (String, required ): Prefix for output files ref_map_file (File, required ): Reference map file variants (File, required ): VCF file containing variants variants_tbi (File, required ): Tabix index for VCF file","title":"Required"},{"location":"workflows/ONTMethylation/#optional","text":"CallHaplotype1Variants.runtime_attr_override (RuntimeAttr?) CallHaplotype2Variants.runtime_attr_override (RuntimeAttr?) CatMappingSummaries.runtime_attr_override (RuntimeAttr?) CatModifiedBases5mC.runtime_attr_override (RuntimeAttr?) CatSequencingSummaries.runtime_attr_override (RuntimeAttr?) ChunkManifest.runtime_attr_override (RuntimeAttr?) ExtractHaplotypeReads.runtime_attr_override (RuntimeAttr?) FinalizeHaplotaggedBai.keyfile (File?) FinalizeHaplotaggedBai.runtime_attr_override (RuntimeAttr?) FinalizeHaplotaggedBam.keyfile (File?) FinalizeHaplotaggedBam.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype1Tbi.keyfile (File?) FinalizeHaplotype1Tbi.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype1Vcf.keyfile (File?) FinalizeHaplotype1Vcf.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype2Tbi.keyfile (File?) FinalizeHaplotype2Tbi.runtime_attr_override (RuntimeAttr?) FinalizeHaplotype2Vcf.keyfile (File?) FinalizeHaplotype2Vcf.runtime_attr_override (RuntimeAttr?) FinalizeModMappedBai.keyfile (File?) FinalizeModMappedBai.runtime_attr_override (RuntimeAttr?) FinalizeModMappedBam.keyfile (File?) FinalizeModMappedBam.runtime_attr_override (RuntimeAttr?) FinalizePhasedTbi.keyfile (File?) FinalizePhasedTbi.runtime_attr_override (RuntimeAttr?) FinalizePhasedVcf.keyfile (File?) FinalizePhasedVcf.runtime_attr_override (RuntimeAttr?) Haplotag.runtime_attr_override (RuntimeAttr?) IndexVariants.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) Megalodon.runtime_attr_override (RuntimeAttr?) MergeFastqs.runtime_attr_override (RuntimeAttr?) MergeHaplotagBams.runtime_attr_override (RuntimeAttr?) MergeMappings.runtime_attr_override (RuntimeAttr?) MergeModMappings.runtime_attr_override (RuntimeAttr?) MergeModifiedBaseCallDBs.runtime_attr_override (RuntimeAttr?) MergePerChrCalls.runtime_attr_override (RuntimeAttr?) MergeVarMappings.runtime_attr_override (RuntimeAttr?) MergeVariantDBs.runtime_attr_override (RuntimeAttr?) PhaseVariants.runtime_attr_override (RuntimeAttr?) SubsetBam.runtime_attr_override (RuntimeAttr?) SubsetVCF.runtime_attr_override (RuntimeAttr?) WhatsHapFilter.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTMethylation/#defaults","text":"ListFilesOfType.recurse (Boolean, default=false) MergeHaplotagBams.prefix (String, default=\"out\"): Prefix for output files MergeMappings.prefix (String, default=\"out\"): Prefix for output files MergeModMappings.prefix (String, default=\"out\"): Prefix for output files MergeVarMappings.prefix (String, default=\"out\"): Prefix for output files","title":"Defaults"},{"location":"workflows/ONTMethylation/#outputs","text":"phased_vcf (File) phased_tbi (File) mod_mapped_bam (File) mod_mapped_bai (File) haplotagged_bam (File) haplotagged_bai (File) haplotype1_vcf (File) haplotype1_tbi (File) haplotype2_vcf (File) haplotype2_tbi (File)","title":"Outputs"},{"location":"workflows/ONTMethylation/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTPfHrp2Hrp3Status/","text":"ONTPfHrp2Hrp3Status ONTPfHrp2Hrp3Status description Determine if HRP2 and HRP3 are deleted in a sample Inputs Required bai (File, required ): BAM index file bam (File, required ): BAM file Optional HRP2Status.runtime_attr_override (RuntimeAttr?) HRP3Status.runtime_attr_override (RuntimeAttr?) Outputs hrp2 (String) hrp3 (String) Dot Diagram","title":"ONTPfHrp2Hrp3Status"},{"location":"workflows/ONTPfHrp2Hrp3Status/#ontpfhrp2hrp3status","text":"","title":"ONTPfHrp2Hrp3Status"},{"location":"workflows/ONTPfHrp2Hrp3Status/#ontpfhrp2hrp3status_1","text":"description Determine if HRP2 and HRP3 are deleted in a sample","title":"ONTPfHrp2Hrp3Status"},{"location":"workflows/ONTPfHrp2Hrp3Status/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTPfHrp2Hrp3Status/#required","text":"bai (File, required ): BAM index file bam (File, required ): BAM file","title":"Required"},{"location":"workflows/ONTPfHrp2Hrp3Status/#optional","text":"HRP2Status.runtime_attr_override (RuntimeAttr?) HRP3Status.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTPfHrp2Hrp3Status/#outputs","text":"hrp2 (String) hrp3 (String)","title":"Outputs"},{"location":"workflows/ONTPfHrp2Hrp3Status/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/","text":"ONTPfTypeDrugResistanceMarkers ONTPfTypeDrugResistanceMarkers description Workflow to generate a report of drug resistance markers Inputs Required dir_prefix (String, required ): Prefix for output directory gcs_out_root_dir (String, required ): GCS output root directory vcf (File, required ): VCF file to process Optional AnnotateEffectsOfSelectedVariants.runtime_attr_override (RuntimeAttr?) FinalizeDRReport.keyfile (File?) FinalizeDRReport.name (String?) FinalizeDRReport.runtime_attr_override (RuntimeAttr?) Outputs drug_res_report (File) Dot Diagram","title":"ONTPfTypeDrugResistanceMarkers"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/#ontpftypedrugresistancemarkers","text":"","title":"ONTPfTypeDrugResistanceMarkers"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/#ontpftypedrugresistancemarkers_1","text":"description Workflow to generate a report of drug resistance markers","title":"ONTPfTypeDrugResistanceMarkers"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/#required","text":"dir_prefix (String, required ): Prefix for output directory gcs_out_root_dir (String, required ): GCS output root directory vcf (File, required ): VCF file to process","title":"Required"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/#optional","text":"AnnotateEffectsOfSelectedVariants.runtime_attr_override (RuntimeAttr?) FinalizeDRReport.keyfile (File?) FinalizeDRReport.name (String?) FinalizeDRReport.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/#outputs","text":"drug_res_report (File)","title":"Outputs"},{"location":"workflows/ONTPfTypeDrugResistanceMarkers/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTProcessBasecall/","text":"ONTProcessBasecall ONTProcessBasecall Inputs Required ID (String, required ): the value to place in the BAM read group's ID field SM (String, required ): the value to place in the BAM read group's SM field dir_prefix (String, required ): directory prefix for output files experiment_type (String, required ): [default-valued] type of experiment run (DNA, RNA, R2C2) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional fastq_dir (String?): GCS path to fastq directory final_summary (File?): GCS path to ' final_summary .txt*' file for basecalled fastq files sequencing_summary (File?): GCS path to ' sequencing_summary .txt*' file for basecalled fastq files AlignReads.library (String?) AlignReads.runtime_attr_override (RuntimeAttr?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) GetRunInfo.runtime_attr_override (RuntimeAttr?) ListFastqs.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) NanoPlotFromRichFastqs.runtime_attr_override (RuntimeAttr?) NanoPlotFromSummary.runtime_attr_override (RuntimeAttr?) PartitionFastqManifest.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedFlagStats.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageFullDist.keyfile (File?) PerFlowcellMetrics.FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageGlobalDist.keyfile (File?) PerFlowcellMetrics.FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantized.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedDist.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionDist.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegions.keyfile (File?) PerFlowcellMetrics.FFCoverageRegions.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionsCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFDepthSummaries.keyfile (File?) PerFlowcellMetrics.FFDepthSummaries.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFYieldAligned.keyfile (File?) PerFlowcellMetrics.FFYieldAligned.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.window_size (Int?) PerFlowcellMetrics.SummarizeDepth.runtime_attr_override (RuntimeAttr?) Defaults num_shards (Int, default=300): [default-valued] number of shards into which fastq files should be batched AlignReads.prefix (String, default=\"out\") AlignReads.tags_to_preserve (Array[String], default=[]) Outputs last_process_date (String) aligned_bam (File) aligned_bai (File) raw_reads_stats (Map[String,Float]) aligned_reads_stats (Map[String,Float]) Dot Diagram","title":"ONTProcessBasecall"},{"location":"workflows/ONTProcessBasecall/#ontprocessbasecall","text":"","title":"ONTProcessBasecall"},{"location":"workflows/ONTProcessBasecall/#ontprocessbasecall_1","text":"","title":"ONTProcessBasecall"},{"location":"workflows/ONTProcessBasecall/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTProcessBasecall/#required","text":"ID (String, required ): the value to place in the BAM read group's ID field SM (String, required ): the value to place in the BAM read group's SM field dir_prefix (String, required ): directory prefix for output files experiment_type (String, required ): [default-valued] type of experiment run (DNA, RNA, R2C2) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/ONTProcessBasecall/#optional","text":"fastq_dir (String?): GCS path to fastq directory final_summary (File?): GCS path to ' final_summary .txt*' file for basecalled fastq files sequencing_summary (File?): GCS path to ' sequencing_summary .txt*' file for basecalled fastq files AlignReads.library (String?) AlignReads.runtime_attr_override (RuntimeAttr?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) GetRunInfo.runtime_attr_override (RuntimeAttr?) ListFastqs.runtime_attr_override (RuntimeAttr?) ListFilesOfType.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) NanoPlotFromRichFastqs.runtime_attr_override (RuntimeAttr?) NanoPlotFromSummary.runtime_attr_override (RuntimeAttr?) PartitionFastqManifest.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedFlagStats.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageFullDist.keyfile (File?) PerFlowcellMetrics.FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageGlobalDist.keyfile (File?) PerFlowcellMetrics.FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantized.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedDist.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionDist.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegions.keyfile (File?) PerFlowcellMetrics.FFCoverageRegions.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionsCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFDepthSummaries.keyfile (File?) PerFlowcellMetrics.FFDepthSummaries.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFYieldAligned.keyfile (File?) PerFlowcellMetrics.FFYieldAligned.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.window_size (Int?) PerFlowcellMetrics.SummarizeDepth.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTProcessBasecall/#defaults","text":"num_shards (Int, default=300): [default-valued] number of shards into which fastq files should be batched AlignReads.prefix (String, default=\"out\") AlignReads.tags_to_preserve (Array[String], default=[])","title":"Defaults"},{"location":"workflows/ONTProcessBasecall/#outputs","text":"last_process_date (String) aligned_bam (File) aligned_bai (File) raw_reads_stats (Map[String,Float]) aligned_reads_stats (Map[String,Float])","title":"Outputs"},{"location":"workflows/ONTProcessBasecall/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/ONTWholeGenome/","text":"ONTWholeGenome ONTWholeGenome description A workflow that performs single sample variant calling on Oxford Nanopore reads from one or more flow cells. The workflow merges multiple flowcells into a single BAM prior to variant calling. Inputs Required aligned_bais (Array[File], required ): GCS path to aligned BAM file indices aligned_bams (Array[File], required ): GCS path to aligned BAM files bams_suspected_to_contain_dup_record (Boolean, required ) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional bed_to_compute_coverage (File?) call_small_vars_on_mitochondria (Boolean?): if false, will not attempt to call variants on mitochondria; if true, some samples might fail (caller feature) due to lack of signal dvp_memory (Int?) dvp_threads (Int?) fast_less_sensitive_sv (Boolean?): to trade less sensitive SV calling for faster speed ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper run_dv_pepper_analysis (Boolean?): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizeClairGTbi.keyfile (File?) FinalizeClairGTbi.name (String?) FinalizeClairGTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairGVcf.keyfile (File?) FinalizeClairGVcf.name (String?) FinalizeClairGVcf.runtime_attr_override (RuntimeAttr?) FinalizeClairTbi.keyfile (File?) FinalizeClairTbi.name (String?) FinalizeClairTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairVcf.keyfile (File?) FinalizeClairVcf.name (String?) FinalizeClairVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGTbi.keyfile (File?) FinalizeDVPepperGTbi.name (String?) FinalizeDVPepperGTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGVcf.keyfile (File?) FinalizeDVPepperGVcf.name (String?) FinalizeDVPepperGVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperPhasedTbi.keyfile (File?) FinalizeDVPepperPhasedTbi.name (String?) FinalizeDVPepperPhasedTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperPhasedVcf.keyfile (File?) FinalizeDVPepperPhasedVcf.name (String?) FinalizeDVPepperPhasedVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperTbi.keyfile (File?) FinalizeDVPepperTbi.name (String?) FinalizeDVPepperTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperVcf.keyfile (File?) FinalizeDVPepperVcf.name (String?) FinalizeDVPepperVcf.runtime_attr_override (RuntimeAttr?) FinalizePBSV.keyfile (File?) FinalizePBSV.name (String?) FinalizePBSV.runtime_attr_override (RuntimeAttr?) FinalizePBSVtbi.keyfile (File?) FinalizePBSVtbi.name (String?) FinalizePBSVtbi.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) FinalizeSniffles.keyfile (File?) FinalizeSniffles.name (String?) FinalizeSniffles.runtime_attr_override (RuntimeAttr?) FinalizeSnifflesTbi.keyfile (File?) FinalizeSnifflesTbi.name (String?) FinalizeSnifflesTbi.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) RemoveDuplicates.runtime_attr_override (RuntimeAttr?) CallVariants.Clair.chr (String?) CallVariants.Clair.runtime_attr_override (RuntimeAttr?) CallVariants.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClairVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClair_gVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeBams.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantGVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantPhasedVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantPhasedVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.Pepper.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) CallVariants.Sniffles2SV.runtime_attr_override (RuntimeAttr?) CallVariants.SubsetBam.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) CallVariants.size_balanced_scatter.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Call.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Discover.chr (String?) CallVariants.PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Call.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Discover.chr (String?) CallVariants.RunPBSV.Discover.runtime_attr_override (RuntimeAttr?) Defaults call_small_variants (Boolean, default=true): whether to call small variants call_svs (Boolean, default=true): whether to call SVs CallVariants.minsvlen (Int, default=50) RemoveDuplicates.same_name_as_input (Boolean, default=true) CallVariants.SmallVariantsScatter.prefix (String, default=\"subset\") CallVariants.SubsetBam.prefix (String, default=\"subset\") Outputs merged_bam (File) merged_bai (File) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) bed_cov_summary (File?) pbsv_vcf (File?) pbsv_tbi (File?) sniffles_vcf (File?) sniffles_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_vcf (File?) dvp_tbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?) Dot Diagram","title":"ONTWholeGenome"},{"location":"workflows/ONTWholeGenome/#ontwholegenome","text":"","title":"ONTWholeGenome"},{"location":"workflows/ONTWholeGenome/#ontwholegenome_1","text":"description A workflow that performs single sample variant calling on Oxford Nanopore reads from one or more flow cells. The workflow merges multiple flowcells into a single BAM prior to variant calling.","title":"ONTWholeGenome"},{"location":"workflows/ONTWholeGenome/#inputs","text":"","title":"Inputs"},{"location":"workflows/ONTWholeGenome/#required","text":"aligned_bais (Array[File], required ): GCS path to aligned BAM file indices aligned_bams (Array[File], required ): GCS path to aligned BAM files bams_suspected_to_contain_dup_record (Boolean, required ) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/ONTWholeGenome/#optional","text":"bed_to_compute_coverage (File?) call_small_vars_on_mitochondria (Boolean?): if false, will not attempt to call variants on mitochondria; if true, some samples might fail (caller feature) due to lack of signal dvp_memory (Int?) dvp_threads (Int?) fast_less_sensitive_sv (Boolean?): to trade less sensitive SV calling for faster speed ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper run_dv_pepper_analysis (Boolean?): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizeClairGTbi.keyfile (File?) FinalizeClairGTbi.name (String?) FinalizeClairGTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairGVcf.keyfile (File?) FinalizeClairGVcf.name (String?) FinalizeClairGVcf.runtime_attr_override (RuntimeAttr?) FinalizeClairTbi.keyfile (File?) FinalizeClairTbi.name (String?) FinalizeClairTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairVcf.keyfile (File?) FinalizeClairVcf.name (String?) FinalizeClairVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGTbi.keyfile (File?) FinalizeDVPepperGTbi.name (String?) FinalizeDVPepperGTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGVcf.keyfile (File?) FinalizeDVPepperGVcf.name (String?) FinalizeDVPepperGVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperPhasedTbi.keyfile (File?) FinalizeDVPepperPhasedTbi.name (String?) FinalizeDVPepperPhasedTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperPhasedVcf.keyfile (File?) FinalizeDVPepperPhasedVcf.name (String?) FinalizeDVPepperPhasedVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperTbi.keyfile (File?) FinalizeDVPepperTbi.name (String?) FinalizeDVPepperTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperVcf.keyfile (File?) FinalizeDVPepperVcf.name (String?) FinalizeDVPepperVcf.runtime_attr_override (RuntimeAttr?) FinalizePBSV.keyfile (File?) FinalizePBSV.name (String?) FinalizePBSV.runtime_attr_override (RuntimeAttr?) FinalizePBSVtbi.keyfile (File?) FinalizePBSVtbi.name (String?) FinalizePBSVtbi.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) FinalizeSniffles.keyfile (File?) FinalizeSniffles.name (String?) FinalizeSniffles.runtime_attr_override (RuntimeAttr?) FinalizeSnifflesTbi.keyfile (File?) FinalizeSnifflesTbi.name (String?) FinalizeSnifflesTbi.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) RemoveDuplicates.runtime_attr_override (RuntimeAttr?) CallVariants.Clair.chr (String?) CallVariants.Clair.runtime_attr_override (RuntimeAttr?) CallVariants.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClairVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClair_gVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeBams.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantGVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantPhasedVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantPhasedVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.Pepper.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) CallVariants.Sniffles2SV.runtime_attr_override (RuntimeAttr?) CallVariants.SubsetBam.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) CallVariants.size_balanced_scatter.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Call.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Discover.chr (String?) CallVariants.PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Call.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Discover.chr (String?) CallVariants.RunPBSV.Discover.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/ONTWholeGenome/#defaults","text":"call_small_variants (Boolean, default=true): whether to call small variants call_svs (Boolean, default=true): whether to call SVs CallVariants.minsvlen (Int, default=50) RemoveDuplicates.same_name_as_input (Boolean, default=true) CallVariants.SmallVariantsScatter.prefix (String, default=\"subset\") CallVariants.SubsetBam.prefix (String, default=\"subset\")","title":"Defaults"},{"location":"workflows/ONTWholeGenome/#outputs","text":"merged_bam (File) merged_bai (File) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) bed_cov_summary (File?) pbsv_vcf (File?) pbsv_tbi (File?) sniffles_vcf (File?) sniffles_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_vcf (File?) dvp_tbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?)","title":"Outputs"},{"location":"workflows/ONTWholeGenome/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBAssembleWithHifiasm/","text":"PBAssembleWithHifiasm PBAssembleWithHifiasm description A workflow that performs single sample genome assembly on PacBio HiFi reads from one or more SMRT cells. The multiple SMRT cells data are merged prior to assembly. Inputs Required ccs_fqs (Array[File], required ): GCS path to CCS fastq files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained prefix (String, required ): prefix for output files Optional ref_fasta_for_eval (File?): Reference Fasta used for evaluating FinalizeHifiasmAlternateFA.name (String?) FinalizeHifiasmAlternateFA.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmAlternateGFA.name (String?) FinalizeHifiasmAlternateGFA.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmHapFAs.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmHapGFAs.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmPrimaryFA.name (String?) FinalizeHifiasmPrimaryFA.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmPrimaryGFA.name (String?) FinalizeHifiasmPrimaryGFA.runtime_attr_override (RuntimeAttr?) FinalizeQuastIndividualSummary.keyfile (File?) FinalizeQuastIndividualSummary.name (String?) FinalizeQuastIndividualSummary.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportHtml.keyfile (File?) FinalizeQuastReportHtml.name (String?) FinalizeQuastReportHtml.runtime_attr_override (RuntimeAttr?) FinalizeQuastReports.runtime_attr_override (RuntimeAttr?) FinalizeQuastSummaryAll.keyfile (File?) FinalizeQuastSummaryAll.name (String?) FinalizeQuastSummaryAll.runtime_attr_override (RuntimeAttr?) MergeAllFastqs.runtime_attr_override (RuntimeAttr?) primary_h0_h1_quast.runtime_attr_override (RuntimeAttr?) Hifiasm.AssembleForAltContigs.runtime_attr_override (RuntimeAttr?) Hifiasm.AssembleForHaplotigs.runtime_attr_override (RuntimeAttr?) Defaults Hifiasm.zones (String, default=\"us-central1-a us-central1-b us-central1-c\") MergeAllFastqs.prefix (String, default=\"merged\"): prefix for output files Outputs hifiasm_primary_gfa (File) hifiasm_primary_tigs (File) hifiasm_haploGFAs (File) hifiasm_haplotigs (File) hifiasm_alternate_gfa (File) hifiasm_alternate_tigs (File) quast_report_html (File?) quast_report_in_various_formats (File?) quast_summary_on_all (File?) quast_summary_on_primary (File?) quast_summary_on_H0 (File?) quast_summary_on_H1 (File?) Dot Diagram","title":"PBAssembleWithHifiasm"},{"location":"workflows/PBAssembleWithHifiasm/#pbassemblewithhifiasm","text":"","title":"PBAssembleWithHifiasm"},{"location":"workflows/PBAssembleWithHifiasm/#pbassemblewithhifiasm_1","text":"description A workflow that performs single sample genome assembly on PacBio HiFi reads from one or more SMRT cells. The multiple SMRT cells data are merged prior to assembly.","title":"PBAssembleWithHifiasm"},{"location":"workflows/PBAssembleWithHifiasm/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBAssembleWithHifiasm/#required","text":"ccs_fqs (Array[File], required ): GCS path to CCS fastq files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained prefix (String, required ): prefix for output files","title":"Required"},{"location":"workflows/PBAssembleWithHifiasm/#optional","text":"ref_fasta_for_eval (File?): Reference Fasta used for evaluating FinalizeHifiasmAlternateFA.name (String?) FinalizeHifiasmAlternateFA.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmAlternateGFA.name (String?) FinalizeHifiasmAlternateGFA.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmHapFAs.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmHapGFAs.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmPrimaryFA.name (String?) FinalizeHifiasmPrimaryFA.runtime_attr_override (RuntimeAttr?) FinalizeHifiasmPrimaryGFA.name (String?) FinalizeHifiasmPrimaryGFA.runtime_attr_override (RuntimeAttr?) FinalizeQuastIndividualSummary.keyfile (File?) FinalizeQuastIndividualSummary.name (String?) FinalizeQuastIndividualSummary.runtime_attr_override (RuntimeAttr?) FinalizeQuastReportHtml.keyfile (File?) FinalizeQuastReportHtml.name (String?) FinalizeQuastReportHtml.runtime_attr_override (RuntimeAttr?) FinalizeQuastReports.runtime_attr_override (RuntimeAttr?) FinalizeQuastSummaryAll.keyfile (File?) FinalizeQuastSummaryAll.name (String?) FinalizeQuastSummaryAll.runtime_attr_override (RuntimeAttr?) MergeAllFastqs.runtime_attr_override (RuntimeAttr?) primary_h0_h1_quast.runtime_attr_override (RuntimeAttr?) Hifiasm.AssembleForAltContigs.runtime_attr_override (RuntimeAttr?) Hifiasm.AssembleForHaplotigs.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBAssembleWithHifiasm/#defaults","text":"Hifiasm.zones (String, default=\"us-central1-a us-central1-b us-central1-c\") MergeAllFastqs.prefix (String, default=\"merged\"): prefix for output files","title":"Defaults"},{"location":"workflows/PBAssembleWithHifiasm/#outputs","text":"hifiasm_primary_gfa (File) hifiasm_primary_tigs (File) hifiasm_haploGFAs (File) hifiasm_haplotigs (File) hifiasm_alternate_gfa (File) hifiasm_alternate_tigs (File) quast_report_html (File?) quast_report_in_various_formats (File?) quast_summary_on_all (File?) quast_summary_on_primary (File?) quast_summary_on_H0 (File?) quast_summary_on_H1 (File?)","title":"Outputs"},{"location":"workflows/PBAssembleWithHifiasm/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBCCSIsoSeq/","text":"PBCCSIsoSeq PBCCSIsoSeq description A workflow that performs CCS correction and IsoSeq processing on PacBio HiFi reads from a single flow cell. The workflow shards the subreads into clusters and performs CCS in parallel on each cluster. Error-corrected reads are then processed with PacBio's IsoSeq software. A number of metrics and figures are produced along the way. Inputs Required barcode_file (File, required ): GCS path to the fasta file that specifies the expected set of multiplexing barcodes ccs_bams (Array[File], required ): GCS path to CCS BAM files ccs_pbis (Array[File], required ): GCS path to CCS BAM .pbi indices gcs_out_root_dir (String, required ): GCS bucket to store the corrected/uncorrected reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional AlignTranscripts.library (String?) BamToBed.runtime_attr_override (RuntimeAttr?) ClusterTranscripts.runtime_attr_override (RuntimeAttr?) CollapseTranscripts.runtime_attr_override (RuntimeAttr?) Demultiplex.runtime_attr_override (RuntimeAttr?) DetailedDemuxReportPNG.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) FinalizeAlignedPbi.keyfile (File?) FinalizeAlignedPbi.runtime_attr_override (RuntimeAttr?) FinalizeAlignedTranscriptsBai.keyfile (File?) FinalizeAlignedTranscriptsBai.name (String?) FinalizeAlignedTranscriptsBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedTranscriptsBam.keyfile (File?) FinalizeAlignedTranscriptsBam.name (String?) FinalizeAlignedTranscriptsBam.runtime_attr_override (RuntimeAttr?) FinalizeAlignedTranscriptsBed.keyfile (File?) FinalizeAlignedTranscriptsBed.name (String?) FinalizeAlignedTranscriptsBed.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizeCollapsedTranscripts.keyfile (File?) FinalizeCollapsedTranscripts.name (String?) FinalizeCollapsedTranscripts.runtime_attr_override (RuntimeAttr?) FinalizeDemultiplexCounts.keyfile (File?) FinalizeDemultiplexCounts.runtime_attr_override (RuntimeAttr?) FinalizeDemultiplexReport.keyfile (File?) FinalizeDemultiplexReport.runtime_attr_override (RuntimeAttr?) FinalizeDemultiplexSummary.keyfile (File?) FinalizeDemultiplexSummary.runtime_attr_override (RuntimeAttr?) FinalizeLimaDetailedPNG.keyfile (File?) FinalizeLimaDetailedPNG.runtime_attr_override (RuntimeAttr?) FinalizeLimaSummary.keyfile (File?) FinalizeLimaSummary.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) IndexAlignedReads.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) MergeBarcodeBams.runtime_attr_override (RuntimeAttr?) RefineTranscriptReads.runtime_attr_override (RuntimeAttr?) SummarizedDemuxReportPNG.runtime_attr_override (RuntimeAttr?) Defaults drop_per_base_N_pulse_tags (Boolean, default=true) ClusterTranscripts.use_qvs (Boolean, default=true) CollapseTranscripts.use_qvs (Boolean, default=true) Demultiplex.isoseq (Boolean, default=false) Demultiplex.min_score (Int, default=0) Demultiplex.peek (Int, default=0) Demultiplex.peek_guess (Boolean, default=false) RefineTranscriptReads.require_polya (Boolean, default=true) Outputs ccs_bam (File) ccs_pbi (File) aligned_bam (File) aligned_bai (File) aligned_pbi (File) demux_counts (File) demux_reports (File) demux_summary (File) Dot Diagram","title":"PBCCSIsoSeq"},{"location":"workflows/PBCCSIsoSeq/#pbccsisoseq","text":"","title":"PBCCSIsoSeq"},{"location":"workflows/PBCCSIsoSeq/#pbccsisoseq_1","text":"description A workflow that performs CCS correction and IsoSeq processing on PacBio HiFi reads from a single flow cell. The workflow shards the subreads into clusters and performs CCS in parallel on each cluster. Error-corrected reads are then processed with PacBio's IsoSeq software. A number of metrics and figures are produced along the way.","title":"PBCCSIsoSeq"},{"location":"workflows/PBCCSIsoSeq/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBCCSIsoSeq/#required","text":"barcode_file (File, required ): GCS path to the fasta file that specifies the expected set of multiplexing barcodes ccs_bams (Array[File], required ): GCS path to CCS BAM files ccs_pbis (Array[File], required ): GCS path to CCS BAM .pbi indices gcs_out_root_dir (String, required ): GCS bucket to store the corrected/uncorrected reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/PBCCSIsoSeq/#optional","text":"AlignTranscripts.library (String?) BamToBed.runtime_attr_override (RuntimeAttr?) ClusterTranscripts.runtime_attr_override (RuntimeAttr?) CollapseTranscripts.runtime_attr_override (RuntimeAttr?) Demultiplex.runtime_attr_override (RuntimeAttr?) DetailedDemuxReportPNG.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.keyfile (File?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.keyfile (File?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) FinalizeAlignedPbi.keyfile (File?) FinalizeAlignedPbi.runtime_attr_override (RuntimeAttr?) FinalizeAlignedTranscriptsBai.keyfile (File?) FinalizeAlignedTranscriptsBai.name (String?) FinalizeAlignedTranscriptsBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedTranscriptsBam.keyfile (File?) FinalizeAlignedTranscriptsBam.name (String?) FinalizeAlignedTranscriptsBam.runtime_attr_override (RuntimeAttr?) FinalizeAlignedTranscriptsBed.keyfile (File?) FinalizeAlignedTranscriptsBed.name (String?) FinalizeAlignedTranscriptsBed.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizeCollapsedTranscripts.keyfile (File?) FinalizeCollapsedTranscripts.name (String?) FinalizeCollapsedTranscripts.runtime_attr_override (RuntimeAttr?) FinalizeDemultiplexCounts.keyfile (File?) FinalizeDemultiplexCounts.runtime_attr_override (RuntimeAttr?) FinalizeDemultiplexReport.keyfile (File?) FinalizeDemultiplexReport.runtime_attr_override (RuntimeAttr?) FinalizeDemultiplexSummary.keyfile (File?) FinalizeDemultiplexSummary.runtime_attr_override (RuntimeAttr?) FinalizeLimaDetailedPNG.keyfile (File?) FinalizeLimaDetailedPNG.runtime_attr_override (RuntimeAttr?) FinalizeLimaSummary.keyfile (File?) FinalizeLimaSummary.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) IndexAlignedReads.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) MergeBarcodeBams.runtime_attr_override (RuntimeAttr?) RefineTranscriptReads.runtime_attr_override (RuntimeAttr?) SummarizedDemuxReportPNG.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBCCSIsoSeq/#defaults","text":"drop_per_base_N_pulse_tags (Boolean, default=true) ClusterTranscripts.use_qvs (Boolean, default=true) CollapseTranscripts.use_qvs (Boolean, default=true) Demultiplex.isoseq (Boolean, default=false) Demultiplex.min_score (Int, default=0) Demultiplex.peek (Int, default=0) Demultiplex.peek_guess (Boolean, default=false) RefineTranscriptReads.require_polya (Boolean, default=true)","title":"Defaults"},{"location":"workflows/PBCCSIsoSeq/#outputs","text":"ccs_bam (File) ccs_pbi (File) aligned_bam (File) aligned_bai (File) aligned_pbi (File) demux_counts (File) demux_reports (File) demux_summary (File)","title":"Outputs"},{"location":"workflows/PBCCSIsoSeq/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBCCSWholeGenome/","text":"PBCCSWholeGenome PBCCSWholeGenome description A workflow that performs single sample variant calling on PacBio HiFi reads from one or more flow cells. The workflow merges multiple SMRT cells into a single BAM prior to variant calling. Inputs Required aligned_bais (Array[File], required ): GCS path to aligned BAM file indices aligned_bams (Array[File], required ): GCS path to aligned BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional bed_to_compute_coverage (File?) call_small_vars_on_mitochondria (Boolean?): if false, will not attempt to call variants on mitochondria; if true, some samples might fail (caller feature) due to lack of signal dvp_memory (Int?) dvp_threads (Int?) fast_less_sensitive_sv (Boolean?): to trade less sensitive SV calling for faster speed ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper run_dv_pepper_analysis (Boolean?): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizeClairGTbi.keyfile (File?) FinalizeClairGTbi.name (String?) FinalizeClairGTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairGVcf.keyfile (File?) FinalizeClairGVcf.name (String?) FinalizeClairGVcf.runtime_attr_override (RuntimeAttr?) FinalizeClairTbi.keyfile (File?) FinalizeClairTbi.name (String?) FinalizeClairTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairVcf.keyfile (File?) FinalizeClairVcf.name (String?) FinalizeClairVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPEPPERPhasedTbi.keyfile (File?) FinalizeDVPEPPERPhasedTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPEPPERPhasedVcf.keyfile (File?) FinalizeDVPEPPERPhasedVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGTbi.keyfile (File?) FinalizeDVPepperGTbi.name (String?) FinalizeDVPepperGTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGVcf.keyfile (File?) FinalizeDVPepperGVcf.name (String?) FinalizeDVPepperGVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperTbi.keyfile (File?) FinalizeDVPepperTbi.name (String?) FinalizeDVPepperTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperVcf.keyfile (File?) FinalizeDVPepperVcf.name (String?) FinalizeDVPepperVcf.runtime_attr_override (RuntimeAttr?) FinalizePBSV.keyfile (File?) FinalizePBSV.name (String?) FinalizePBSV.runtime_attr_override (RuntimeAttr?) FinalizePBSVtbi.keyfile (File?) FinalizePBSVtbi.name (String?) FinalizePBSVtbi.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) FinalizeSniffles.keyfile (File?) FinalizeSniffles.name (String?) FinalizeSniffles.runtime_attr_override (RuntimeAttr?) FinalizeSnifflesTbi.keyfile (File?) FinalizeSnifflesTbi.name (String?) FinalizeSnifflesTbi.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) CallVariants.Clair.chr (String?) CallVariants.Clair.runtime_attr_override (RuntimeAttr?) CallVariants.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) CallVariants.MarginPhase.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClairVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClair_gVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeBams.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantGVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) CallVariants.Sniffles2SV.runtime_attr_override (RuntimeAttr?) CallVariants.SubsetBam.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) CallVariants.size_balanced_scatter.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?) CallVariants.CCSPepper.deep_variant.runtime_attr_override (RuntimeAttr?) CallVariants.CCSPepper.get_hap_tagged_bam.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Call.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Discover.chr (String?) CallVariants.PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Call.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Discover.chr (String?) CallVariants.RunPBSV.Discover.runtime_attr_override (RuntimeAttr?) Defaults call_small_variants (Boolean, default=true): whether to call small variants call_svs (Boolean, default=true): whether to call SVs CallVariants.minsvlen (Int, default=50) CallVariants.SmallVariantsScatter.prefix (String, default=\"subset\") CallVariants.SubsetBam.prefix (String, default=\"subset\") Outputs aligned_bam (File) aligned_bai (File) aligned_pbi (File) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) bed_cov_summary (File?) pbsv_vcf (File?) pbsv_tbi (File?) sniffles_vcf (File?) sniffles_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_vcf (File?) dvp_tbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?) Dot Diagram","title":"PBCCSWholeGenome"},{"location":"workflows/PBCCSWholeGenome/#pbccswholegenome","text":"","title":"PBCCSWholeGenome"},{"location":"workflows/PBCCSWholeGenome/#pbccswholegenome_1","text":"description A workflow that performs single sample variant calling on PacBio HiFi reads from one or more flow cells. The workflow merges multiple SMRT cells into a single BAM prior to variant calling.","title":"PBCCSWholeGenome"},{"location":"workflows/PBCCSWholeGenome/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBCCSWholeGenome/#required","text":"aligned_bais (Array[File], required ): GCS path to aligned BAM file indices aligned_bams (Array[File], required ): GCS path to aligned BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/PBCCSWholeGenome/#optional","text":"bed_to_compute_coverage (File?) call_small_vars_on_mitochondria (Boolean?): if false, will not attempt to call variants on mitochondria; if true, some samples might fail (caller feature) due to lack of signal dvp_memory (Int?) dvp_threads (Int?) fast_less_sensitive_sv (Boolean?): to trade less sensitive SV calling for faster speed ref_scatter_interval_list_ids (File?): A file that gives short IDs to the interval_list files; needed only when running DV-Pepper ref_scatter_interval_list_locator (File?): A file holding paths to interval_list files; needed only when running DV-Pepper run_dv_pepper_analysis (Boolean?): to turn on DV-Pepper analysis or not (non-trivial increase in cost and runtime) sites_vcf (File?): for use with Clair sites_vcf_tbi (File?): for use with Clair FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizeClairGTbi.keyfile (File?) FinalizeClairGTbi.name (String?) FinalizeClairGTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairGVcf.keyfile (File?) FinalizeClairGVcf.name (String?) FinalizeClairGVcf.runtime_attr_override (RuntimeAttr?) FinalizeClairTbi.keyfile (File?) FinalizeClairTbi.name (String?) FinalizeClairTbi.runtime_attr_override (RuntimeAttr?) FinalizeClairVcf.keyfile (File?) FinalizeClairVcf.name (String?) FinalizeClairVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPEPPERPhasedTbi.keyfile (File?) FinalizeDVPEPPERPhasedTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPEPPERPhasedVcf.keyfile (File?) FinalizeDVPEPPERPhasedVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGTbi.keyfile (File?) FinalizeDVPepperGTbi.name (String?) FinalizeDVPepperGTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperGVcf.keyfile (File?) FinalizeDVPepperGVcf.name (String?) FinalizeDVPepperGVcf.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperTbi.keyfile (File?) FinalizeDVPepperTbi.name (String?) FinalizeDVPepperTbi.runtime_attr_override (RuntimeAttr?) FinalizeDVPepperVcf.keyfile (File?) FinalizeDVPepperVcf.name (String?) FinalizeDVPepperVcf.runtime_attr_override (RuntimeAttr?) FinalizePBSV.keyfile (File?) FinalizePBSV.name (String?) FinalizePBSV.runtime_attr_override (RuntimeAttr?) FinalizePBSVtbi.keyfile (File?) FinalizePBSVtbi.name (String?) FinalizePBSVtbi.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) FinalizeSniffles.keyfile (File?) FinalizeSniffles.name (String?) FinalizeSniffles.runtime_attr_override (RuntimeAttr?) FinalizeSnifflesTbi.keyfile (File?) FinalizeSnifflesTbi.name (String?) FinalizeSnifflesTbi.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) CallVariants.Clair.chr (String?) CallVariants.Clair.runtime_attr_override (RuntimeAttr?) CallVariants.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) CallVariants.MarginPhase.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClairVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClairVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeAndSortClair_gVCFs.header_definitions_file (File?) CallVariants.MergeAndSortClair_gVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeBams.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantGVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantGVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeDeepVariantVCFs.header_definitions_file (File?) CallVariants.MergeDeepVariantVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatter.runtime_attr_override (RuntimeAttr?) CallVariants.SmallVariantsScatterPrepp.runtime_attr_override (RuntimeAttr?) CallVariants.Sniffles2SV.runtime_attr_override (RuntimeAttr?) CallVariants.SubsetBam.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexSnifflesVCF.runtime_attr_override (RuntimeAttr?) CallVariants.size_balanced_scatter.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?) CallVariants.CCSPepper.deep_variant.runtime_attr_override (RuntimeAttr?) CallVariants.CCSPepper.get_hap_tagged_bam.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Call.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Discover.chr (String?) CallVariants.PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Call.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Discover.chr (String?) CallVariants.RunPBSV.Discover.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBCCSWholeGenome/#defaults","text":"call_small_variants (Boolean, default=true): whether to call small variants call_svs (Boolean, default=true): whether to call SVs CallVariants.minsvlen (Int, default=50) CallVariants.SmallVariantsScatter.prefix (String, default=\"subset\") CallVariants.SubsetBam.prefix (String, default=\"subset\")","title":"Defaults"},{"location":"workflows/PBCCSWholeGenome/#outputs","text":"aligned_bam (File) aligned_bai (File) aligned_pbi (File) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) bed_cov_summary (File?) pbsv_vcf (File?) pbsv_tbi (File?) sniffles_vcf (File?) sniffles_tbi (File?) clair_vcf (File?) clair_tbi (File?) clair_gvcf (File?) clair_gtbi (File?) dvp_vcf (File?) dvp_tbi (File?) dvp_g_vcf (File?) dvp_g_tbi (File?) dvp_phased_vcf (File?) dvp_phased_tbi (File?)","title":"Outputs"},{"location":"workflows/PBCCSWholeGenome/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBCLRWholeGenome/","text":"PBCLRWholeGenome PBCLRWholeGenome description A workflow that performs single sample variant calling on PacBio CLR reads from one or more flow cells. The workflow merges multiple SMRT cells into a single BAM prior to variant calling. Inputs Required aligned_bais (Array[File], required ): GCS path to aligned BAM file indices aligned_bams (Array[File], required ): GCS path to aligned BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional bed_to_compute_coverage (File?) call_small_vars_on_mitochondria (Boolean?): if false, will not attempt to call variants on mitochondria; if true, some samples might fail (caller feature) due to lack of signal fast_less_sensitive_sv (Boolean?): to trade less sensitive SV calling for faster speed FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizePBSV.keyfile (File?) FinalizePBSV.name (String?) FinalizePBSV.runtime_attr_override (RuntimeAttr?) FinalizePBSVtbi.keyfile (File?) FinalizePBSVtbi.name (String?) FinalizePBSVtbi.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) FinalizeSniffles.keyfile (File?) FinalizeSniffles.name (String?) FinalizeSniffles.runtime_attr_override (RuntimeAttr?) FinalizeSnifflesTbi.keyfile (File?) FinalizeSnifflesTbi.name (String?) FinalizeSnifflesTbi.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) CallVariants.FixSnifflesVCF.ref_fasta_fai (File?) CallVariants.FixSnifflesVCF.runtime_attr_override (RuntimeAttr?) CallVariants.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) CallVariants.MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeSnifflesVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.Sniffles.runtime_attr_override (RuntimeAttr?) CallVariants.SnifflesSlow.chr (String?) CallVariants.SnifflesSlow.runtime_attr_override (RuntimeAttr?) CallVariants.SubsetBam.runtime_attr_override (RuntimeAttr?) CallVariants.UnionHeadersSnifflesVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexSniffles.ref_fasta_fai (File?) CallVariants.ZipAndIndexSniffles.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Call.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Discover.chr (String?) CallVariants.PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Call.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Discover.chr (String?) CallVariants.RunPBSV.Discover.runtime_attr_override (RuntimeAttr?) Defaults call_small_variants (Boolean, default=true): whether to call small variants call_svs (Boolean, default=true): whether to call SVs CallVariants.Sniffles.min_mq (Int, default=20) CallVariants.Sniffles.min_read_length (Int, default=1000) CallVariants.Sniffles.min_read_support (Int, default=2) CallVariants.SnifflesSlow.min_mq (Int, default=20) CallVariants.SnifflesSlow.min_read_length (Int, default=1000) CallVariants.SnifflesSlow.min_read_support (Int, default=2) CallVariants.SubsetBam.prefix (String, default=\"subset\") Outputs aligned_bam (File) aligned_bai (File) aligned_pbi (File) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) bed_cov_summary (File?) pbsv_vcf (File?) pbsv_tbi (File?) sniffles_vcf (File?) sniffles_tbi (File?) Dot Diagram","title":"PBCLRWholeGenome"},{"location":"workflows/PBCLRWholeGenome/#pbclrwholegenome","text":"","title":"PBCLRWholeGenome"},{"location":"workflows/PBCLRWholeGenome/#pbclrwholegenome_1","text":"description A workflow that performs single sample variant calling on PacBio CLR reads from one or more flow cells. The workflow merges multiple SMRT cells into a single BAM prior to variant calling.","title":"PBCLRWholeGenome"},{"location":"workflows/PBCLRWholeGenome/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBCLRWholeGenome/#required","text":"aligned_bais (Array[File], required ): GCS path to aligned BAM file indices aligned_bams (Array[File], required ): GCS path to aligned BAM files gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/PBCLRWholeGenome/#optional","text":"bed_to_compute_coverage (File?) call_small_vars_on_mitochondria (Boolean?): if false, will not attempt to call variants on mitochondria; if true, some samples might fail (caller feature) due to lack of signal fast_less_sensitive_sv (Boolean?): to trade less sensitive SV calling for faster speed FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizePBSV.keyfile (File?) FinalizePBSV.name (String?) FinalizePBSV.runtime_attr_override (RuntimeAttr?) FinalizePBSVtbi.keyfile (File?) FinalizePBSVtbi.name (String?) FinalizePBSVtbi.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) FinalizeRegionalCoverage.keyfile (File?) FinalizeRegionalCoverage.name (String?) FinalizeRegionalCoverage.runtime_attr_override (RuntimeAttr?) FinalizeSniffles.keyfile (File?) FinalizeSniffles.name (String?) FinalizeSniffles.runtime_attr_override (RuntimeAttr?) FinalizeSnifflesTbi.keyfile (File?) FinalizeSnifflesTbi.name (String?) FinalizeSnifflesTbi.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeAllReads.runtime_attr_override (RuntimeAttr?) CallVariants.FixSnifflesVCF.ref_fasta_fai (File?) CallVariants.FixSnifflesVCF.runtime_attr_override (RuntimeAttr?) CallVariants.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) CallVariants.MergePBSVVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.MergeSnifflesVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.Sniffles.runtime_attr_override (RuntimeAttr?) CallVariants.SnifflesSlow.chr (String?) CallVariants.SnifflesSlow.runtime_attr_override (RuntimeAttr?) CallVariants.SubsetBam.runtime_attr_override (RuntimeAttr?) CallVariants.UnionHeadersSnifflesVCFs.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexPBSV.runtime_attr_override (RuntimeAttr?) CallVariants.ZipAndIndexSniffles.ref_fasta_fai (File?) CallVariants.ZipAndIndexSniffles.runtime_attr_override (RuntimeAttr?) coverage.ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) coverage.MosDepthOverBed.runtime_attr_override (RuntimeAttr?) coverage.NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) coverage.cov_over_region.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Call.runtime_attr_override (RuntimeAttr?) CallVariants.PBSVslow.Discover.chr (String?) CallVariants.PBSVslow.Discover.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Call.runtime_attr_override (RuntimeAttr?) CallVariants.RunPBSV.Discover.chr (String?) CallVariants.RunPBSV.Discover.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBCLRWholeGenome/#defaults","text":"call_small_variants (Boolean, default=true): whether to call small variants call_svs (Boolean, default=true): whether to call SVs CallVariants.Sniffles.min_mq (Int, default=20) CallVariants.Sniffles.min_read_length (Int, default=1000) CallVariants.Sniffles.min_read_support (Int, default=2) CallVariants.SnifflesSlow.min_mq (Int, default=20) CallVariants.SnifflesSlow.min_read_length (Int, default=1000) CallVariants.SnifflesSlow.min_read_support (Int, default=2) CallVariants.SubsetBam.prefix (String, default=\"subset\")","title":"Defaults"},{"location":"workflows/PBCLRWholeGenome/#outputs","text":"aligned_bam (File) aligned_bai (File) aligned_pbi (File) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) bed_cov_summary (File?) pbsv_vcf (File?) pbsv_tbi (File?) sniffles_vcf (File?) sniffles_tbi (File?)","title":"Outputs"},{"location":"workflows/PBCLRWholeGenome/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBFlowcell/","text":"PBFlowcell PBFlowcell description The workflow performs the alignment of an SMRT cell's worth of data to a reference. For genomic sequencing data, the workflow also optionally performs CCS correction if the data is from a CCS library but did not get corrected on-instrument. For MAS-seq transcriptome data, this workflow will determine the most likely MAS-seq model, then it will use that model to annotate, segment, and filter the CCS reads. These CCS reads will then be aligned to the reference in trascriptome alignemnt mode. Note: Currently the MAS-seq workflow separates CLR reads, but does not process them. Inputs Required LB (String, required ): the value to place in the BAM read group's LB (library) field SM (String, required ): the value to place in the BAM read group's SM field bam (File, required ): GCS path to raw subread bam dir_prefix (String, required ): directory prefix for output files experiment_type (String, required ): type of experiment run (CLR, CCS, ISOSEQ, MASSEQ) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files pbi (File, required ): GCS path to pbi index for raw subread bam ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional ccs_report_txt (File?): GCS path to CCS report txt, required if on-instrument corrected, otherwise CCS is run in this workflow for CCS libraries mas_seq_model (String?): Longbow model to use for MAS-seq data. num_shards (Int?): number of shards into which fastq files should be batched AlignReads.runtime_attr_override (RuntimeAttr?) BamToFastq.runtime_attr_override (RuntimeAttr?) CCS.runtime_attr_override (RuntimeAttr?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) ExtractCcsReads.runtime_attr_override (RuntimeAttr?) ExtractClrReads.runtime_attr_override (RuntimeAttr?) ExtractHifiReads.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) FinalizeAlignedPbi.runtime_attr_override (RuntimeAttr?) FinalizeCCSReport.name (String?) FinalizeCCSReport.runtime_attr_override (RuntimeAttr?) FinalizeCCSUnalignedBai.name (String?) FinalizeCCSUnalignedBai.runtime_attr_override (RuntimeAttr?) FinalizeCCSUnalignedBam.name (String?) FinalizeCCSUnalignedBam.runtime_attr_override (RuntimeAttr?) FinalizeCCSUnalignedPbi.runtime_attr_override (RuntimeAttr?) FinalizeFastq.runtime_attr_override (RuntimeAttr?) FinalizeFilteredCCSStatsPNGs.runtime_attr_override (RuntimeAttr?) FinalizeFilteredCCSStatsSVGs.runtime_attr_override (RuntimeAttr?) FinalizeFilteredCCSStatsSummary.name (String?) FinalizeFilteredCCSStatsSummary.runtime_attr_override (RuntimeAttr?) FinalizeLongbowAnnotatedBam.name (String?) FinalizeLongbowAnnotatedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowCorrectLog.runtime_attr_override (RuntimeAttr?) FinalizeLongbowCorrectedBam.name (String?) FinalizeLongbowCorrectedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowExtractedBam.name (String?) FinalizeLongbowExtractedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowFilterFailedBam.name (String?) FinalizeLongbowFilterFailedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowFilteredBam.name (String?) FinalizeLongbowFilteredBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowIntermediateBamIndices.runtime_attr_override (RuntimeAttr?) FinalizeLongbowIntermediateSingleCellBamIndices.runtime_attr_override (RuntimeAttr?) FinalizeLongbowSegmentedBam.name (String?) FinalizeLongbowSegmentedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowUmiAdjustmentLog.runtime_attr_override (RuntimeAttr?) FinalizeLongbowUncorrectedBam.name (String?) FinalizeLongbowUncorrectedBam.runtime_attr_override (RuntimeAttr?) FinalizeMasSeqLongbowCorrectStats.runtime_attr_override (RuntimeAttr?) FinalizeMasSeqUnprocessedCLRReads.name (String?) FinalizeMasSeqUnprocessedCLRReads.runtime_attr_override (RuntimeAttr?) FinalizeMasSeqUnprocessedCLRReadsBai.name (String?) FinalizeMasSeqUnprocessedCLRReadsBai.runtime_attr_override (RuntimeAttr?) FinalizeOverallCCSStatsPNGs.runtime_attr_override (RuntimeAttr?) FinalizeOverallCCSStatsSVGs.runtime_attr_override (RuntimeAttr?) FinalizeOverallCCSStatsSummary.name (String?) FinalizeOverallCCSStatsSummary.runtime_attr_override (RuntimeAttr?) FixMasSeqCcsReadTagsPostAlignment.runtime_attr_override (RuntimeAttr?) GetRawReadGroup.runtime_attr_override (RuntimeAttr?) GetRunInfo.runtime_attr_override (RuntimeAttr?) IndexAlignedReads.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) LongbowFilteredCCSStats.runtime_attr_override (RuntimeAttr?) LongbowOverallCCSStats.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.barcode_allow_list (File?) LongbowProcessCCS.barcode_tag (String?) LongbowProcessCCS.corrected_tag (String?) Longbow_Peek.runtime_attr_override (RuntimeAttr?) MasseqCCSBamToFastq.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) MergeAllFastqs.runtime_attr_override (RuntimeAttr?) MergeCCSReports.runtime_attr_override (RuntimeAttr?) MergeCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeLongbowAnnotatedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowCorrectedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowExtractedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowFilterFailedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowFilteredCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowSegmentedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowUncorrectableCCSBams.runtime_attr_override (RuntimeAttr?) MergeMASSeqCLRReads.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) RenameSingleCellBamTagsForMasIsoSeqV0.runtime_attr_override (RuntimeAttr?) ShardLongReads.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ10PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ12PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ15PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ5PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ7PBI.runtime_attr_override (RuntimeAttr?) SummarizeCCSReport.runtime_attr_override (RuntimeAttr?) ValidateShard.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.AggregateCorrectLogStats.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.Extract.bam_pbi (File?) LongbowProcessCCS.Extract.leading_adapter (String?) LongbowProcessCCS.Extract.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.Extract.start_offset (Int?) LongbowProcessCCS.Extract.trailing_adapter (String?) LongbowProcessCCS.t_01_Peek.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_02_Annotate.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_03_Filter.bam_pbi (File?) LongbowProcessCCS.t_03_Filter.model (String?) LongbowProcessCCS.t_03_Filter.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_04_Segment.model (String?) LongbowProcessCCS.t_04_Segment.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_05_RemoveMasSeqTruncatedReads.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_07_PadUMI.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_08_PadCBC.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_09_Correct.barcode_freq_list (File?) LongbowProcessCCS.t_09_Correct.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_10_AdjustUmiSequenceWithAdapterAlignment.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedFlagStats.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageFullDist.keyfile (File?) PerFlowcellMetrics.FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageGlobalDist.keyfile (File?) PerFlowcellMetrics.FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantized.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedDist.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionDist.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegions.keyfile (File?) PerFlowcellMetrics.FFCoverageRegions.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionsCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFDepthSummaries.keyfile (File?) PerFlowcellMetrics.FFDepthSummaries.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFYieldAligned.keyfile (File?) PerFlowcellMetrics.FFYieldAligned.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.window_size (Int?) PerFlowcellMetrics.SummarizeDepth.runtime_attr_override (RuntimeAttr?) Defaults DEBUG_MODE (Boolean, default=false): [default valued] enables debugging tasks / subworkflows (default: false) drop_per_base_N_pulse_tags (Boolean, default=true) validate_shards (Boolean, default=false) AlignMasSeqCCSReads.prefix (String, default=\"out\") AlignReads.prefix (String, default=\"out\") CCS.all (Boolean, default=true) CCS.by_strand (Boolean, default=false) CCS.kinetics (Boolean, default=false) ExtractHifiReads.prefix (String, default=\"hifi\") LongbowProcessCCS.same_barcode_per_read (Boolean, default=false) LongbowProcessCCS.shard_width (Int, default=25) MergeAllFastqs.prefix (String, default=\"merged\") ShardLongReads.num_threads (Int, default=8) ShardLongReads.prefix (String, default=\"shard\") SummarizeSubreadsPBI.qual_threshold (Int, default=0) WdlExecutionStartTimestamp.date_format (String, default=\"%Y%m%d_%H%M%S_%N\") LongbowProcessCCS.Extract.base_padding (Int, default=2) LongbowProcessCCS.Extract.num_cpus (Int, default=2) LongbowProcessCCS.t_01_Peek.n (Int, default=100) LongbowProcessCCS.t_02_Annotate.num_cpus (Int, default=8) LongbowProcessCCS.t_03_Filter.num_cpus (Int, default=2) LongbowProcessCCS.t_04_Segment.num_cpus (Int, default=2) LongbowProcessCCS.t_07_PadUMI.padding (Int, default=2) LongbowProcessCCS.t_08_PadCBC.padding (Int, default=2) LongbowProcessCCS.t_09_Correct.ccs_lev_dist_threshold (Int, default=2) LongbowProcessCCS.t_09_Correct.clr_lev_dist_threshold (Int, default=2) LongbowProcessCCS.t_10_AdjustUmiSequenceWithAdapterAlignment.existing_umi_tag (String, default=\"ZU\") LongbowProcessCCS.t_10_AdjustUmiSequenceWithAdapterAlignment.new_umi_tag (String, default=\"JX\") Outputs ccs_report (File?) ccs_zmws_input (Float?) ccs_zmws_pass_filters (Float?) ccs_zmws_fail_filters (Float?) ccs_zmws_shortcut_filters (Float?) ccs_zmws_pass_filters_pct (Float?) ccs_zmws_fail_filters_pct (Float?) ccs_zmws_shortcut_filters_pct (Float?) polymerase_read_length_mean (Float) polymerase_read_length_N50 (Float) subread_read_length_mean (Float) subread_read_length_N50 (Float) fq (File?) ccs_bam (File?) ccs_pbi (File?) aligned_bam (File) aligned_bai (File) aligned_pbi (File) num_reads (Float) num_bases (Float) raw_est_fold_cov (Float) read_length_mean (Float) read_length_median (Float) read_length_stdev (Float) read_length_N50 (Float) read_qual_mean (Float) read_qual_median (Float) num_reads_Q5 (Float) num_reads_Q7 (Float) num_reads_Q10 (Float) num_reads_Q12 (Float) num_reads_Q15 (Float) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) library_type (String) longbow_overall_ccs_stats_plots_png (String?) longbow_overall_ccs_stats_plots_svg (String?) longbow_overall_ccs_stats (File?) longbow_filtered_ccs_stats_plots_png (String?) longbow_filtered_ccs_stats_plots_svg (String?) longbow_filtered_ccs_stats (File?) Dot Diagram","title":"PBFlowcell"},{"location":"workflows/PBFlowcell/#pbflowcell","text":"","title":"PBFlowcell"},{"location":"workflows/PBFlowcell/#pbflowcell_1","text":"description The workflow performs the alignment of an SMRT cell's worth of data to a reference. For genomic sequencing data, the workflow also optionally performs CCS correction if the data is from a CCS library but did not get corrected on-instrument. For MAS-seq transcriptome data, this workflow will determine the most likely MAS-seq model, then it will use that model to annotate, segment, and filter the CCS reads. These CCS reads will then be aligned to the reference in trascriptome alignemnt mode. Note: Currently the MAS-seq workflow separates CLR reads, but does not process them.","title":"PBFlowcell"},{"location":"workflows/PBFlowcell/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBFlowcell/#required","text":"LB (String, required ): the value to place in the BAM read group's LB (library) field SM (String, required ): the value to place in the BAM read group's SM field bam (File, required ): GCS path to raw subread bam dir_prefix (String, required ): directory prefix for output files experiment_type (String, required ): type of experiment run (CLR, CCS, ISOSEQ, MASSEQ) gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files pbi (File, required ): GCS path to pbi index for raw subread bam ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/PBFlowcell/#optional","text":"ccs_report_txt (File?): GCS path to CCS report txt, required if on-instrument corrected, otherwise CCS is run in this workflow for CCS libraries mas_seq_model (String?): Longbow model to use for MAS-seq data. num_shards (Int?): number of shards into which fastq files should be batched AlignReads.runtime_attr_override (RuntimeAttr?) BamToFastq.runtime_attr_override (RuntimeAttr?) CCS.runtime_attr_override (RuntimeAttr?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) ExtractCcsReads.runtime_attr_override (RuntimeAttr?) ExtractClrReads.runtime_attr_override (RuntimeAttr?) ExtractHifiReads.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBai.name (String?) FinalizeAlignedBai.runtime_attr_override (RuntimeAttr?) FinalizeAlignedBam.name (String?) FinalizeAlignedBam.runtime_attr_override (RuntimeAttr?) FinalizeAlignedPbi.runtime_attr_override (RuntimeAttr?) FinalizeCCSReport.name (String?) FinalizeCCSReport.runtime_attr_override (RuntimeAttr?) FinalizeCCSUnalignedBai.name (String?) FinalizeCCSUnalignedBai.runtime_attr_override (RuntimeAttr?) FinalizeCCSUnalignedBam.name (String?) FinalizeCCSUnalignedBam.runtime_attr_override (RuntimeAttr?) FinalizeCCSUnalignedPbi.runtime_attr_override (RuntimeAttr?) FinalizeFastq.runtime_attr_override (RuntimeAttr?) FinalizeFilteredCCSStatsPNGs.runtime_attr_override (RuntimeAttr?) FinalizeFilteredCCSStatsSVGs.runtime_attr_override (RuntimeAttr?) FinalizeFilteredCCSStatsSummary.name (String?) FinalizeFilteredCCSStatsSummary.runtime_attr_override (RuntimeAttr?) FinalizeLongbowAnnotatedBam.name (String?) FinalizeLongbowAnnotatedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowCorrectLog.runtime_attr_override (RuntimeAttr?) FinalizeLongbowCorrectedBam.name (String?) FinalizeLongbowCorrectedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowExtractedBam.name (String?) FinalizeLongbowExtractedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowFilterFailedBam.name (String?) FinalizeLongbowFilterFailedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowFilteredBam.name (String?) FinalizeLongbowFilteredBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowIntermediateBamIndices.runtime_attr_override (RuntimeAttr?) FinalizeLongbowIntermediateSingleCellBamIndices.runtime_attr_override (RuntimeAttr?) FinalizeLongbowSegmentedBam.name (String?) FinalizeLongbowSegmentedBam.runtime_attr_override (RuntimeAttr?) FinalizeLongbowUmiAdjustmentLog.runtime_attr_override (RuntimeAttr?) FinalizeLongbowUncorrectedBam.name (String?) FinalizeLongbowUncorrectedBam.runtime_attr_override (RuntimeAttr?) FinalizeMasSeqLongbowCorrectStats.runtime_attr_override (RuntimeAttr?) FinalizeMasSeqUnprocessedCLRReads.name (String?) FinalizeMasSeqUnprocessedCLRReads.runtime_attr_override (RuntimeAttr?) FinalizeMasSeqUnprocessedCLRReadsBai.name (String?) FinalizeMasSeqUnprocessedCLRReadsBai.runtime_attr_override (RuntimeAttr?) FinalizeOverallCCSStatsPNGs.runtime_attr_override (RuntimeAttr?) FinalizeOverallCCSStatsSVGs.runtime_attr_override (RuntimeAttr?) FinalizeOverallCCSStatsSummary.name (String?) FinalizeOverallCCSStatsSummary.runtime_attr_override (RuntimeAttr?) FixMasSeqCcsReadTagsPostAlignment.runtime_attr_override (RuntimeAttr?) GetRawReadGroup.runtime_attr_override (RuntimeAttr?) GetRunInfo.runtime_attr_override (RuntimeAttr?) IndexAlignedReads.runtime_attr_override (RuntimeAttr?) IndexCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) LongbowFilteredCCSStats.runtime_attr_override (RuntimeAttr?) LongbowOverallCCSStats.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.barcode_allow_list (File?) LongbowProcessCCS.barcode_tag (String?) LongbowProcessCCS.corrected_tag (String?) Longbow_Peek.runtime_attr_override (RuntimeAttr?) MasseqCCSBamToFastq.runtime_attr_override (RuntimeAttr?) MergeAlignedReads.runtime_attr_override (RuntimeAttr?) MergeAllFastqs.runtime_attr_override (RuntimeAttr?) MergeCCSReports.runtime_attr_override (RuntimeAttr?) MergeCCSUnalignedReads.runtime_attr_override (RuntimeAttr?) MergeLongbowAnnotatedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowCorrectedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowExtractedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowFilterFailedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowFilteredCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowSegmentedCCSBams.runtime_attr_override (RuntimeAttr?) MergeLongbowUncorrectableCCSBams.runtime_attr_override (RuntimeAttr?) MergeMASSeqCLRReads.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) RenameSingleCellBamTagsForMasIsoSeqV0.runtime_attr_override (RuntimeAttr?) ShardLongReads.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ10PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ12PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ15PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ5PBI.runtime_attr_override (RuntimeAttr?) SummarizeAlignedQ7PBI.runtime_attr_override (RuntimeAttr?) SummarizeCCSReport.runtime_attr_override (RuntimeAttr?) ValidateShard.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.AggregateCorrectLogStats.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.Extract.bam_pbi (File?) LongbowProcessCCS.Extract.leading_adapter (String?) LongbowProcessCCS.Extract.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.Extract.start_offset (Int?) LongbowProcessCCS.Extract.trailing_adapter (String?) LongbowProcessCCS.t_01_Peek.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_02_Annotate.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_03_Filter.bam_pbi (File?) LongbowProcessCCS.t_03_Filter.model (String?) LongbowProcessCCS.t_03_Filter.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_04_Segment.model (String?) LongbowProcessCCS.t_04_Segment.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_05_RemoveMasSeqTruncatedReads.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_07_PadUMI.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_08_PadCBC.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_09_Correct.barcode_freq_list (File?) LongbowProcessCCS.t_09_Correct.runtime_attr_override (RuntimeAttr?) LongbowProcessCCS.t_10_AdjustUmiSequenceWithAdapterAlignment.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedFlagStats.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.AlignedReadMetrics.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageFullDist.keyfile (File?) PerFlowcellMetrics.FFCoverageFullDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageGlobalDist.keyfile (File?) PerFlowcellMetrics.FFCoverageGlobalDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantized.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantized.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageQuantizedDist.keyfile (File?) PerFlowcellMetrics.FFCoverageQuantizedDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionDist.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionDist.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegions.keyfile (File?) PerFlowcellMetrics.FFCoverageRegions.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFCoverageRegionsCsi.keyfile (File?) PerFlowcellMetrics.FFCoverageRegionsCsi.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFDepthSummaries.keyfile (File?) PerFlowcellMetrics.FFDepthSummaries.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.FFYieldAligned.keyfile (File?) PerFlowcellMetrics.FFYieldAligned.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.runtime_attr_override (RuntimeAttr?) PerFlowcellMetrics.MosDepth.window_size (Int?) PerFlowcellMetrics.SummarizeDepth.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBFlowcell/#defaults","text":"DEBUG_MODE (Boolean, default=false): [default valued] enables debugging tasks / subworkflows (default: false) drop_per_base_N_pulse_tags (Boolean, default=true) validate_shards (Boolean, default=false) AlignMasSeqCCSReads.prefix (String, default=\"out\") AlignReads.prefix (String, default=\"out\") CCS.all (Boolean, default=true) CCS.by_strand (Boolean, default=false) CCS.kinetics (Boolean, default=false) ExtractHifiReads.prefix (String, default=\"hifi\") LongbowProcessCCS.same_barcode_per_read (Boolean, default=false) LongbowProcessCCS.shard_width (Int, default=25) MergeAllFastqs.prefix (String, default=\"merged\") ShardLongReads.num_threads (Int, default=8) ShardLongReads.prefix (String, default=\"shard\") SummarizeSubreadsPBI.qual_threshold (Int, default=0) WdlExecutionStartTimestamp.date_format (String, default=\"%Y%m%d_%H%M%S_%N\") LongbowProcessCCS.Extract.base_padding (Int, default=2) LongbowProcessCCS.Extract.num_cpus (Int, default=2) LongbowProcessCCS.t_01_Peek.n (Int, default=100) LongbowProcessCCS.t_02_Annotate.num_cpus (Int, default=8) LongbowProcessCCS.t_03_Filter.num_cpus (Int, default=2) LongbowProcessCCS.t_04_Segment.num_cpus (Int, default=2) LongbowProcessCCS.t_07_PadUMI.padding (Int, default=2) LongbowProcessCCS.t_08_PadCBC.padding (Int, default=2) LongbowProcessCCS.t_09_Correct.ccs_lev_dist_threshold (Int, default=2) LongbowProcessCCS.t_09_Correct.clr_lev_dist_threshold (Int, default=2) LongbowProcessCCS.t_10_AdjustUmiSequenceWithAdapterAlignment.existing_umi_tag (String, default=\"ZU\") LongbowProcessCCS.t_10_AdjustUmiSequenceWithAdapterAlignment.new_umi_tag (String, default=\"JX\")","title":"Defaults"},{"location":"workflows/PBFlowcell/#outputs","text":"ccs_report (File?) ccs_zmws_input (Float?) ccs_zmws_pass_filters (Float?) ccs_zmws_fail_filters (Float?) ccs_zmws_shortcut_filters (Float?) ccs_zmws_pass_filters_pct (Float?) ccs_zmws_fail_filters_pct (Float?) ccs_zmws_shortcut_filters_pct (Float?) polymerase_read_length_mean (Float) polymerase_read_length_N50 (Float) subread_read_length_mean (Float) subread_read_length_N50 (Float) fq (File?) ccs_bam (File?) ccs_pbi (File?) aligned_bam (File) aligned_bai (File) aligned_pbi (File) num_reads (Float) num_bases (Float) raw_est_fold_cov (Float) read_length_mean (Float) read_length_median (Float) read_length_stdev (Float) read_length_N50 (Float) read_qual_mean (Float) read_qual_median (Float) num_reads_Q5 (Float) num_reads_Q7 (Float) num_reads_Q10 (Float) num_reads_Q12 (Float) num_reads_Q15 (Float) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) library_type (String) longbow_overall_ccs_stats_plots_png (String?) longbow_overall_ccs_stats_plots_svg (String?) longbow_overall_ccs_stats (File?) longbow_filtered_ccs_stats_plots_png (String?) longbow_filtered_ccs_stats_plots_svg (String?) longbow_filtered_ccs_stats (File?)","title":"Outputs"},{"location":"workflows/PBFlowcell/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBMASIsoSeqDemultiplex/","text":"PBMASIsoSeqDemultiplex PBMASIsoSeqDemultiplex description Demultiplex a BAM file based on the UMI tag Inputs Required bam (File, required ): GCS path to BAM file gcs_out_root_dir (String, required ): GCS bucket to store the demultiplexed BAMs participant_name (String, required ): name of the participant from whom these samples were obtained Optional Demultiplex.runtime_attr_override (RuntimeAttr?) FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) Index.runtime_attr_override (RuntimeAttr?) PBIndex.runtime_attr_override (RuntimeAttr?) Defaults tag (String, default=\"CB\"): BAM tag on which to demultiplex Outputs demuxed_bams (Array[File]) demuxed_bais (Array[File]) demuxed_pbis (Array[File]) Dot Diagram","title":"PBMASIsoSeqDemultiplex"},{"location":"workflows/PBMASIsoSeqDemultiplex/#pbmasisoseqdemultiplex","text":"","title":"PBMASIsoSeqDemultiplex"},{"location":"workflows/PBMASIsoSeqDemultiplex/#pbmasisoseqdemultiplex_1","text":"description Demultiplex a BAM file based on the UMI tag","title":"PBMASIsoSeqDemultiplex"},{"location":"workflows/PBMASIsoSeqDemultiplex/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBMASIsoSeqDemultiplex/#required","text":"bam (File, required ): GCS path to BAM file gcs_out_root_dir (String, required ): GCS bucket to store the demultiplexed BAMs participant_name (String, required ): name of the participant from whom these samples were obtained","title":"Required"},{"location":"workflows/PBMASIsoSeqDemultiplex/#optional","text":"Demultiplex.runtime_attr_override (RuntimeAttr?) FinalizeBai.keyfile (File?) FinalizeBai.runtime_attr_override (RuntimeAttr?) FinalizeBam.keyfile (File?) FinalizeBam.runtime_attr_override (RuntimeAttr?) FinalizePbi.keyfile (File?) FinalizePbi.runtime_attr_override (RuntimeAttr?) Index.runtime_attr_override (RuntimeAttr?) PBIndex.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBMASIsoSeqDemultiplex/#defaults","text":"tag (String, default=\"CB\"): BAM tag on which to demultiplex","title":"Defaults"},{"location":"workflows/PBMASIsoSeqDemultiplex/#outputs","text":"demuxed_bams (Array[File]) demuxed_bais (Array[File]) demuxed_pbis (Array[File])","title":"Outputs"},{"location":"workflows/PBMASIsoSeqDemultiplex/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBMASIsoSeqQuantify/","text":"PBMASIsoSeqQuantify PBMASIsoSeqQuantify description A workflow that performs processing of MAS-ISO-seq data on a single sample from one or more flow cells. The workflow merges multiple samples into a single BAM prior to processing. Quantifies RNA isoform expression from given extracted, aligned, UMI- and CBC-annotated MAS-ISO-seq reads. Inputs Required aligned_ccs_bais (Array[File], required ): GCS path to aligned MAS-ISO-seq CCS BAM file indices aligned_ccs_bams (Array[File], required ): GCS path to aligned MAS-ISO-seq CCS BAM files gcs_out_root_dir (String, required ): GCS bucket to store the corrected/uncorrected reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_gtf (File, required ): GTF file to use for quantification ref_map_file (File, required ): table indicating reference sequence and auxillary file locations Optional interval_overlap_name (String?): [optional] The name of the annotation to add to the final anndata object for the column containing the overlap flag for transcripts that overlap intervals in the given intervals_of_interest file. intervals_of_interest (File?): [optional] An interval list file containing intervals to mark in the final anndata object as overlapping the transcripts. t_02_MergeAllReads.runtime_attr_override (RuntimeAttr?) t_03_AlignmentFilterArrayElements.runtime_attr_override (RuntimeAttr?) t_03_RestoreSingleCellBamTagsForMasIsoSeqV0.runtime_attr_override (RuntimeAttr?) t_04_IndexFilteredReads.runtime_attr_override (RuntimeAttr?) t_05_Stringtie2_Quantify.runtime_attr_override (RuntimeAttr?) t_06_Stringtie2_ExtractTranscriptSequences.runtime_attr_override (RuntimeAttr?) t_07_Stringtie2_CompareTranscriptomes.runtime_attr_override (RuntimeAttr?) t_08_GffCompareStringtie2toGencode.runtime_attr_override (RuntimeAttr?) t_09_GffCompareGencodetoStringtie2.runtime_attr_override (RuntimeAttr?) t_10_RestoreOriginalReadNames.runtime_attr_override (RuntimeAttr?) t_11_MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) t_12_SubsetBam.runtime_attr_override (RuntimeAttr?) t_13_ConvertSplicedBamToGff.runtime_attr_override (RuntimeAttr?) t_14_GffCompareStringtie2toMasSeqReads.runtime_attr_override (RuntimeAttr?) t_15_GffCompareGencodetoMasSeqReads.runtime_attr_override (RuntimeAttr?) t_16_QuantifyGffComparison.runtime_attr_override (RuntimeAttr?) t_17_CombineEqClassFiles.runtime_attr_override (RuntimeAttr?) t_18_CopyEqClassInfoToTag.runtime_attr_override (RuntimeAttr?) t_19_CorrectUmisWithSetCover.runtime_attr_override (RuntimeAttr?) t_20_CreateCCSCountMatrixFromAnnotatedBam.runtime_attr_override (RuntimeAttr?) t_22_FinalizeBam.runtime_attr_override (RuntimeAttr?) t_23_FinalizeBai.runtime_attr_override (RuntimeAttr?) t_24_FinalizeEqClassesGeneDefs.name (String?) t_24_FinalizeEqClassesGeneDefs.runtime_attr_override (RuntimeAttr?) t_25_FinalizeEqClassesGeneAssignments.name (String?) t_25_FinalizeEqClassesGeneAssignments.runtime_attr_override (RuntimeAttr?) t_26_FinalizeEqClassesTranscriptDefs.name (String?) t_26_FinalizeEqClassesTranscriptDefs.runtime_attr_override (RuntimeAttr?) t_27_FinalizeEqClassesTranscriptAssignments.name (String?) t_27_FinalizeEqClassesTranscriptAssignments.runtime_attr_override (RuntimeAttr?) t_28_FinalizeCCSCountMatrix.name (String?) t_28_FinalizeCCSCountMatrix.runtime_attr_override (RuntimeAttr?) t_29_FinalizeCCSCountMatrixAnnData.name (String?) t_29_FinalizeCCSCountMatrixAnnData.runtime_attr_override (RuntimeAttr?) t_30_FinalizeCCSRawQuantPickles.runtime_attr_override (RuntimeAttr?) t_31_FinalizeRefAndSt2Comparisons.runtime_attr_override (RuntimeAttr?) t_32_FinalizeTxAndGeneAssignmentsByContig.runtime_attr_override (RuntimeAttr?) t_33_FinalizeIntermediateAnnotatedArrayElements.runtime_attr_override (RuntimeAttr?) t_34_FinalizeAnnotatedArrayElements.runtime_attr_override (RuntimeAttr?) t_35_FinalizeDiscoveredTranscriptome.runtime_attr_override (RuntimeAttr?) Defaults DEBUG_MODE (Boolean, default=false): [default valued] enables debugging tasks / subworkflows (default: false) t_01_WdlExecutionStartTimestamp.date_format (String, default=\"%Y%m%d_%H%M%S_%N\") t_03_AlignmentFilterArrayElements.maxEndClipping (Int, default=1000) t_03_AlignmentFilterArrayElements.maxReadLength (Int, default=15000) t_12_SubsetBam.prefix (String, default=\"subset\") t_18_CopyEqClassInfoToTag.eq_class_tag (String, default=\"eq\") t_18_CopyEqClassInfoToTag.gene_tag (String, default=\"XG\") t_19_CorrectUmisWithSetCover.is_extracted (Boolean, default=true) t_21_CreateCCSCountMatrixAnndataFromEqClasses.force_anndata_gencode_overwrite (Boolean, default=false) Outputs merged_input_bam (File) merged_input_bai (File) gene_eq_class_defs (File) gene_eq_class_assignments (File) transcript_eq_class_defs (File) transcript_eq_class_assignments (File) raw_count_matrix (File) count_matrix_anndata (File) raw_quant_pickle_gcs_dir (String) ref_stringtie2_comparison_gcs_dir (String) tx_gene_assignments_gcs_dir (Array[String]) intermediate_read_gcs_dir (String) annotated_array_element_gcs_dir (String) discovered_transcriptome_gcs_dir (String) Dot Diagram","title":"PBMASIsoSeqQuantify"},{"location":"workflows/PBMASIsoSeqQuantify/#pbmasisoseqquantify","text":"","title":"PBMASIsoSeqQuantify"},{"location":"workflows/PBMASIsoSeqQuantify/#pbmasisoseqquantify_1","text":"description A workflow that performs processing of MAS-ISO-seq data on a single sample from one or more flow cells. The workflow merges multiple samples into a single BAM prior to processing. Quantifies RNA isoform expression from given extracted, aligned, UMI- and CBC-annotated MAS-ISO-seq reads.","title":"PBMASIsoSeqQuantify"},{"location":"workflows/PBMASIsoSeqQuantify/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBMASIsoSeqQuantify/#required","text":"aligned_ccs_bais (Array[File], required ): GCS path to aligned MAS-ISO-seq CCS BAM file indices aligned_ccs_bams (Array[File], required ): GCS path to aligned MAS-ISO-seq CCS BAM files gcs_out_root_dir (String, required ): GCS bucket to store the corrected/uncorrected reads, variants, and metrics files participant_name (String, required ): name of the participant from whom these samples were obtained ref_gtf (File, required ): GTF file to use for quantification ref_map_file (File, required ): table indicating reference sequence and auxillary file locations","title":"Required"},{"location":"workflows/PBMASIsoSeqQuantify/#optional","text":"interval_overlap_name (String?): [optional] The name of the annotation to add to the final anndata object for the column containing the overlap flag for transcripts that overlap intervals in the given intervals_of_interest file. intervals_of_interest (File?): [optional] An interval list file containing intervals to mark in the final anndata object as overlapping the transcripts. t_02_MergeAllReads.runtime_attr_override (RuntimeAttr?) t_03_AlignmentFilterArrayElements.runtime_attr_override (RuntimeAttr?) t_03_RestoreSingleCellBamTagsForMasIsoSeqV0.runtime_attr_override (RuntimeAttr?) t_04_IndexFilteredReads.runtime_attr_override (RuntimeAttr?) t_05_Stringtie2_Quantify.runtime_attr_override (RuntimeAttr?) t_06_Stringtie2_ExtractTranscriptSequences.runtime_attr_override (RuntimeAttr?) t_07_Stringtie2_CompareTranscriptomes.runtime_attr_override (RuntimeAttr?) t_08_GffCompareStringtie2toGencode.runtime_attr_override (RuntimeAttr?) t_09_GffCompareGencodetoStringtie2.runtime_attr_override (RuntimeAttr?) t_10_RestoreOriginalReadNames.runtime_attr_override (RuntimeAttr?) t_11_MakeChrIntervalList.runtime_attr_override (RuntimeAttr?) t_12_SubsetBam.runtime_attr_override (RuntimeAttr?) t_13_ConvertSplicedBamToGff.runtime_attr_override (RuntimeAttr?) t_14_GffCompareStringtie2toMasSeqReads.runtime_attr_override (RuntimeAttr?) t_15_GffCompareGencodetoMasSeqReads.runtime_attr_override (RuntimeAttr?) t_16_QuantifyGffComparison.runtime_attr_override (RuntimeAttr?) t_17_CombineEqClassFiles.runtime_attr_override (RuntimeAttr?) t_18_CopyEqClassInfoToTag.runtime_attr_override (RuntimeAttr?) t_19_CorrectUmisWithSetCover.runtime_attr_override (RuntimeAttr?) t_20_CreateCCSCountMatrixFromAnnotatedBam.runtime_attr_override (RuntimeAttr?) t_22_FinalizeBam.runtime_attr_override (RuntimeAttr?) t_23_FinalizeBai.runtime_attr_override (RuntimeAttr?) t_24_FinalizeEqClassesGeneDefs.name (String?) t_24_FinalizeEqClassesGeneDefs.runtime_attr_override (RuntimeAttr?) t_25_FinalizeEqClassesGeneAssignments.name (String?) t_25_FinalizeEqClassesGeneAssignments.runtime_attr_override (RuntimeAttr?) t_26_FinalizeEqClassesTranscriptDefs.name (String?) t_26_FinalizeEqClassesTranscriptDefs.runtime_attr_override (RuntimeAttr?) t_27_FinalizeEqClassesTranscriptAssignments.name (String?) t_27_FinalizeEqClassesTranscriptAssignments.runtime_attr_override (RuntimeAttr?) t_28_FinalizeCCSCountMatrix.name (String?) t_28_FinalizeCCSCountMatrix.runtime_attr_override (RuntimeAttr?) t_29_FinalizeCCSCountMatrixAnnData.name (String?) t_29_FinalizeCCSCountMatrixAnnData.runtime_attr_override (RuntimeAttr?) t_30_FinalizeCCSRawQuantPickles.runtime_attr_override (RuntimeAttr?) t_31_FinalizeRefAndSt2Comparisons.runtime_attr_override (RuntimeAttr?) t_32_FinalizeTxAndGeneAssignmentsByContig.runtime_attr_override (RuntimeAttr?) t_33_FinalizeIntermediateAnnotatedArrayElements.runtime_attr_override (RuntimeAttr?) t_34_FinalizeAnnotatedArrayElements.runtime_attr_override (RuntimeAttr?) t_35_FinalizeDiscoveredTranscriptome.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBMASIsoSeqQuantify/#defaults","text":"DEBUG_MODE (Boolean, default=false): [default valued] enables debugging tasks / subworkflows (default: false) t_01_WdlExecutionStartTimestamp.date_format (String, default=\"%Y%m%d_%H%M%S_%N\") t_03_AlignmentFilterArrayElements.maxEndClipping (Int, default=1000) t_03_AlignmentFilterArrayElements.maxReadLength (Int, default=15000) t_12_SubsetBam.prefix (String, default=\"subset\") t_18_CopyEqClassInfoToTag.eq_class_tag (String, default=\"eq\") t_18_CopyEqClassInfoToTag.gene_tag (String, default=\"XG\") t_19_CorrectUmisWithSetCover.is_extracted (Boolean, default=true) t_21_CreateCCSCountMatrixAnndataFromEqClasses.force_anndata_gencode_overwrite (Boolean, default=false)","title":"Defaults"},{"location":"workflows/PBMASIsoSeqQuantify/#outputs","text":"merged_input_bam (File) merged_input_bai (File) gene_eq_class_defs (File) gene_eq_class_assignments (File) transcript_eq_class_defs (File) transcript_eq_class_assignments (File) raw_count_matrix (File) count_matrix_anndata (File) raw_quant_pickle_gcs_dir (String) ref_stringtie2_comparison_gcs_dir (String) tx_gene_assignments_gcs_dir (Array[String]) intermediate_read_gcs_dir (String) annotated_array_element_gcs_dir (String) discovered_transcriptome_gcs_dir (String)","title":"Outputs"},{"location":"workflows/PBMASIsoSeqQuantify/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/PBSV/","text":"PBSV RunPBSV Inputs Required bai (File, required ) bam (File, required ) is_ccs (Boolean, required ): if input BAM is CCS reads prefix (String, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) zones (String, required ) Optional tandem_repeat_bed (File?) Call.runtime_attr_override (RuntimeAttr?) Discover.chr (String?) Discover.runtime_attr_override (RuntimeAttr?) Outputs vcf (File) Dot Diagram","title":"PBSV"},{"location":"workflows/PBSV/#pbsv","text":"","title":"PBSV"},{"location":"workflows/PBSV/#runpbsv","text":"","title":"RunPBSV"},{"location":"workflows/PBSV/#inputs","text":"","title":"Inputs"},{"location":"workflows/PBSV/#required","text":"bai (File, required ) bam (File, required ) is_ccs (Boolean, required ): if input BAM is CCS reads prefix (String, required ) ref_fasta (File, required ) ref_fasta_fai (File, required ) zones (String, required )","title":"Required"},{"location":"workflows/PBSV/#optional","text":"tandem_repeat_bed (File?) Call.runtime_attr_override (RuntimeAttr?) Discover.chr (String?) Discover.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/PBSV/#outputs","text":"vcf (File)","title":"Outputs"},{"location":"workflows/PBSV/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/SampleLevelAlignedMetrics/","text":"SampleLevelAlignedMetrics SampleLevelAlignedMetrics description A utility (sub-)workflow to compute coverage on sample-leve BAM, and optionally over a provided BED file Inputs Required aligned_bai (File, required ) aligned_bam (File, required ) ref_fasta (File, required ) Optional bed_to_compute_coverage (File?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) MosDepthOverBed.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) cov_over_region.runtime_attr_override (RuntimeAttr?) Outputs bed_cov_summary (File?) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) reads_stats (Map[String,Float]) Dot Diagram","title":"SampleLevelAlignedMetrics"},{"location":"workflows/SampleLevelAlignedMetrics/#samplelevelalignedmetrics","text":"","title":"SampleLevelAlignedMetrics"},{"location":"workflows/SampleLevelAlignedMetrics/#samplelevelalignedmetrics_1","text":"description A utility (sub-)workflow to compute coverage on sample-leve BAM, and optionally over a provided BED file","title":"SampleLevelAlignedMetrics"},{"location":"workflows/SampleLevelAlignedMetrics/#inputs","text":"","title":"Inputs"},{"location":"workflows/SampleLevelAlignedMetrics/#required","text":"aligned_bai (File, required ) aligned_bam (File, required ) ref_fasta (File, required )","title":"Required"},{"location":"workflows/SampleLevelAlignedMetrics/#optional","text":"bed_to_compute_coverage (File?) ComputeGenomeLength.runtime_attr_override (RuntimeAttr?) MosDepthOverBed.runtime_attr_override (RuntimeAttr?) NanoPlotFromBam.runtime_attr_override (RuntimeAttr?) cov_over_region.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/SampleLevelAlignedMetrics/#outputs","text":"bed_cov_summary (File?) aligned_num_reads (Float) aligned_num_bases (Float) aligned_frac_bases (Float) aligned_est_fold_cov (Float) aligned_read_length_mean (Float) aligned_read_length_median (Float) aligned_read_length_stdev (Float) aligned_read_length_N50 (Float) average_identity (Float) median_identity (Float) reads_stats (Map[String,Float])","title":"Outputs"},{"location":"workflows/SampleLevelAlignedMetrics/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/Sniffles2/","text":"Sniffles2 Sniffles2 description This workflow calls SV candidates using Sniffles2 population mode. Inputs Required prefix (String, required ): prefix for output files sampleBAIs (Array[File], required ): GCS paths to aligned BAM files indices from multiple samples sampleBAMs (Array[File], required ): GCS paths to aligned BAM files from multiple samples sampleIDs (Array[String], required ): matching sample IDs of the BAMs Optional MergeCall.runtime_attr_override (RuntimeAttr?) SampleSV.runtime_attr_override (RuntimeAttr?) Defaults minsvlen (Int, default=50): Minimum SV length in bp Outputs single_snf (Array[File]) multisample_vcf (File) Dot Diagram","title":"Sniffles2"},{"location":"workflows/Sniffles2/#sniffles2","text":"","title":"Sniffles2"},{"location":"workflows/Sniffles2/#sniffles2_1","text":"description This workflow calls SV candidates using Sniffles2 population mode.","title":"Sniffles2"},{"location":"workflows/Sniffles2/#inputs","text":"","title":"Inputs"},{"location":"workflows/Sniffles2/#required","text":"prefix (String, required ): prefix for output files sampleBAIs (Array[File], required ): GCS paths to aligned BAM files indices from multiple samples sampleBAMs (Array[File], required ): GCS paths to aligned BAM files from multiple samples sampleIDs (Array[String], required ): matching sample IDs of the BAMs","title":"Required"},{"location":"workflows/Sniffles2/#optional","text":"MergeCall.runtime_attr_override (RuntimeAttr?) SampleSV.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/Sniffles2/#defaults","text":"minsvlen (Int, default=50): Minimum SV length in bp","title":"Defaults"},{"location":"workflows/Sniffles2/#outputs","text":"single_snf (Array[File]) multisample_vcf (File)","title":"Outputs"},{"location":"workflows/Sniffles2/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/TrioBinChildLongReads/","text":"TrioBinChildLongReads TrioBinChildLongReads description A workflow that performs trio-binning of child long reads given parental (short) reads. Based on the trio-canu publication: De novo assembly of haplotype-resolved genomes with trio binning https://www.nature.com/articles/nbt.4277 We divide the workflow into two parts: - part one: collect k-mer stats given parental (short) reads - part two: given the k-mer stats database from part one, classify child long reads Inputs Required child_long_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of child long reads father_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of paternal origin genome_size (String, required ): an esimate on genome size of the specicies (affects k-value picking) long_read_platform (String, required ): platform of long read sequencing; currently only one of [pacbio-raw, nanopore-raw] is supported mother_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of maternal origin vm_local_monitoring_script (File, required ): GCS file holding a resouce monitoring script that runs locally and collects info for a very specific purpose workdir_name (String, required ): name of working directory Optional kmerSize (Int?): [optional] force specifying k-value in collecting k-mer stats on parents run_with_debug (Boolean?): [optional] whether to run in debug mode (takes significantly more disk space and more logs); defaults to false AssignChildLongReads.runtime_attr_override (RuntimeAttr?) CollectParentsKmerStats.MerylCount.runtime_attr_override (RuntimeAttr?) CollectParentsKmerStats.MerylMergeAndSubtract.runtime_attr_override (RuntimeAttr?) CollectParentsKmerStats.ParentalReadsRepartitionAndMerylConfigure.runtime_attr_override (RuntimeAttr?) Defaults child_read_assign_memoryG_est (Int, default=32): [default-valued] estimate on how many GB memory to allocate to the child longread classification step child_read_assign_threads_est (Int, default=36): [default-valued] estimate on how many threads to allocate to the child longread classification step meryl_operations_threads_est (Int, default=8): [default-valued] estimate on how many threads to allocate to k-mer stats collection step Outputs reads_assigned_to_father (File) reads_assigned_to_mother (File) unassigned_reads (File) Dot Diagram","title":"TrioBinChildLongReads"},{"location":"workflows/TrioBinChildLongReads/#triobinchildlongreads","text":"","title":"TrioBinChildLongReads"},{"location":"workflows/TrioBinChildLongReads/#triobinchildlongreads_1","text":"description A workflow that performs trio-binning of child long reads given parental (short) reads. Based on the trio-canu publication: De novo assembly of haplotype-resolved genomes with trio binning https://www.nature.com/articles/nbt.4277 We divide the workflow into two parts: - part one: collect k-mer stats given parental (short) reads - part two: given the k-mer stats database from part one, classify child long reads","title":"TrioBinChildLongReads"},{"location":"workflows/TrioBinChildLongReads/#inputs","text":"","title":"Inputs"},{"location":"workflows/TrioBinChildLongReads/#required","text":"child_long_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of child long reads father_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of paternal origin genome_size (String, required ): an esimate on genome size of the specicies (affects k-value picking) long_read_platform (String, required ): platform of long read sequencing; currently only one of [pacbio-raw, nanopore-raw] is supported mother_short_reads_bucket (String, required ): GCS bucket path holding FASTA/FASTQ of (short) reads of maternal origin vm_local_monitoring_script (File, required ): GCS file holding a resouce monitoring script that runs locally and collects info for a very specific purpose workdir_name (String, required ): name of working directory","title":"Required"},{"location":"workflows/TrioBinChildLongReads/#optional","text":"kmerSize (Int?): [optional] force specifying k-value in collecting k-mer stats on parents run_with_debug (Boolean?): [optional] whether to run in debug mode (takes significantly more disk space and more logs); defaults to false AssignChildLongReads.runtime_attr_override (RuntimeAttr?) CollectParentsKmerStats.MerylCount.runtime_attr_override (RuntimeAttr?) CollectParentsKmerStats.MerylMergeAndSubtract.runtime_attr_override (RuntimeAttr?) CollectParentsKmerStats.ParentalReadsRepartitionAndMerylConfigure.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/TrioBinChildLongReads/#defaults","text":"child_read_assign_memoryG_est (Int, default=32): [default-valued] estimate on how many GB memory to allocate to the child longread classification step child_read_assign_threads_est (Int, default=36): [default-valued] estimate on how many threads to allocate to the child longread classification step meryl_operations_threads_est (Int, default=8): [default-valued] estimate on how many threads to allocate to k-mer stats collection step","title":"Defaults"},{"location":"workflows/TrioBinChildLongReads/#outputs","text":"reads_assigned_to_father (File) reads_assigned_to_mother (File) unassigned_reads (File)","title":"Outputs"},{"location":"workflows/TrioBinChildLongReads/#dot-diagram","text":"","title":"Dot Diagram"},{"location":"workflows/VerifyFingerprint/","text":"VerifyFingerprint VerifyFingerprint description A workflow to check correctness of metadata on a flowcell, by genotyping it's BAM generated with its metadata, against a 'truth' genotyped VCF. Inputs Required aligned_bai (File, required ) aligned_bam (File, required ): GCS path to aligned BAM file, supposed to be of the same sample as from the fingerprinting VCF collaborator_participant_id (String, required ): Collaborator participant ID collaborator_smid (String, required ): Collaborator sample ID expt_type (String, required ): There will be special treatment for 'CLR' data (minimum base quality for bases used when computing a fingerprint) fingerprint_store (String, required ): GS path to where all known fingerprinting GT'ed VCFS are stored gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations smid (String, required ): SM- prefixed ID Optional artificial_baseQ_for_CLR (Int?): An artificial value for CLR reads used for fingerprint verification (CLR reads come with all 0 base qual) use_this_fp_vcf (File?): Optional gt VCF, if provided, used for fingerprint verification (fingerprint_store, smid, collaborator_smid, collaborator_participant_id will all be ignored) CheckCLRFingerprint.runtime_attr_override (RuntimeAttr?) CheckFingerprint.runtime_attr_override (RuntimeAttr?) ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) FinalizeFingerprintDetailMetrics.keyfile (File?) FinalizeFingerprintDetailMetrics.name (String?) FinalizeFingerprintDetailMetrics.runtime_attr_override (RuntimeAttr?) FinalizeFingerprintSummaryMetrics.keyfile (File?) FinalizeFingerprintSummaryMetrics.name (String?) FinalizeFingerprintSummaryMetrics.runtime_attr_override (RuntimeAttr?) GetVCFSampleName.runtime_attr_override (RuntimeAttr?) ResetCLRBaseQual.runtime_attr_override (RuntimeAttr?) Defaults FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV']) Outputs lod_expected_sample (Float) fingerprint_metrics (File) fingerprint_details (File) Dot Diagram","title":"VerifyFingerprint"},{"location":"workflows/VerifyFingerprint/#verifyfingerprint","text":"","title":"VerifyFingerprint"},{"location":"workflows/VerifyFingerprint/#verifyfingerprint_1","text":"description A workflow to check correctness of metadata on a flowcell, by genotyping it's BAM generated with its metadata, against a 'truth' genotyped VCF.","title":"VerifyFingerprint"},{"location":"workflows/VerifyFingerprint/#inputs","text":"","title":"Inputs"},{"location":"workflows/VerifyFingerprint/#required","text":"aligned_bai (File, required ) aligned_bam (File, required ): GCS path to aligned BAM file, supposed to be of the same sample as from the fingerprinting VCF collaborator_participant_id (String, required ): Collaborator participant ID collaborator_smid (String, required ): Collaborator sample ID expt_type (String, required ): There will be special treatment for 'CLR' data (minimum base quality for bases used when computing a fingerprint) fingerprint_store (String, required ): GS path to where all known fingerprinting GT'ed VCFS are stored gcs_out_root_dir (String, required ): GCS bucket to store the reads, variants, and metrics files ref_map_file (File, required ): table indicating reference sequence and auxillary file locations smid (String, required ): SM- prefixed ID","title":"Required"},{"location":"workflows/VerifyFingerprint/#optional","text":"artificial_baseQ_for_CLR (Int?): An artificial value for CLR reads used for fingerprint verification (CLR reads come with all 0 base qual) use_this_fp_vcf (File?): Optional gt VCF, if provided, used for fingerprint verification (fingerprint_store, smid, collaborator_smid, collaborator_participant_id will all be ignored) CheckCLRFingerprint.runtime_attr_override (RuntimeAttr?) CheckFingerprint.runtime_attr_override (RuntimeAttr?) ExtractRelevantGenotypingReads.runtime_attr_override (RuntimeAttr?) FinalizeFingerprintDetailMetrics.keyfile (File?) FinalizeFingerprintDetailMetrics.name (String?) FinalizeFingerprintDetailMetrics.runtime_attr_override (RuntimeAttr?) FinalizeFingerprintSummaryMetrics.keyfile (File?) FinalizeFingerprintSummaryMetrics.name (String?) FinalizeFingerprintSummaryMetrics.runtime_attr_override (RuntimeAttr?) GetVCFSampleName.runtime_attr_override (RuntimeAttr?) ResetCLRBaseQual.runtime_attr_override (RuntimeAttr?)","title":"Optional"},{"location":"workflows/VerifyFingerprint/#defaults","text":"FilterGenotypesVCF.filters (Array[String], default=['_random\\t', '_decoy\\t', '_alt\\t', '^chrUn', '^HLA', '^EBV'])","title":"Defaults"},{"location":"workflows/VerifyFingerprint/#outputs","text":"lod_expected_sample (Float) fingerprint_metrics (File) fingerprint_details (File)","title":"Outputs"},{"location":"workflows/VerifyFingerprint/#dot-diagram","text":"","title":"Dot Diagram"}]}